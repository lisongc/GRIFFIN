/*-----------------------------------------------------------------------------
ff.cc
Lisong Chen (lic114@pitt.edu), Ayres Freitas (afreitas@pitt.edu)
last revision: 23 Nov 2021
-------------------------------------------------------------------------------
one-loop self-energy, vertex and box form factors
-----------------------------------------------------------------------------*/

#include <math.h>
#include "ff.h"
#include "oneloop.h"
#include "li.h"
#include "ff1.in"

// real part of fermionic one-loop Z self-energy for k^2 = s
double rsz1f(const inval &input, double s)
{
    double MZs = sqr(input.get(MZ)),
           MWs = sqr(input.get(MW)),
           MHs = sqr(input.get(MH)),
           MTs = sqr(input.get(MT)),
           MBs = sqr(input.get(MB)),
           EL = sqrt(4 * Pi * input.get(al)),
           deltaAlpha = input.get(Delal),
           res;
    res = (EL * EL * (-128 * (MTs * MTs) * (sqr(MWs)) * MZs + 160 * (MTs * MTs) * MWs * (MZs * MZs) - 640 * MTs * (sqr(MWs)) * (MZs * MZs) - 14 * (MTs * MTs) * (trip(MZs)) + 800 * MTs * MWs * (trip(MZs)) + 192 * (sqr(MWs)) * (trip(MZs)) - 439 * MTs * (trip(MZs) * MZs) - 240 * MWs * (trip(MZs) * MZs) + 120 * (trip(MZs) * MZs * MZs) + 128 * (MTs * MTs) * (sqr(MWs)) * s - 160 * (MTs * MTs) * MWs * MZs * s + 640 * MTs * (sqr(MWs)) * MZs * s + 14 * (MTs * MTs) * (MZs * MZs) * s - 800 * MTs * MWs * (MZs * MZs) * s - 192 * (sqr(MWs)) * (MZs * MZs) * s + 439 * MTs * (trip(MZs)) * s + 240 * MWs * (trip(MZs)) * s - 120 * (trip(MZs) * MZs) * s)) / (288. * MWs * (MWs - MZs) * MZs * (-4 * MTs + MZs) * (Pi * Pi)) +
          (EL * EL * (MTs * (64 * (sqr(MWs)) - 80 * MWs * MZs + 7 * (MZs * MZs)) + MZs * (32 * (sqr(MWs)) - 40 * MWs * MZs + 17 * (MZs * MZs))) * (MZs - s) * A0fin(MTs)) /
              (144. * MWs * (MWs - MZs) * MZs * (-4 * MTs + MZs) * (Pi * Pi)) +
          (EL * EL * (160 * (sqr(MWs)) - 200 * MWs * MZs + 103 * (MZs * MZs)) * s * real(B0fin(MZs, 0, 0))) /
              (288. * MWs * (MWs - MZs) * (Pi * Pi)) +
          (EL * EL *
           (-384 * (MTs * MTs) * (sqr(MWs)) * MZs + 480 * (MTs * MTs) * MWs * (MZs * MZs) - 42 * (MTs * MTs) * (trip(MZs)) -
            27 * MTs * (trip(MZs) * MZs) + 128 * (MTs * MTs) * (sqr(MWs)) * s - 160 * (MTs * MTs) * MWs * MZs * s -
            64 * MTs * (sqr(MWs)) * MZs * s + 14 * (MTs * MTs) * (MZs * MZs) * s + 80 * MTs * MWs * (MZs * MZs) * s +
            32 * (sqr(MWs)) * (MZs * MZs) * s - 34 * MTs * (trip(MZs)) * s - 40 * MWs * (trip(MZs)) * s +
            17 * (trip(MZs) * MZs) * s) *
           real(B0fin(MZs, MTs, MTs))) /
              (288. * MWs * (MWs - MZs) * MZs * (-4 * MTs + MZs) * (Pi * Pi)) +
          (EL * EL * (640 * MTs * (sqr(MWs)) * MZs * s - 800 * MTs * MWs * (MZs * MZs) * s - 160 * (sqr(MWs)) * (MZs * MZs) * s + 412 * MTs * (trip(MZs)) * s + 200 * MWs * (trip(MZs)) * s - 103 * (trip(MZs) * MZs) * s) *
           real(B0fin(s, 0, 0))) /
              (288. * MWs * (MWs - MZs) * MZs * (-4 * MTs + MZs) * (Pi * Pi)) +
          (EL * EL * (256 * (MTs * MTs) * (sqr(MWs)) * MZs - 320 * (MTs * MTs) * MWs * (MZs * MZs) - 64 * MTs * (sqr(MWs)) * (MZs * MZs) + 28 * (MTs * MTs) * (trip(MZs)) + 80 * MTs * MWs * (trip(MZs)) - 7 * MTs * (trip(MZs) * MZs) + 128 * MTs * (sqr(MWs)) * MZs * s - 160 * MTs * MWs * (MZs * MZs) * s - 32 * (sqr(MWs)) * (MZs * MZs) * s + 68 * MTs * (trip(MZs)) * s + 40 * MWs * (trip(MZs)) * s - 17 * (trip(MZs) * MZs) * s) * real(B0fin(s, MTs, MTs))) /
              (288. * MWs * (MWs - MZs) * MZs * (-4 * MTs + MZs) * (Pi * Pi));
    return (res);
}
// imag. part of fermionic one-loop Z self-energy for k^2 = s
double isz1f(const inval &input, double s)
{
    double MZs = sqr(input.get(MZ)),
           MWs = sqr(input.get(MW)),
           MHs = sqr(input.get(MH)),
           MTs = sqr(input.get(MT)),
           MBs = sqr(input.get(MB)),
           EL = sqrt(4 * Pi * input.get(al)),
           deltaAlpha = input.get(Delal),
           CW = sqrt(MWs / MZs),
           SW = sqrt(1 - sqr(CW)),
           res;
    res = (EL * EL * (s * (63 - 120 * (SW * SW) + 160 * (SW * SW * SW * SW)) * imag(B0fin(s, 0, 0)) + (s * (9 - 24 * (SW * SW) + 32 * (SW * SW * SW * SW)) + MTs * (-9 - 48 * (SW * SW) + 64 * (SW * SW * SW * SW))) * imag(B0fin(s, MTs, MTs)))) /
          (288. * (CW * CW) * (Pi * Pi) * (SW * SW));
    return (res);
}
// real part of bosonic one-loop Z self-energy for k^2 = s
double rsz1b(const inval &input, double s)
{
    double MZs = sqr(input.get(MZ)),
           MWs = sqr(input.get(MW)),
           MHs = sqr(input.get(MH)),
           MTs = sqr(input.get(MT)),
           MBs = sqr(input.get(MB)),
           EL = sqrt(4 * Pi * input.get(al)),
           deltaAlpha = input.get(Delal),
           res;
    res = (EL * EL * (-24 * (sqr(MHs)) * (trip(MWs)) * MZs * s - 28 * (sqr(MHs)) * (sqr(MWs)) * (MZs * MZs) * s + 96 * MHs * (trip(MWs)) * (MZs * MZs) * s - sqr(MHs) * MHs * (trip(MZs)) * s + 18 * (sqr(MHs)) * MWs * (trip(MZs)) * s + 112 * MHs * (sqr(MWs)) * (trip(MZs)) * s + 5 * (sqr(MHs)) * (trip(MZs) * MZs) * s - 72 * MHs * MWs * (trip(MZs) * MZs) * s - 16 * MHs * (trip(MZs) * MZs * MZs) * s + 24 * (sqr(MHs)) * (trip(MWs)) * (s * s) + 28 * (sqr(MHs)) * (sqr(MWs)) * MZs * (s * s) - 96 * MHs * (trip(MWs)) * MZs * (s * s) + sqr(MHs) * MHs * (MZs * MZs) * (s * s) - 18 * (sqr(MHs)) * MWs * (MZs * MZs) * (s * s) - 112 * MHs * (sqr(MWs)) * (MZs * MZs) * (s * s) - 5 * (sqr(MHs)) * (trip(MZs)) * (s * s) + 72 * MHs * MWs * (trip(MZs)) * (s * s) + 16 * MHs * (trip(MZs) * MZs) * (s * s))) / (192. * MHs * MWs * (MHs - 4 * MZs) * (MWs - MZs) * MZs * (Pi * Pi) * s) + (EL * EL * (24 * (trip(MZs)) * (MZs - s) * s + sqr(MHs) * MZs * (-5 * (MZs * MZs) + 16 * MZs * s - 11 * (s * s)) + sqr(MHs) * MHs * (sqr(MZs) - 3 * MZs * s + 2 * (s * s)) + 4 * MHs * (MZs * MZs) * (sqr(MZs) - 7 * MZs * s + 6 * (s * s))) * A0fin(MHs)) / (192. * MHs * MWs * (MHs - 4 * MZs) * (MWs - MZs) * (Pi * Pi) * s) + (EL * EL * (12 * (sqr(MWs)) + 20 * MWs * MZs + MZs * MZs) * (MZs - s) * A0fin(MWs)) / (96. * MWs * (MWs - MZs) * MZs * (Pi * Pi)) - (EL * EL * (MZs - s) * (4 * (MZs * MZs) * (MZs - 4 * s) + sqr(MHs) * (MZs - 2 * s) + MHs * MZs * (-5 * MZs + 9 * s)) * A0fin(MZs)) / (192. * MWs * (MHs - 4 * MZs) * (MWs - MZs) * (Pi * Pi) * s) + (EL * EL * (3 * (sqr(MHs) * sqr(MHs)) * (MZs * MZs) * s - 21 * (sqr(MHs) * MHs) * (trip(MZs)) * s + 60 * (sqr(MHs)) * (trip(MZs) * MZs) * s - 84 * MHs * (trip(MZs) * MZs * MZs) * s - 2 * (sqr(MHs) * sqr(MHs)) * MZs * (s * s) + 13 * (sqr(MHs) * MHs) * (MZs * MZs) * (s * s) - 32 * (sqr(MHs)) * (trip(MZs)) * (s * s) + 36 * MHs * (trip(MZs) * MZs) * (s * s)) * real(B0fin(MZs, MHs, MZs))) / (192. * MHs * MWs * (MHs - 4 * MZs) * (MWs - MZs) * MZs * (Pi * Pi) * s) + (EL * EL * (-72 * (sqr(MHs)) * (trip(MWs)) * MZs * s - 72 * (sqr(MHs)) * (sqr(MWs)) * (MZs * MZs) * s + 288 * MHs * (trip(MWs)) * (MZs * MZs) * s + 18 * (sqr(MHs)) * MWs * (trip(MZs)) * s + 288 * MHs * (sqr(MWs)) * (trip(MZs)) * s - 72 * MHs * MWs * (trip(MZs) * MZs) * s + 24 * (sqr(MHs)) * (trip(MWs)) * (s * s) + 4 * (sqr(MHs)) * (sqr(MWs)) * MZs * (s * s) - 96 * MHs * (trip(MWs)) * MZs * (s * s) - 2 * (sqr(MHs)) * MWs * (MZs * MZs) * (s * s) - 16 * MHs * (sqr(MWs)) * (MZs * MZs) * (s * s) + sqr(MHs) * (trip(MZs)) * (s * s) + 8 * MHs * MWs * (trip(MZs)) * (s * s) - 4 * MHs * (trip(MZs) * MZs) * (s * s)) * real(B0fin(MZs, MWs, MWs))) / (192. * MHs * MWs * (MHs - 4 * MZs) * (MWs - MZs) * MZs * (Pi * Pi) * s) + (EL * EL * (-(sqr(MHs) * sqr(MHs) * (trip(MZs))) + 6 * (sqr(MHs) * MHs) * (trip(MZs) * MZs) - 9 * (sqr(MHs)) * (trip(MZs) * MZs * MZs) + 4 * MHs * (trip(MZs) * trip(MZs)) + 2 * (sqr(MHs) * MHs) * (trip(MZs)) * s - 18 * (sqr(MHs)) * (trip(MZs) * MZs) * s + 40 * MHs * (trip(MZs) * MZs * MZs) * s - sqr(MHs) * (trip(MZs)) * (s * s) + 4 * MHs * (trip(MZs) * MZs) * (s * s)) * real(B0fin(s, MHs, MZs))) / (192. * MHs * MWs * (MHs - 4 * MZs) * (MWs - MZs) * MZs * (Pi * Pi) * s) + (EL * EL * (48 * (sqr(MHs)) * (trip(MWs)) * MZs * s + 32 * (sqr(MHs)) * (sqr(MWs)) * (MZs * MZs) * s - 192 * MHs * (trip(MWs)) * (MZs * MZs) * s - 20 * (sqr(MHs)) * MWs * (trip(MZs)) * s - 128 * MHs * (sqr(MWs)) * (trip(MZs)) * s + 80 * MHs * MWs * (trip(MZs) * MZs) * s + 36 * (sqr(MHs)) * (sqr(MWs)) * MZs * (s * s) + 4 * (sqr(MHs)) * MWs * (MZs * MZs) * (s * s) - 144 * MHs * (sqr(MWs)) * (MZs * MZs) * (s * s) - sqr(MHs) * (trip(MZs)) * (s * s) - 16 * MHs * MWs * (trip(MZs)) * (s * s) + 4 * MHs * (trip(MZs) * MZs) * (s * s)) * real(B0fin(s, MWs, MWs))) / (192. * MHs * MWs * (MHs - 4 * MZs) * (MWs - MZs) * MZs * (Pi * Pi) * s);
    return (res);
}
// imag. par of bosonic 1-loop Z self-energy for k^2 = s
double isz1b(const inval &input, double s)
{
    double MZs = sqr(input.get(MZ)),
           MWs = sqr(input.get(MW)),
           MHs = sqr(input.get(MH)),
           MTs = sqr(input.get(MT)),
           MBs = sqr(input.get(MB)),
           EL = sqrt(4 * Pi * input.get(al)),
           deltaAlpha = input.get(Delal),
           CW = sqrt(MWs / MZs),
           SW = sqrt(1 - MWs / MZs),
           res;
    res = (EL * EL * ((12 * MWs * s + CW * CW * (MHs * MHs + (MZs - s) * (MZs - s) - 2 * MHs * (MZs + s))) * imag(B0fin(s, MHs, MZs)) + CW * CW * s * (-3 * (CW * CW * CW * CW) * (20 * MWs + 13 * s) + 2 * (CW * CW) * (4 * MWs - s) * (SW * SW) + (20 * MWs + s) * (SW * SW * SW * SW)) * imag(B0fin(s, MWs, MWs)))) / (192. * (CW * CW * CW * CW) * (Pi * Pi) * s * (SW * SW));
    return (res);
}

// real part of fermionic one-loop photon self-energy for k^2 = s
double rsg1f(const inval &input, double s)
{
    double MZs = sqr(input.get(MZ)),
           MWs = sqr(input.get(MW)),
           MHs = sqr(input.get(MH)),
           MTs = sqr(input.get(MT)),
           deltaAlpha = input.get(Delal),
           AL = input.get(al);
    return (-(deltaAlpha * s) + (8 * AL * (3 * MTs + s)) / (27. * Pi) - (4 * AL * (2 * MTs + s) * A0fin(MTs)) / (9. * MTs * Pi) -
            (20 * AL * s * real(B0fin(MZs, 0, 0))) / (9. * Pi) + (20 * AL * s * real(B0fin(s, 0, 0))) / (9. * Pi) + (4 * AL * (2 * MTs + s) * real(B0fin(s, MTs, MTs))) / (9. * Pi));
}
// imag. part of fermionic one-loop photon self-energy for k^2 = s
double isg1f(const inval &input, double s)
{
    double MZs = sqr(input.get(MZ)),
           MWs = sqr(input.get(MW)),
           MHs = sqr(input.get(MH)),
           MTs = sqr(input.get(MT)),
           deltaAlpha = input.get(Delal),
           AL = input.get(al);
    return (4 * AL * (5 * s * imag(B0fin(s, 0, 0)) + (2 * MTs + s) * imag(B0fin(s, MTs, MTs))) / (9. * Pi));
}

// real part of bosonic one-loop photon self-energy for k^2 = s
double rsg1b(const inval &input, double s)
{
    double MZs = sqr(input.get(MZ)),
           MWs = sqr(input.get(MW)),
           MHs = sqr(input.get(MH)),
           MTs = sqr(input.get(MT)),
           deltaAlpha = input.get(Delal),
           AL = input.get(al);
    return (-(AL * (12 * MWs + 7 * s)) / (12. * Pi) + (AL * (4 * MWs + 3 * s) * A0fin(MWs)) / (4. * MWs * Pi) - (AL * (4 * MWs + 3 * s) * real(B0fin(s, MWs, MWs))) / (4. * Pi));
}
// imag. part of bosonic one-loop photon self-energy for k^2 = s
double isg1b(const inval &input, double s)
{
    double MZs = sqr(input.get(MZ)),
           MWs = sqr(input.get(MW)),
           MHs = sqr(input.get(MH)),
           MTs = sqr(input.get(MT)),
           deltaAlpha = input.get(Delal),
           EL = sqrt(4 * Pi * input.get(al)),
           AL = input.get(al);

    return (-(AL * (4 * MWs + 3 * s) * imag(B0fin(s, MWs, MWs))) / (4. * Pi));
}

// real part of fermionic 1-loop photon vertex factor for k^2 = s
double rg1f(int type, int form, const inval &input, double s)
{
    double MZs = sqr(input.get(MZ)),
           MWs = sqr(input.get(MW)),
           MHs = sqr(input.get(MH)),
           MTs = sqr(input.get(MT)),
           EL = sqrt(4 * Pi * input.get(al)),
           deltaAlpha = input.get(Delal),
           res;
    switch (form)
    {
    case VEC:
        switch (type)
        {
        case LEP:
            res = 0;
            break;
        case NEU:
            res = 0;
            break;
        case UQU:
            res = 0;
            break;
        case DQU:
            res = 0;
            break;
        case BQU:
            res = 0;
            break;
        }
        break;

    case AXV:
        switch (type)
        {
        case LEP:
            res = 0;
            break;
        case NEU:
            res = 0;
            break;
        case UQU:
            res = 0;
            break;
        case DQU:
            res = 0;
            break;
        case BQU:
            res = 0;
            break;
        }
        break;
    }
    return (res * 1);
}
// imag. part of fermionic one-loop photon vertex factor for k^2=mz^2
double ig1f(int type, int form, const inval &input, double s)
{
    double MZs = sqr(input.get(MZ)),
           MWs = sqr(input.get(MW)),
           MHs = sqr(input.get(MH)),
           MTs = sqr(input.get(MT)),
           MBs = sqr(input.get(MB)),
           AL = input.get(al),
           res;
    switch (form)
    {
    case VEC:
        switch (type)
        {
        case LEP:
            res = 0;
            break;
        case NEU:
            res = 0;
            break;
        case UQU:
            res = 0;
            break;
        case DQU:
            res = 0;
            break;
        case BQU:
            res = 0;
            break;
        }
        break;
    case AXV:
        switch (type)
        {
        case LEP:
            res = 0;
            break;
        case NEU:
            res = 0;
            break;
        case UQU:
            res = 0;
            break;
        case DQU:
            res = 0;
            break;
        case BQU:
            res = 0;
            break;
        }
        break;
    }
    return (res * 1);
}
// real part of bosonic one-loop photon vertex factor for k^2 = s
double rg1b(int type, int form, const inval &input, double s)
{
    double MZs = sqr(input.get(MZ)),
           MWs = sqr(input.get(MW)),
           MHs = sqr(input.get(MH)),
           MTs = sqr(input.get(MT)),
           MBs = sqr(input.get(MB)),
           AL = input.get(al),
           res;
    switch (form)
    {
    case VEC:
        switch (type)
        {
        case LEP:
            res = (pow(AL, 1.5) * (-8 * (MWs * MWs) * MZs * s + 26 * MWs * (MZs * MZs) * s - 5 * (MZs * MZs * MZs) * s)) / (32. * MWs * MZs * (-MWs + MZs) * sqrt(Pi) * s) +
                  (pow(AL, 1.5) * MZs * (2 * MWs + s) * A0fin(MWs)) / (8. * MWs * (-MWs + MZs) * sqrt(Pi) * s) +
                  (pow(AL, 1.5) * (8 * (MWs * MWs) - 12 * MWs * MZs + 5 * (MZs * MZs)) * (2 * MZs + 3 * s) * A0fin(MZs)) / (16. * MWs * MZs * (-MWs + MZs) * sqrt(Pi) * s) -
                  (pow(AL, 1.5) * (8 * (MWs * MWs) - 12 * MWs * MZs + 5 * (MZs * MZs)) * (2 * MZs + 3 * s) * real(B0fin(s, 0, 0))) / (16. * MWs * (-MWs + MZs) * sqrt(Pi) * s) -
                  (pow(AL, 1.5) * MZs * (2 * MWs + s) * real(B0fin(s, MWs, MWs))) / (8. * (-MWs + MZs) * sqrt(Pi) * s) +
                  (pow(AL, 1.5) * (-32 * (MWs * MWs) * (MZs * MZs * MZs) + 48 * MWs * (MZs * MZs * MZs * MZs) - 20 * (MZs * MZs * MZs * MZs * MZs) - 64 * (MWs * MWs) * (MZs * MZs) * s + 96 * MWs * (MZs * MZs * MZs) * s - 40 * (MZs * MZs * MZs * MZs) * s - 32 * (MWs * MWs) * MZs * (s * s) + 48 * MWs * (MZs * MZs) * (s * s) - 20 * (MZs * MZs * MZs) * (s * s)) * real(C0(s, 0, 0, 0, 0, MZs))) / (32. * MWs * MZs * (-MWs + MZs) * sqrt(Pi) * s) +
                  (pow(AL, 1.5) * (8 * (MWs * MWs * MWs) * (MZs * MZs) + 16 * (MWs * MWs) * (MZs * MZs) * s) * real(C0(s, 0, 0, MWs, MWs, 0))) /
                      (32. * MWs * MZs * (-MWs + MZs) * sqrt(Pi) * s);
            break;
        case NEU:
            res = (pow(AL, 1.5) * MZs) / (2. * (MWs - MZs) * sqrt(Pi)) - (pow(AL, 1.5) * MZs * A0fin(MWs)) / (4. * MWs * (MWs - MZs) * sqrt(Pi)) +
                  (pow(AL, 1.5) * MZs * (2 * MWs + 3 * s) * real(B0fin(s, 0, 0))) / (8. * (MWs - MZs) * sqrt(Pi) * s) -
                  (pow(AL, 1.5) * MZs * (2 * MWs + s) * real(B0fin(s, MWs, MWs))) / (8. * (MWs - MZs) * sqrt(Pi) * s) +
                  (pow(AL, 1.5) * MZs * ((MWs + s) * (MWs + s)) * real(C0(s, 0, 0, 0, 0, MWs))) / (4. * (MWs - MZs) * sqrt(Pi) * s) +
                  (pow(AL, 1.5) * MWs * MZs * (MWs + 2 * s) * real(C0(s, 0, 0, MWs, MWs, 0))) / (4. * (MWs - MZs) * sqrt(Pi) * s);
            break;
        case UQU:
            res = (pow(AL, 1.5) * (MZs * (-32 * (MWs * MWs) + 238 * MWs * MZs - 17 * (MZs * MZs)) * s + 72 * MWs * (MZs * MZs) * A0fin(MWs) +
                                   2 * (32 * (MWs * MWs) - 40 * MWs * MZs + 17 * (MZs * MZs)) * (2 * MZs + 3 * s) * A0fin(MZs))) /
                      (432. * MWs * (MWs - MZs) * MZs * sqrt(Pi) * s) +
                  (pow(AL, 1.5) * (-46 * MWs * MZs + 34 * (MZs * MZs) - 96 * MWs * s + 51 * MZs * s) * real(B0fin(s, 0, 0))) / (216. * MWs * sqrt(Pi) * s) +
                  (pow(AL, 1.5) * MZs * (2 * MWs + s) * real(B0fin(s, MWs, MWs))) / (8. * (-MWs + MZs) * sqrt(Pi) * s) +
                  (pow(AL, 1.5) * MZs * ((MWs + s) * (MWs + s)) * real(C0(s, 0, 0, 0, 0, MWs))) / (12. * (MWs - MZs) * sqrt(Pi) * s) -
                  (pow(AL, 1.5) * (32 * (MWs * MWs) - 40 * MWs * MZs + 17 * (MZs * MZs)) * ((MZs + s) * (MZs + s)) * real(C0(s, 0, 0, 0, 0, MZs))) /
                      (108. * MWs * (MWs - MZs) * sqrt(Pi) * s) +
                  (pow(AL, 1.5) * MWs * MZs * (MWs + 2 * s) * real(C0(s, 0, 0, MWs, MWs, 0))) / (4. * (MWs - MZs) * sqrt(Pi) * s);
            break;
        case DQU:
            res = (pow(AL, 1.5) * (MZs * (8 * (MWs * MWs) - 418 * MWs * MZs + 5 * (MZs * MZs)) * s - 36 * (MZs * MZs) * (2 * MWs - 3 * s) * A0fin(MWs) -
                                   2 * (8 * (MWs * MWs) - 4 * MWs * MZs + 5 * (MZs * MZs)) * (2 * MZs + 3 * s) * A0fin(MZs))) /
                      (864. * MWs * (MWs - MZs) * MZs * sqrt(Pi) * s) +
                  (pow(AL, 1.5) * (8 * (MWs * MWs) * (7 * MZs - 3 * s) - 5 * (MZs * MZs) * (2 * MZs + 3 * s) + 8 * MWs * MZs * (MZs + 15 * s)) * real(B0fin(s, 0, 0))) /
                      (432. * MWs * (-MWs + MZs) * sqrt(Pi) * s) -
                  (pow(AL, 1.5) * MZs * (2 * MWs + s) * real(B0fin(s, MWs, MWs))) / (8. * (-MWs + MZs) * sqrt(Pi) * s) -
                  (pow(AL, 1.5) * MZs * ((MWs + s) * (MWs + s)) * real(C0(s, 0, 0, 0, 0, MWs))) / (6. * (MWs - MZs) * sqrt(Pi) * s) +
                  (pow(AL, 1.5) * (8 * (MWs * MWs) - 4 * MWs * MZs + 5 * (MZs * MZs)) * ((MZs + s) * (MZs + s)) * real(C0(s, 0, 0, 0, 0, MZs))) /
                      (216. * MWs * (MWs - MZs) * sqrt(Pi) * s) -
                  (pow(AL, 1.5) * MWs * MZs * (MWs + 2 * s) * real(C0(s, 0, 0, MWs, MWs, 0))) / (4. * (MWs - MZs) * sqrt(Pi) * s);
            break;
        case BQU:
            res = (pow(AL, 1.5) * (18 * (MZs * MZs) * (2 * (MTs * MTs * MTs) + MTs * MTs * s - 6 * MTs * MWs * (MWs + s) + 4 * (MWs * MWs) * (MWs + 2 * s)) * A0fin(MTs) -
                                   18 * (MZs * MZs) * (2 * (MTs * MTs * MTs) + 2 * (MWs * MWs) * (2 * MWs - 3 * s) - 10 * (MTs * MTs) * s + MTs * MWs * (-6 * MWs + 19 * s)) * A0fin(MWs) -
                                   (MTs - MWs) * (MZs * (81 * (MTs * MTs) * MZs + MTs * (-8 * (MWs * MWs) + 283 * MWs * MZs - 5 * (MZs * MZs)) + MWs * (8 * (MWs * MWs) - 418 * MWs * MZs + 5 * (MZs * MZs))) * s +
                                                  2 * (MTs - MWs) * (8 * (MWs * MWs) - 4 * MWs * MZs + 5 * (MZs * MZs)) * (2 * MZs + 3 * s) * A0fin(MZs)))) /
                      (864. * ((MTs - MWs) * (MTs - MWs)) * MWs * (MWs - MZs) * MZs * sqrt(Pi) * s) +
                  (pow(AL, 1.5) * (8 * (MWs * MWs) - 4 * MWs * MZs + 5 * (MZs * MZs)) * (2 * MZs + 3 * s) * real(B0fin(s, 0, 0))) / (432. * MWs * (MWs - MZs) * sqrt(Pi) * s) +
                  (pow(AL, 1.5) * MZs * (2 * (MTs * MTs) + MTs * (2 * MWs + s) - 2 * MWs * (2 * MWs + 3 * s)) * real(B0fin(s, MTs, MTs))) /
                      (24. * MWs * (MWs - MZs) * sqrt(Pi) * s) -
                  (pow(AL, 1.5) * MZs * (2 * (MTs * MTs) + MTs * (2 * MWs + s) - 2 * MWs * (2 * MWs + s)) *
                   real(B0fin(s, MWs, MWs))) /
                      (16. * MWs * (MWs - MZs) * sqrt(Pi) * s) +
                  (pow(AL, 1.5) * (8 * (MWs * MWs) - 4 * MWs * MZs + 5 * (MZs * MZs)) * ((MZs + s) * (MZs + s)) * real(C0(s, 0, 0, 0, 0, MZs))) /
                      (216. * MWs * (MWs - MZs) * sqrt(Pi) * s) -
                  (pow(AL, 1.5) * MZs *
                   (MTs * MTs * MTs + MTs * MTs * s + 2 * MWs * ((MWs + s) * (MWs + s)) - MTs * MWs * (3 * MWs + 2 * s)) * real(C0(s, 0, 0, MTs, MTs, MWs))) /
                      (12. * MWs * (MWs - MZs) * sqrt(Pi) * s) -
                  (pow(AL, 1.5) * MZs *
                   (MTs * MTs * MTs + MTs * MTs * s + 2 * (MWs * MWs) * (MWs + 2 * s) - MTs * MWs * (3 * MWs + 2 * s)) * real(C0(s, 0, 0, MWs, MWs, MTs))) /
                      (8. * MWs * (MWs - MZs) * sqrt(Pi) * s);
            break;
        }
        break;
    case AXV:
        switch (type)
        {
        case LEP:
            res = -(pow(AL, 1.5) * (MZs * (10 * MWs + 3 * MZs) * s + 4 * MZs * (2 * MWs + s) * A0fin(MWs) + 2 * (4 * MWs - 3 * MZs) * (2 * MZs + 3 * s) * A0fin(MZs))) /
                      (32. * MWs * (MWs - MZs) * sqrt(Pi) * s) +
                  (pow(AL, 1.5) * (4 * MWs - 3 * MZs) * MZs * (2 * MZs + 3 * s) * real(B0fin(s, 0, 0))) /
                      (16. * MWs * (MWs - MZs) * sqrt(Pi) * s) +
                  (pow(AL, 1.5) * MZs * (2 * MWs + s) * real(B0fin(s, MWs, MWs))) / (8. * (MWs - MZs) * sqrt(Pi) * s) +
                  (pow(AL, 1.5) * (4 * MWs - 3 * MZs) * MZs * ((MZs + s) * (MZs + s)) * real(C0(s, 0, 0, 0, 0, MZs))) / (8. * MWs * (MWs - MZs) * sqrt(Pi) * s) -
                  (pow(AL, 1.5) * MWs * MZs * (MWs + 2 * s) * real(C0(s, 0, 0, MWs, MWs, 0))) / (4. * (MWs - MZs) * sqrt(Pi) * s);
            break;
        case NEU:
            res = (pow(AL, 1.5) * MZs * (2 * MWs - A0fin(MWs))) / (4. * MWs * (MWs - MZs) * sqrt(Pi)) +
                  (pow(AL, 1.5) * MZs * (2 * MWs + 3 * s) * real(B0fin(s, 0, 0))) / (8. * (MWs - MZs) * sqrt(Pi) * s) -
                  (pow(AL, 1.5) * MZs * (2 * MWs + s) * real(B0fin(s, MWs, MWs))) / (8. * (MWs - MZs) * sqrt(Pi) * s) +
                  (pow(AL, 1.5) * MZs * ((MWs + s) * (MWs + s)) * real(C0(s, 0, 0, 0, 0, MWs))) / (4. * (MWs - MZs) * sqrt(Pi) * s) +
                  (pow(AL, 1.5) * MWs * MZs * (MWs + 2 * s) * real(C0(s, 0, 0, MWs, MWs, 0))) / (4. * (MWs - MZs) * sqrt(Pi) * s);
            break;
        case UQU:
            res = (pow(AL, 1.5) * (MZs * (58 * MWs + 5 * MZs) * s + 24 * MWs * MZs * A0fin(MWs) + 2 * (8 * MWs - 5 * MZs) * (2 * MZs + 3 * s) * A0fin(MZs))) /
                      (144. * MWs * (MWs - MZs) * sqrt(Pi) * s) +
                  (pow(AL, 1.5) * MZs * (6 * MWs - 5 * (2 * MZs + 3 * s)) * real(B0fin(s, 0, 0))) / (72. * MWs * sqrt(Pi) * s) -
                  (pow(AL, 1.5) * MZs * (2 * MWs + s) * real(B0fin(s, MWs, MWs))) / (8. * (MWs - MZs) * sqrt(Pi) * s) +
                  (pow(AL, 1.5) * MZs * ((MWs + s) * (MWs + s)) * real(C0(s, 0, 0, 0, 0, MWs))) / (12. * (MWs - MZs) * sqrt(Pi) * s) -
                  (pow(AL, 1.5) * (8 * MWs - 5 * MZs) * MZs * ((MZs + s) * (MZs + s)) * real(C0(s, 0, 0, 0, 0, MZs))) / (36. * MWs * (MWs - MZs) * sqrt(Pi) * s) +
                  (pow(AL, 1.5) * MWs * MZs * (MWs + 2 * s) * real(C0(s, 0, 0, MWs, MWs, 0))) / (4. * (MWs - MZs) * sqrt(Pi) * s);
            break;
        case DQU:
            res = -(pow(AL, 1.5) * (MZs * (134 * MWs + MZs) * s + 12 * MZs * (2 * MWs - 3 * s) * A0fin(MWs) + 2 * (4 * MWs - MZs) * (2 * MZs + 3 * s) * A0fin(MZs))) /
                      (288. * MWs * (MWs - MZs) * sqrt(Pi) * s) -
                  (pow(AL, 1.5) * MZs * (24 * (MWs * MWs) - 8 * MWs * (MZs - 3 * s) + MZs * (2 * MZs + 3 * s)) *
                   real(B0fin(s, 0, 0))) /
                      (144. * MWs * (MWs - MZs) * sqrt(Pi) * s) +
                  (pow(AL, 1.5) * MZs * (2 * MWs + s) * real(B0fin(s, MWs, MWs))) / (8. * (MWs - MZs) * sqrt(Pi) * s) -
                  (pow(AL, 1.5) * MZs * ((MWs + s) * (MWs + s)) * real(C0(s, 0, 0, 0, 0, MWs))) / (6. * (MWs - MZs) * sqrt(Pi) * s) +
                  (pow(AL, 1.5) * (4 * MWs - MZs) * MZs * ((MZs + s) * (MZs + s)) * real(C0(s, 0, 0, 0, 0, MZs))) / (72. * MWs * (MWs - MZs) * sqrt(Pi) * s) -
                  (pow(AL, 1.5) * MWs * MZs * (MWs + 2 * s) * real(C0(s, 0, 0, MWs, MWs, 0))) / (4. * (MWs - MZs) * sqrt(Pi) * s);
            break;
        case BQU:
            res = -(pow(AL, 1.5) * (-6 * MZs * (2 * (MTs * MTs * MTs) + MTs * MTs * s - 6 * MTs * MWs * (MWs + s) + 4 * (MWs * MWs) * (MWs + 2 * s)) * A0fin(MTs) +
                                    6 * MZs * (2 * (MTs * MTs * MTs) + 2 * (MWs * MWs) * (2 * MWs - 3 * s) - 10 * (MTs * MTs) * s + MTs * MWs * (-6 * MWs + 19 * s)) * A0fin(MWs) +
                                    (MTs - MWs) * (MZs * (27 * (MTs * MTs) + MTs * (89 * MWs + MZs) - MWs * (134 * MWs + MZs)) * s +
                                                   2 * (MTs - MWs) * (4 * MWs - MZs) * (2 * MZs + 3 * s) * A0fin(MZs)))) /
                      (288. * ((MTs - MWs) * (MTs - MWs)) * MWs * (MWs - MZs) * sqrt(Pi) * s) +
                  (pow(AL, 1.5) * (4 * MWs - MZs) * MZs * (2 * MZs + 3 * s) * real(B0fin(s, 0, 0))) / (144. * MWs * (MWs - MZs) * sqrt(Pi) * s) +
                  (pow(AL, 1.5) * MZs * (2 * (MTs * MTs) + MTs * (2 * MWs + s) - 2 * MWs * (2 * MWs + 3 * s)) * real(B0fin(s, MTs, MTs))) /
                      (24. * MWs * (MWs - MZs) * sqrt(Pi) * s) -
                  (pow(AL, 1.5) * MZs * (2 * (MTs * MTs) + MTs * (2 * MWs + s) - 2 * MWs * (2 * MWs + s)) *
                   real(B0fin(s, MWs, MWs))) /
                      (16. * MWs * (MWs - MZs) * sqrt(Pi) * s) +
                  (pow(AL, 1.5) * (4 * MWs - MZs) * MZs * ((MZs + s) * (MZs + s)) * real(C0(s, 0, 0, 0, 0, MZs))) / (72. * MWs * (MWs - MZs) * sqrt(Pi) * s) -
                  (pow(AL, 1.5) * MZs * (MTs * MTs * MTs + MTs * MTs * s + 2 * MWs * ((MWs + s) * (MWs + s)) - MTs * MWs * (3 * MWs + 2 * s)) * real(C0(s, 0, 0, MTs, MTs, MWs))) /
                      (12. * MWs * (MWs - MZs) * sqrt(Pi) * s) -
                  (pow(AL, 1.5) * MZs *
                   (MTs * MTs * MTs + MTs * MTs * s + 2 * (MWs * MWs) * (MWs + 2 * s) - MTs * MWs * (3 * MWs + 2 * s)) * real(C0(s, 0, 0, MWs, MWs, MTs))) /
                      (8. * MWs * (MWs - MZs) * sqrt(Pi) * s);
            break;
        }
        break;
    }
    return (res);
}

// imag. part of bosonic one-loop photon vertex factor for k^2 = s
double ig1b(int type, int form, const inval &input, double s)
{
    double MZs = sqr(input.get(MZ)),
           MWs = sqr(input.get(MW)),
           MHs = sqr(input.get(MH)),
           MTs = sqr(input.get(MT)),
           MBs = sqr(input.get(MB)),
           AL = input.get(al),
           res;
    switch (form)
    {
    case VEC:
        switch (type)
        {
        case LEP:
            res = (pow(AL, 1.5) * ((8 * (MWs * MWs) - 12 * MWs * MZs + 5 * (MZs * MZs)) * (2 * MZs + 3 * s) * imag(B0fin(s, 0, 0)) + 2 * MWs * MZs * (2 * MWs + s) * imag(B0fin(s, MWs, MWs)) +
                                   2 * (8 * (MWs * MWs) - 12 * MWs * MZs + 5 * (MZs * MZs)) * ((MZs + s) * (MZs + s)) * imag(C0(s, 0, 0, 0, 0, MZs)) -
                                   4 * (MWs * MWs) * MZs * (MWs + 2 * s) * imag(C0(s, 0, 0, MWs, MWs, 0)))) /
                  (16. * MWs * (MWs - MZs) * sqrt(Pi) * s);
            break;
        case NEU:
            res = (pow(AL, 1.5) * MZs * ((2 * MWs + 3 * s) * imag(B0fin(s, 0, 0)) - (2 * MWs + s) * imag(B0fin(s, MWs, MWs)) + 2 * ((MWs + s) * (MWs + s)) * imag(C0(s, 0, 0, 0, 0, MWs)) + 2 * MWs * (MWs + 2 * s) * imag(C0(s, 0, 0, MWs, MWs, 0)))) / (8. * (MWs - MZs) * sqrt(Pi) * s);
            break;
        case UQU:
            res = (pow(AL, 1.5) * (-((MWs - MZs) * (-17 * MZs * (2 * MZs + 3 * s) + MWs * (46 * MZs + 96 * s)) * imag(B0fin(s, 0, 0))) -
                                   27 * MWs * MZs * (2 * MWs + s) * imag(B0fin(s, MWs, MWs)) + 18 * MWs * MZs * ((MWs + s) * (MWs + s)) * imag(C0(s, 0, 0, 0, 0, MWs)) -
                                   2 * (32 * (MWs * MWs) - 40 * MWs * MZs + 17 * (MZs * MZs)) * ((MZs + s) * (MZs + s)) * imag(C0(s, 0, 0, 0, 0, MZs)) +
                                   54 * (MWs * MWs) * MZs * (MWs + 2 * s) * imag(C0(s, 0, 0, MWs, MWs, 0)))) /
                  (216. * MWs * (MWs - MZs) * sqrt(Pi) * s);
            break;
        case DQU:
            res = -(pow(AL, 1.5) * ((8 * (MWs * MWs) * (7 * MZs - 3 * s) - 5 * (MZs * MZs) * (2 * MZs + 3 * s) + 8 * MWs * MZs * (MZs + 15 * s)) * imag(B0fin(s, 0, 0)) + 2 * (-27 * MWs * MZs * (2 * MWs + s) * imag(B0fin(s, MWs, MWs)) + 36 * MWs * MZs * ((MWs + s) * (MWs + s)) * imag(C0(s, 0, 0, 0, 0, MWs)) - 8 * (MWs * MWs) * (MZs * MZs) * imag(C0(s, 0, 0, 0, 0, MZs)) + 4 * MWs * (MZs * MZs * MZs) * imag(C0(s, 0, 0, 0, 0, MZs)) - 5 * (MZs * MZs * MZs * MZs) * imag(C0(s, 0, 0, 0, 0, MZs)) - 16 * (MWs * MWs) * MZs * s * imag(C0(s, 0, 0, 0, 0, MZs)) + 8 * MWs * (MZs * MZs) * s * imag(C0(s, 0, 0, 0, 0, MZs)) - 10 * (MZs * MZs * MZs) * s * imag(C0(s, 0, 0, 0, 0, MZs)) - 8 * (MWs * MWs) * (s * s) * imag(C0(s, 0, 0, 0, 0, MZs)) + 4 * MWs * MZs * (s * s) * imag(C0(s, 0, 0, 0, 0, MZs)) - 5 * (MZs * MZs) * (s * s) * imag(C0(s, 0, 0, 0, 0, MZs)) + 54 * (MWs * MWs * MWs) * MZs * imag(C0(s, 0, 0, MWs, MWs, 0)) + 108 * (MWs * MWs) * MZs * s * imag(C0(s, 0, 0, MWs, MWs, 0))))) / (432. * MWs * (MWs - MZs) * sqrt(Pi) * s);

            break;
        case BQU:
            res = (pow(AL, 1.5) * ((8 * (MWs * MWs) - 4 * MWs * MZs + 5 * (MZs * MZs)) * (2 * MZs + 3 * s) * imag(B0fin(s, 0, 0)) +
                                   18 * MZs * (2 * (MTs * MTs) + MTs * (2 * MWs + s) - 2 * MWs * (2 * MWs + 3 * s)) * imag(B0fin(s, MTs, MTs)) -
                                   27 * MZs * (2 * (MTs * MTs) + MTs * (2 * MWs + s) - 2 * MWs * (2 * MWs + s)) * imag(B0fin(s, MWs, MWs)) +
                                   2 * (8 * (MWs * MWs) - 4 * MWs * MZs + 5 * (MZs * MZs)) * ((MZs + s) * (MZs + s)) * imag(C0(s, 0, 0, 0, 0, MZs)) -
                                   36 * MZs * (MTs * MTs * MTs + MTs * MTs * s + 2 * MWs * ((MWs + s) * (MWs + s)) - MTs * MWs * (3 * MWs + 2 * s)) * imag(C0(s, 0, 0, MTs, MTs, MWs)) -
                                   54 * MZs * (MTs * MTs * MTs + MTs * MTs * s + 2 * (MWs * MWs) * (MWs + 2 * s) - MTs * MWs * (3 * MWs + 2 * s)) * imag(C0(s, 0, 0, MWs, MWs, MTs)))) /
                  (432. * MWs * (MWs - MZs) * sqrt(Pi) * s);
            break;
        }
        break;
    case AXV:
        switch (type)
        {
        case LEP:
            res = -(pow(AL, 1.5) * MZs * (-((4 * MWs - 3 * MZs) * (2 * MZs + 3 * s) * imag(B0fin(s, 0, 0))) - 2 * MWs * (2 * MWs + s) * imag(B0fin(s, MWs, MWs)) - 8 * MWs * (MZs * MZs) * imag(C0(s, 0, 0, 0, 0, MZs)) + 6 * (MZs * MZs * MZs) * imag(C0(s, 0, 0, 0, 0, MZs)) - 16 * MWs * MZs * s * imag(C0(s, 0, 0, 0, 0, MZs)) + 12 * (MZs * MZs) * s * imag(C0(s, 0, 0, 0, 0, MZs)) - 8 * MWs * (s * s) * imag(C0(s, 0, 0, 0, 0, MZs)) + 6 * MZs * (s * s) * imag(C0(s, 0, 0, 0, 0, MZs)) + 4 * (MWs * MWs * MWs) * imag(C0(s, 0, 0, MWs, MWs, 0)) + 8 * (MWs * MWs) * s * imag(C0(s, 0, 0, MWs, MWs, 0)))) / (16. * MWs * (MWs - MZs) * sqrt(Pi) * s);
            break;
        case NEU:
            res = (pow(AL, 1.5) * MZs * ((2 * MWs + 3 * s) * imag(B0fin(s, 0, 0)) - (2 * MWs + s) * imag(B0fin(s, MWs, MWs)) + 2 * ((MWs + s) * (MWs + s)) * imag(C0(s, 0, 0, 0, 0, MWs)) + 2 * MWs * (MWs + 2 * s) * imag(C0(s, 0, 0, MWs, MWs, 0)))) / (8. * (MWs - MZs) * sqrt(Pi) * s);
            break;
        case UQU:
            res = (pow(AL, 1.5) * MZs * ((MWs - MZs) * (6 * MWs - 5 * (2 * MZs + 3 * s)) * imag(B0fin(s, 0, 0)) - 9 * MWs * (2 * MWs + s) * imag(B0fin(s, MWs, MWs)) + 6 * MWs * ((MWs + s) * (MWs + s)) * imag(C0(s, 0, 0, 0, 0, MWs)) - 2 * (8 * MWs - 5 * MZs) * ((MZs + s) * (MZs + s)) * imag(C0(s, 0, 0, 0, 0, MZs)) + 18 * (MWs * MWs) * (MWs + 2 * s) * imag(C0(s, 0, 0, MWs, MWs, 0)))) / (72. * MWs * (MWs - MZs) * sqrt(Pi) * s);
        case DQU:
            res = -(pow(AL, 1.5) * MZs * ((24 * (MWs * MWs) - 8 * MWs * (MZs - 3 * s) + MZs * (2 * MZs + 3 * s)) * imag(B0fin(s, 0, 0)) + 2 * (-9 * MWs * (2 * MWs + s) * imag(B0fin(s, MWs, MWs)) + 12 * MWs * ((MWs + s) * (MWs + s)) * imag(C0(s, 0, 0, 0, 0, MWs)) - 4 * MWs * (MZs * MZs) * imag(C0(s, 0, 0, 0, 0, MZs)) + MZs * MZs * MZs * imag(C0(s, 0, 0, 0, 0, MZs)) - 8 * MWs * MZs * s * imag(C0(s, 0, 0, 0, 0, MZs)) + 2 * (MZs * MZs) * s * imag(C0(s, 0, 0, 0, 0, MZs)) - 4 * MWs * (s * s) * imag(C0(s, 0, 0, 0, 0, MZs)) + MZs * (s * s) * imag(C0(s, 0, 0, 0, 0, MZs)) + 18 * (MWs * MWs * MWs) * imag(C0(s, 0, 0, MWs, MWs, 0)) + 36 * (MWs * MWs) * s * imag(C0(s, 0, 0, MWs, MWs, 0))))) / (144. * MWs * (MWs - MZs) * sqrt(Pi) * s);
            break;
        case BQU:
            res = -(pow(AL, 1.5) * MZs * (-((4 * MWs - MZs) * (2 * MZs + 3 * s) * imag(B0fin(s, 0, 0))) - 6 * (2 * (MTs * MTs) + 2 * MTs * MWs - 4 * (MWs * MWs) + MTs * s - 6 * MWs * s) * imag(B0fin(s, MTs, MTs)) + 18 * (MTs * MTs) * imag(B0fin(s, MWs, MWs)) + 18 * MTs * MWs * imag(B0fin(s, MWs, MWs)) - 36 * (MWs * MWs) * imag(B0fin(s, MWs, MWs)) + 9 * MTs * s * imag(B0fin(s, MWs, MWs)) - 18 * MWs * s * imag(B0fin(s, MWs, MWs)) - 8 * MWs * (MZs * MZs) * imag(C0(s, 0, 0, 0, 0, MZs)) + 2 * (MZs * MZs * MZs) * imag(C0(s, 0, 0, 0, 0, MZs)) - 16 * MWs * MZs * s * imag(C0(s, 0, 0, 0, 0, MZs)) + 4 * (MZs * MZs) * s * imag(C0(s, 0, 0, 0, 0, MZs)) - 8 * MWs * (s * s) * imag(C0(s, 0, 0, 0, 0, MZs)) + 2 * MZs * (s * s) * imag(C0(s, 0, 0, 0, 0, MZs)) + 12 * (MTs * MTs * MTs) * imag(C0(s, 0, 0, MTs, MTs, MWs)) - 36 * MTs * (MWs * MWs) * imag(C0(s, 0, 0, MTs, MTs, MWs)) + 24 * (MWs * MWs * MWs) * imag(C0(s, 0, 0, MTs, MTs, MWs)) + 12 * (MTs * MTs) * s * imag(C0(s, 0, 0, MTs, MTs, MWs)) - 24 * MTs * MWs * s * imag(C0(s, 0, 0, MTs, MTs, MWs)) + 48 * (MWs * MWs) * s * imag(C0(s, 0, 0, MTs, MTs, MWs)) + 24 * MWs * (s * s) * imag(C0(s, 0, 0, MTs, MTs, MWs)) + 18 * (MTs * MTs * MTs) * imag(C0(s, 0, 0, MWs, MWs, MTs)) - 54 * MTs * (MWs * MWs) * imag(C0(s, 0, 0, MWs, MWs, MTs)) + 36 * (MWs * MWs * MWs) * imag(C0(s, 0, 0, MWs, MWs, MTs)) + 18 * (MTs * MTs) * s * imag(C0(s, 0, 0, MWs, MWs, MTs)) - 36 * MTs * MWs * s * imag(C0(s, 0, 0, MWs, MWs, MTs)) + 72 * (MWs * MWs) * s * imag(C0(s, 0, 0, MWs, MWs, MTs)))) / (144. * MWs * (MWs - MZs) * sqrt(Pi) * s);
            break;
        }
        break;
    }
    return (res);
}

// real part of femrionic 1-loop Z vertex factor for k^2 = s
double rz1f(int type, int form, const inval &input, double s)
{
    double MZs = sqr(input.get(MZ)),
           MWs = sqr(input.get(MW)),
           MHs = sqr(input.get(MH)),
           MTs = sqr(input.get(MT)),
           EL = sqrt(4 * Pi * input.get(al)),
           deltaAlpha = input.get(Delal),
           res;
    switch (form)
    {
    case VEC:
        switch (type)
        {
        case LEP:
            res = (EL * (-864 * deltaAlpha * MTs * (sqr(MWs)) * MZs * (-4 * MTs + MZs) * (-MWs + MZs) *
                             (4 * (sqr(MWs)) - 7 * MWs * MZs + 3 * (sqr(MZs))) * (Pi * Pi) * s +
                         sqr(EL) * MTs * MWs * (-MWs + MZs) * (8 * (sqr(MZs)) * (320 * (sqr(MWs) * MWs) - 632 * (sqr(MWs)) * MZs + 474 * MWs * (sqr(MZs)) - 135 * (sqr(MZs) * MZs)) * s + MTs * MZs * (12 * MWs * (sqr(MZs)) * (80 * MZs - 1047 * s) - 64 * (sqr(MWs)) * MZs * (39 * MZs - 262 * s) + 512 * (sqr(MWs) * MWs) * (3 * MZs - 17 * s) + 3807 * (sqr(MZs) * MZs) * s) - 6 * (sqr(MTs)) * (-117 * (sqr(MZs) * MZs) * s + 256 * (sqr(MWs) * MWs) * (4 * MZs + s) - 128 * (sqr(MWs)) * MZs * (13 * MZs + 6 * s) + 4 * MWs * (sqr(MZs)) * (160 * MZs + 179 * s))) +
                         3 * (sqr(EL)) * (32 * (sqr(MWs)) * (4 * MWs - 3 * MZs) * ((MWs - MZs) * (MWs - MZs)) * (sqr(MZs)) * s + 36 * (sqr(MTs) * MTs) * (2 * MWs - 3 * MZs) * (sqr(MZs) * MZs) * s + 2 * MTs * MWs * (MWs - MZs) * MZs * (4 * MWs * (sqr(MZs)) * (40 * MZs - 67 * s) + 128 * (sqr(MWs) * MWs) * (2 * MZs - 3 * s) + 27 * (sqr(MZs) * MZs) * s + 32 * (sqr(MWs)) * MZs * (-13 * MZs + 20 * s)) + sqr(MTs) * (-252 * MWs * (sqr(MZs) * sqr(MZs)) * s + 27 * (sqr(MZs) * sqr(MZs) * MZs) * s - 512 * (sqr(MWs) * sqr(MWs) * MWs) * (4 * MZs + s) + 256 * (sqr(MWs) * sqr(MWs)) * MZs * (21 * MZs + 8 * s) - 8 * (sqr(MWs) * MWs) * (sqr(MZs)) * (576 * MZs + 371 * s) + 2 * (sqr(MWs)) * (sqr(MZs) * MZs) * (640 * MZs + 833 * s))) * A0fin(MTs) +
                         162 * (sqr(EL)) * MTs * (sqr(MWs)) * (sqr(MZs) * MZs) * (-4 * MTs + MZs) * (-2 * MWs + 3 * MZs) * s *
                             real(B0fin(MWs, 0, 0)) +
                         27 * (sqr(EL)) * MTs * (-MTs + MWs) * (MTs + 2 * MWs) * (sqr(MZs) * MZs) *
                             (-4 * MTs + MZs) * (-2 * MWs + 3 * MZs) * s * real(B0fin(MWs, 0, MTs)) +
                         3 * (sqr(EL)) * MTs * (sqr(MWs)) * MZs * (-4 * MTs + MZs) *
                             (1280 * (sqr(MWs) * MWs) - 3360 * (sqr(MWs)) * MZs + 3012 * MWs * (sqr(MZs)) - 995 * (sqr(MZs) * MZs)) * s *
                             real(B0fin(MZs, 0, 0)) -
                         3 * (sqr(EL)) * MTs * MWs *
                             (-2 * (sqr(MTs)) * (64 * (sqr(MWs)) - 80 * MWs * MZs + 7 * (sqr(MZs))) *
                                  (4 * (sqr(MWs)) - 11 * MWs * MZs + 9 * (sqr(MZs))) +
                              MWs * (sqr(MZs)) * (-4 * MWs + 5 * MZs) * (32 * (sqr(MWs)) - 40 * MWs * MZs + 17 * (sqr(MZs))) +
                              MTs * MZs * (256 * (sqr(MWs) * sqr(MWs)) - 640 * (sqr(MWs) * MWs) * MZs + 536 * (sqr(MWs)) * (sqr(MZs)) - 116 * MWs * (sqr(MZs) * MZs) - 81 * (sqr(MZs) * sqr(MZs)))) *
                             s * real(B0fin(MZs, MTs, MTs)) -
                         480 * (sqr(EL)) * MTs * (sqr(MWs)) * (8 * MWs - 5 * MZs) * ((MWs - MZs) * (MWs - MZs)) * MZs * (-4 * MTs + MZs) * s *
                             real(B0fin(s, 0, 0)) -
                         96 * (sqr(EL)) * MTs * (sqr(MWs)) * (8 * MWs - 5 * MZs) * ((MWs - MZs) * (MWs - MZs)) * MZs *
                             (-4 * MTs + MZs) * (2 * MTs + s) * real(B0fin(s, MTs, MTs)))) /
                  (6912. * MTs * (4 * MTs - MZs) * MZs * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s);
            break;
        case NEU:
            res = -(deltaAlpha * EL * (sqr(MWs)) * ((MWs - MZs) * (MWs - MZs)) * MZs * (-4 * MTs + MZs)) /
                      (8. * (4 * MTs - MZs) * pow(MWs * (-MWs + MZs), 2.5)) -
                  (trip(EL) * MWs * (MWs - MZs) * (6 * (sqr(MTs)) * (320 * (sqr(MWs)) - 272 * MWs * MZs + 39 * (sqr(MZs))) - 8 * (sqr(MZs)) * (80 * (sqr(MWs)) - 98 * MWs * MZs + 45 * (sqr(MZs))) + MTs * MZs * (1792 * (sqr(MWs)) - 2368 * MWs * MZs + 1269 * (sqr(MZs))))) /
                      (6912. * (4 * MTs - MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi)) +
                  (trip(EL) * (-32 * (sqr(MWs)) * ((MWs - MZs) * (MWs - MZs)) * (sqr(MZs)) + 36 * (sqr(MTs) * MTs) * (2 * MWs - MZs) * (sqr(MZs)) + 2 * MTs * MWs * MZs * (32 * (sqr(MWs) * MWs) - 88 * (sqr(MWs)) * MZs + 65 * MWs * (sqr(MZs)) - 9 * (sqr(MZs) * MZs)) + sqr(MTs) * (640 * (sqr(MWs) * sqr(MWs)) - 1184 * (sqr(MWs) * MWs) * MZs + 622 * (sqr(MWs)) * (sqr(MZs)) - 96 * MWs * (sqr(MZs) * MZs) + 9 * (sqr(MZs) * sqr(MZs)))) * A0fin(MTs)) /
                      (2304. * MTs * (4 * MTs - MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi)) -
                  (3 * (trip(EL)) * (sqr(MWs)) * (2 * MWs - MZs) * (sqr(MZs)) * (-4 * MTs + MZs) * real(B0fin(MWs, 0, 0))) /
                      (128. * (4 * MTs - MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi)) -
                  (trip(EL) * (sqr(MTs) + MTs * MWs - 2 * (sqr(MWs))) * (2 * MWs - MZs) * (sqr(MZs)) * real(B0fin(MWs, 0, MTs))) /
                      (256. * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi)) +
                  (trip(EL) * (sqr(MWs)) * (40 * MWs - 19 * MZs) * (sqr(MZs)) * (-4 * MTs + MZs) * real(B0fin(MZs, 0, 0))) /
                      (768. * (4 * MTs - MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi)) -
                  (trip(EL) * MWs * (MWs * (sqr(MZs)) * (-32 * (sqr(MWs)) + 40 * MWs * MZs - 17 * (sqr(MZs))) + MTs * MZs * (64 * (sqr(MWs) * MWs) - 80 * (sqr(MWs)) * MZs + 88 * MWs * (sqr(MZs)) - 27 * (sqr(MZs) * MZs)) + 2 * (sqr(MTs)) * (320 * (sqr(MWs) * MWs) - 592 * (sqr(MWs)) * MZs + 275 * MWs * (sqr(MZs)) - 21 * (sqr(MZs) * MZs))) * real(B0fin(MZs, MTs, MTs))) / (2304. * (4 * MTs - MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi));
            break;
        case UQU:
            res = -(EL * (12288 * (sqr(EL)) * (sqr(MTs) * MTs) * (sqr(MWs) * sqr(MWs)) * (MWs - MZs) * MZs - 19968 * (sqr(EL)) * (sqr(MTs) * MTs) * (sqr(MWs) * MWs) * (MWs - MZs) * (sqr(MZs)) - 3072 * (sqr(EL)) * (sqr(MTs)) * (sqr(MWs) * sqr(MWs)) * (MWs - MZs) * (sqr(MZs)) + 7680 * (sqr(EL)) * (sqr(MTs) * MTs) * (sqr(MWs)) * (MWs - MZs) * (sqr(MZs) * MZs) + 4992 * (sqr(EL)) * (sqr(MTs)) * (sqr(MWs) * MWs) * (MWs - MZs) * (sqr(MZs) * MZs) - 1920 * (sqr(EL)) * (sqr(MTs)) * (sqr(MWs)) * (MWs - MZs) * (sqr(MZs) * sqr(MZs)) + 3072 * (sqr(EL)) * (sqr(MTs) * MTs) * (sqr(MWs) * sqr(MWs)) * (MWs - MZs) * s - 7296 * (sqr(EL)) * (sqr(MTs) * MTs) * (sqr(MWs) * MWs) * (MWs - MZs) * MZs * s + 17408 * (sqr(EL)) * (sqr(MTs)) * (sqr(MWs) * sqr(MWs)) * (MWs - MZs) * MZs * s + 6960 * (sqr(EL)) * (sqr(MTs) * MTs) * (sqr(MWs)) * (MWs - MZs) * (sqr(MZs)) * s - 31744 * (sqr(EL)) * (sqr(MTs)) * (sqr(MWs) * MWs) * (MWs - MZs) * (sqr(MZs)) * s - 5120 * (sqr(EL)) * MTs * (sqr(MWs) * sqr(MWs)) * (MWs - MZs) * (sqr(MZs)) * s - 1170 * (sqr(EL)) * (sqr(MTs) * MTs) * MWs * (MWs - MZs) * (sqr(MZs) * MZs) * s + 22760 * (sqr(EL)) * (sqr(MTs)) * (sqr(MWs)) * (MWs - MZs) * (sqr(MZs) * MZs) * s + 9472 * (sqr(EL)) * MTs * (sqr(MWs) * MWs) * (MWs - MZs) * (sqr(MZs) * MZs) * s - 6345 * (sqr(EL)) * (sqr(MTs)) * MWs * (MWs - MZs) * (sqr(MZs) * sqr(MZs)) * s - 6800 * (sqr(EL)) * MTs * (sqr(MWs)) * (MWs - MZs) * (sqr(MZs) * sqr(MZs)) * s + 1800 * (sqr(EL)) * MTs * MWs * (MWs - MZs) * (sqr(MZs) * sqr(MZs) * MZs) * s)) / (20736. * MTs * (4 * MTs - MZs) * MZs * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (deltaAlpha * EL * (-27648 * (sqr(MTs)) * (sqr(MWs) * sqr(MWs)) * (MWs - MZs) * MZs * (Pi * Pi) * s + 44928 * (sqr(MTs)) * (sqr(MWs) * MWs) * (MWs - MZs) * (sqr(MZs)) * (Pi * Pi) * s + 6912 * MTs * (sqr(MWs) * sqr(MWs)) * (MWs - MZs) * (sqr(MZs)) * (Pi * Pi) * s - 17280 * (sqr(MTs)) * (sqr(MWs)) * (MWs - MZs) * (sqr(MZs) * MZs) * (Pi * Pi) * s - 11232 * MTs * (sqr(MWs) * MWs) * (MWs - MZs) * (sqr(MZs) * MZs) * (Pi * Pi) * s + 4320 * MTs * (sqr(MWs)) * (MWs - MZs) * (sqr(MZs) * sqr(MZs)) * (Pi * Pi) * s)) / (20736. * MTs * (4 * MTs - MZs) * MZs * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * (32 * (sqr(MWs)) * (8 * MWs - 5 * MZs) * ((MWs - MZs) * (MWs - MZs)) * (sqr(MZs)) * s + 36 * (sqr(MTs) * MTs) * (2 * MWs - 5 * MZs) * (sqr(MZs) * MZs) * s + 2 * MTs * MWs * (MWs - MZs) * MZs * (256 * (sqr(MWs) * MWs) * (2 * MZs - 3 * s) - 416 * (sqr(MWs)) * MZs * (2 * MZs - 3 * s) + 160 * MWs * (sqr(MZs)) * (2 * MZs - 3 * s) + 45 * (sqr(MZs) * MZs) * s) + sqr(MTs) * (-408 * MWs * (sqr(MZs) * sqr(MZs)) * s + 45 * (sqr(MZs) * sqr(MZs) * MZs) * s - 1024 * (sqr(MWs) * sqr(MWs) * MWs) * (4 * MZs + s) + 384 * (sqr(MWs) * sqr(MWs)) * MZs * (28 * MZs + 9 * s) - 144 * (sqr(MWs) * MWs) * (sqr(MZs)) * (64 * MZs + 33 * s) + 10 * (sqr(MWs)) * (sqr(MZs) * MZs) * (256 * MZs + 271 * s))) * A0fin(MTs)) / (6912. * MTs * (4 * MTs - MZs) * MZs * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) + (trip(EL) * (sqr(MWs)) * (2 * MWs - 5 * MZs) * (sqr(MZs)) * (-4 * MTs + MZs) * real(B0fin(MWs, 0, 0))) / (128. * (4 * MTs - MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi)) + (trip(EL) * (sqr(MTs) + MTs * MWs - 2 * (sqr(MWs))) * (2 * MWs - 5 * MZs) * (sqr(MZs)) * real(B0fin(MWs, 0, MTs))) / (768. * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi)) + (trip(EL) * (sqr(MWs)) * (2560 * (sqr(MWs) * MWs) - 6720 * (sqr(MWs)) * MZs + 5904 * MWs * (sqr(MZs)) - 1933 * (sqr(MZs) * MZs)) * real(B0fin(MZs, 0, 0))) / (6912. * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi)) - (trip(EL) * MWs * (MWs * (sqr(MZs)) * (256 * (sqr(MWs) * MWs) - 672 * (sqr(MWs)) * MZs + 576 * MWs * (sqr(MZs)) - 187 * (sqr(MZs) * MZs)) + 2 * (sqr(MTs)) * (512 * (sqr(MWs) * sqr(MWs)) - 1728 * (sqr(MWs) * MWs) * MZs + 2376 * (sqr(MWs)) * (sqr(MZs)) - 1319 * MWs * (sqr(MZs) * MZs) + 105 * (sqr(MZs) * sqr(MZs))) + MTs * MZs * (-512 * (sqr(MWs) * sqr(MWs)) + 1344 * (sqr(MWs) * MWs) * MZs - 1152 * (sqr(MWs)) * (sqr(MZs)) + 320 * MWs * (sqr(MZs) * MZs) + 135 * (sqr(MZs) * sqr(MZs)))) * real(B0fin(MZs, MTs, MTs))) / (6912. * (4 * MTs - MZs) * MZs * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi)) - (5 * (trip(EL)) * (sqr(MWs)) * (MWs - MZs) * (8 * (sqr(MWs)) - 13 * MWs * MZs + 5 * (sqr(MZs))) * real(B0fin(s, 0, 0))) / (108. * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi)) - (trip(EL) * (sqr(MWs)) * (MWs - MZs) * (8 * (sqr(MWs)) - 13 * MWs * MZs + 5 * (sqr(MZs))) * (2 * MTs + s) * real(B0fin(s, MTs, MTs))) / (108. * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s);
            break;
        case DQU:
            res = -(EL * (-6144 * (sqr(EL)) * (sqr(MTs) * MTs) * (sqr(MWs) * sqr(MWs)) * (MWs - MZs) * MZs +
                          9984 * (sqr(EL)) * (sqr(MTs) * MTs) * (sqr(MWs) * MWs) * (MWs - MZs) * (sqr(MZs)) +
                          1536 * (sqr(EL)) * (sqr(MTs)) * (sqr(MWs) * sqr(MWs)) * (MWs - MZs) * (sqr(MZs)) -
                          3840 * (sqr(EL)) * (sqr(MTs) * MTs) * (sqr(MWs)) * (MWs - MZs) * (sqr(MZs) * MZs) -
                          2496 * (sqr(EL)) * (sqr(MTs)) * (sqr(MWs) * MWs) * (MWs - MZs) * (sqr(MZs) * MZs) +
                          960 * (sqr(EL)) * (sqr(MTs)) * (sqr(MWs)) * (MWs - MZs) * (sqr(MZs) * sqr(MZs)) -
                          1536 * (sqr(EL)) * (sqr(MTs) * MTs) * (sqr(MWs) * sqr(MWs)) * (MWs - MZs) * s +
                          768 * (sqr(EL)) * (sqr(MTs) * MTs) * (sqr(MWs) * MWs) * (MWs - MZs) * MZs * s -
                          8704 * (sqr(EL)) * (sqr(MTs)) * (sqr(MWs) * sqr(MWs)) * (MWs - MZs) * MZs * s -
                          1032 * (sqr(EL)) * (sqr(MTs) * MTs) * (sqr(MWs)) * (MWs - MZs) * (sqr(MZs)) * s +
                          13184 * (sqr(EL)) * (sqr(MTs)) * (sqr(MWs) * MWs) * (MWs - MZs) * (sqr(MZs)) * s +
                          2560 * (sqr(EL)) * MTs * (sqr(MWs) * sqr(MWs)) * (MWs - MZs) * (sqr(MZs)) * s +
                          234 * (sqr(EL)) * (sqr(MTs) * MTs) * MWs * (MWs - MZs) * (sqr(MZs) * MZs) * s -
                          7828 * (sqr(EL)) * (sqr(MTs)) * (sqr(MWs)) * (MWs - MZs) * (sqr(MZs) * MZs) * s -
                          3776 * (sqr(EL)) * MTs * (sqr(MWs) * MWs) * (MWs - MZs) * (sqr(MZs) * MZs) * s +
                          1269 * (sqr(EL)) * (sqr(MTs)) * MWs * (MWs - MZs) * (sqr(MZs) * sqr(MZs)) * s +
                          2224 * (sqr(EL)) * MTs * (sqr(MWs)) * (MWs - MZs) * (sqr(MZs) * sqr(MZs)) * s -
                          360 * (sqr(EL)) * MTs * MWs * (MWs - MZs) * (sqr(MZs) * sqr(MZs) * MZs) * s)) /
                      (20736. * MTs * (4 * MTs - MZs) * MZs * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) -
                  (deltaAlpha * EL * (13824 * (sqr(MTs)) * (sqr(MWs) * sqr(MWs)) * (MWs - MZs) * MZs * (Pi * Pi) * s - 17280 * (sqr(MTs)) * (sqr(MWs) * MWs) * (MWs - MZs) * (sqr(MZs)) * (Pi * Pi) * s - 3456 * MTs * (sqr(MWs) * sqr(MWs)) * (MWs - MZs) * (sqr(MZs)) * (Pi * Pi) * s + 3456 * (sqr(MTs)) * (sqr(MWs)) * (MWs - MZs) * (sqr(MZs) * MZs) * (Pi * Pi) * s + 4320 * MTs * (sqr(MWs) * MWs) * (MWs - MZs) * (sqr(MZs) * MZs) * (Pi * Pi) * s - 864 * MTs * (sqr(MWs)) * (MWs - MZs) * (sqr(MZs) * sqr(MZs)) * (Pi * Pi) * s)) /
                      (20736. * MTs * (4 * MTs - MZs) * MZs * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) -
                  (trip(EL) * (-32 * (sqr(MWs)) * ((MWs - MZs) * (MWs - MZs)) * (4 * MWs - MZs) * (sqr(MZs)) * s + 36 * (sqr(MTs) * MTs) * (sqr(MZs) * MZs) * (2 * MWs + MZs) * s - 2 * MTs * MWs * (MWs - MZs) * MZs * (4 * MWs * (sqr(MZs)) * (40 * MZs - 39 * s) + 128 * (sqr(MWs) * MWs) * (2 * MZs - 3 * s) + 9 * (sqr(MZs) * MZs) * s + 32 * (sqr(MWs)) * MZs * (-13 * MZs + 18 * s)) + sqr(MTs) * (60 * MWs * (sqr(MZs) * sqr(MZs)) * s - 9 * (sqr(MZs) * sqr(MZs) * MZs) * s + 512 * (sqr(MWs) * sqr(MWs) * MWs) * (4 * MZs + s) - 768 * (sqr(MWs) * sqr(MWs)) * MZs * (7 * MZs + s) + 24 * (sqr(MWs) * MWs) * (sqr(MZs)) * (192 * MZs + 25 * s) - 2 * (sqr(MWs)) * (sqr(MZs) * MZs) * (640 * MZs + 211 * s))) * A0fin(MTs)) /
                      (6912. * MTs * (4 * MTs - MZs) * MZs * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) -
                  (trip(EL) * (sqr(MWs)) * (sqr(MZs)) * (2 * MWs + MZs) * real(B0fin(MWs, 0, 0))) /
                      (128. * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi)) +
                  (trip(EL) * (sqr(MTs) + MTs * MWs - 2 * (sqr(MWs))) * (sqr(MZs)) * (2 * MWs + MZs) * real(B0fin(MWs, 0, MTs))) /
                      (768. * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi)) -
                  (trip(EL) * (sqr(MWs)) * (1280 * (sqr(MWs) * MWs) - 3360 * (sqr(MWs)) * MZs + 2772 * MWs * (sqr(MZs)) - 881 * (sqr(MZs) * MZs)) * real(B0fin(MZs, 0, 0))) / (6912. * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi)) +
                  (trip(EL) * MWs * (MWs * (sqr(MZs)) * (128 * (sqr(MWs) * MWs) - 384 * (sqr(MWs)) * MZs + 348 * MWs * (sqr(MZs)) - 119 * (sqr(MZs) * MZs)) + MTs * MZs * (-256 * (sqr(MWs) * sqr(MWs)) + 768 * (sqr(MWs) * MWs) * MZs - 696 * (sqr(MWs)) * (sqr(MZs)) + 292 * MWs * (sqr(MZs) * MZs) + 27 * (sqr(MZs) * sqr(MZs))) + sqr(MTs) * (512 * (sqr(MWs) * sqr(MWs)) - 768 * (sqr(MWs) * MWs) * MZs + 600 * (sqr(MWs)) * (sqr(MZs)) - 494 * MWs * (sqr(MZs) * MZs) + 42 * (sqr(MZs) * sqr(MZs)))) * real(B0fin(MZs, MTs, MTs))) /
                      (6912. * (4 * MTs - MZs) * MZs * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi)) +
                  (5 * (trip(EL)) * (sqr(MWs)) * (MWs - MZs) * (8 * (sqr(MWs)) - 13 * MWs * MZs + 5 * (sqr(MZs))) * real(B0fin(s, 0, 0))) /
                      (216. * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi)) +
                  (trip(EL) * (sqr(MWs)) * (MWs - MZs) * (8 * (sqr(MWs)) - 13 * MWs * MZs + 5 * (sqr(MZs))) * (2 * MTs + s) *
                   real(B0fin(s, MTs, MTs))) /
                      (216. * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s);
            break;
        case BQU:
            res = -(EL * (-6144 * (sqr(EL)) * (sqr(MTs) * MTs) * (sqr(MWs) * sqr(MWs)) * (MWs - MZs) * MZs +
                          9984 * (sqr(EL)) * (sqr(MTs) * MTs) * (sqr(MWs) * MWs) * (MWs - MZs) * (sqr(MZs)) +
                          1536 * (sqr(EL)) * (sqr(MTs)) * (sqr(MWs) * sqr(MWs)) * (MWs - MZs) * (sqr(MZs)) -
                          3840 * (sqr(EL)) * (sqr(MTs) * MTs) * (sqr(MWs)) * (MWs - MZs) * (sqr(MZs) * MZs) -
                          2496 * (sqr(EL)) * (sqr(MTs)) * (sqr(MWs) * MWs) * (MWs - MZs) * (sqr(MZs) * MZs) +
                          960 * (sqr(EL)) * (sqr(MTs)) * (sqr(MWs)) * (MWs - MZs) * (sqr(MZs) * sqr(MZs)) -
                          1536 * (sqr(EL)) * (sqr(MTs) * MTs) * (sqr(MWs) * sqr(MWs)) * (MWs - MZs) * s +
                          768 * (sqr(EL)) * (sqr(MTs) * MTs) * (sqr(MWs) * MWs) * (MWs - MZs) * MZs * s -
                          8704 * (sqr(EL)) * (sqr(MTs)) * (sqr(MWs) * sqr(MWs)) * (MWs - MZs) * MZs * s -
                          1032 * (sqr(EL)) * (sqr(MTs) * MTs) * (sqr(MWs)) * (MWs - MZs) * (sqr(MZs)) * s +
                          13184 * (sqr(EL)) * (sqr(MTs)) * (sqr(MWs) * MWs) * (MWs - MZs) * (sqr(MZs)) * s +
                          2560 * (sqr(EL)) * MTs * (sqr(MWs) * sqr(MWs)) * (MWs - MZs) * (sqr(MZs)) * s +
                          234 * (sqr(EL)) * (sqr(MTs) * MTs) * MWs * (MWs - MZs) * (sqr(MZs) * MZs) * s -
                          7828 * (sqr(EL)) * (sqr(MTs)) * (sqr(MWs)) * (MWs - MZs) * (sqr(MZs) * MZs) * s -
                          3776 * (sqr(EL)) * MTs * (sqr(MWs) * MWs) * (MWs - MZs) * (sqr(MZs) * MZs) * s +
                          1269 * (sqr(EL)) * (sqr(MTs)) * MWs * (MWs - MZs) * (sqr(MZs) * sqr(MZs)) * s +
                          2224 * (sqr(EL)) * MTs * (sqr(MWs)) * (MWs - MZs) * (sqr(MZs) * sqr(MZs)) * s -
                          360 * (sqr(EL)) * MTs * MWs * (MWs - MZs) * (sqr(MZs) * sqr(MZs) * MZs) * s)) /
                      (20736. * MTs * (4 * MTs - MZs) * MZs * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) -
                  (deltaAlpha * EL * (13824 * (sqr(MTs)) * (sqr(MWs) * sqr(MWs)) * (MWs - MZs) * MZs * (Pi * Pi) * s - 17280 * (sqr(MTs)) * (sqr(MWs) * MWs) * (MWs - MZs) * (sqr(MZs)) * (Pi * Pi) * s - 3456 * MTs * (sqr(MWs) * sqr(MWs)) * (MWs - MZs) * (sqr(MZs)) * (Pi * Pi) * s + 3456 * (sqr(MTs)) * (sqr(MWs)) * (MWs - MZs) * (sqr(MZs) * MZs) * (Pi * Pi) * s + 4320 * MTs * (sqr(MWs) * MWs) * (MWs - MZs) * (sqr(MZs) * MZs) * (Pi * Pi) * s - 864 * MTs * (sqr(MWs)) * (MWs - MZs) * (sqr(MZs) * sqr(MZs)) * (Pi * Pi) * s)) /
                      (20736. * MTs * (4 * MTs - MZs) * MZs * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) -
                  (trip(EL) * (-32 * (sqr(MWs)) * ((MWs - MZs) * (MWs - MZs)) * (4 * MWs - MZs) * (sqr(MZs)) * s + 36 * (sqr(MTs) * MTs) * (sqr(MZs) * MZs) * (2 * MWs + MZs) * s - 2 * MTs * MWs * (MWs - MZs) * MZs * (4 * MWs * (sqr(MZs)) * (40 * MZs - 39 * s) + 128 * (sqr(MWs) * MWs) * (2 * MZs - 3 * s) + 9 * (sqr(MZs) * MZs) * s + 32 * (sqr(MWs)) * MZs * (-13 * MZs + 18 * s)) + sqr(MTs) * (60 * MWs * (sqr(MZs) * sqr(MZs)) * s - 9 * (sqr(MZs) * sqr(MZs) * MZs) * s + 512 * (sqr(MWs) * sqr(MWs) * MWs) * (4 * MZs + s) - 768 * (sqr(MWs) * sqr(MWs)) * MZs * (7 * MZs + s) + 24 * (sqr(MWs) * MWs) * (sqr(MZs)) * (192 * MZs + 25 * s) - 2 * (sqr(MWs)) * (sqr(MZs) * MZs) * (640 * MZs + 211 * s))) * A0fin(MTs)) /
                      (6912. * MTs * (4 * MTs - MZs) * MZs * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) -
                  (trip(EL) * (sqr(MWs)) * (sqr(MZs)) * (2 * MWs + MZs) * real(B0fin(MWs, 0, 0))) /
                      (128. * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi)) +
                  (trip(EL) * (sqr(MTs) + MTs * MWs - 2 * (sqr(MWs))) * (sqr(MZs)) * (2 * MWs + MZs) * real(B0fin(MWs, 0, MTs))) /
                      (768. * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi)) -
                  (trip(EL) * (sqr(MWs)) * (1280 * (sqr(MWs) * MWs) - 3360 * (sqr(MWs)) * MZs + 2772 * MWs * (sqr(MZs)) - 881 * (sqr(MZs) * MZs)) * real(B0fin(MZs, 0, 0))) / (6912. * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi)) +
                  (trip(EL) * MWs * (MWs * (sqr(MZs)) * (128 * (sqr(MWs) * MWs) - 384 * (sqr(MWs)) * MZs + 348 * MWs * (sqr(MZs)) - 119 * (sqr(MZs) * MZs)) + MTs * MZs * (-256 * (sqr(MWs) * sqr(MWs)) + 768 * (sqr(MWs) * MWs) * MZs - 696 * (sqr(MWs)) * (sqr(MZs)) + 292 * MWs * (sqr(MZs) * MZs) + 27 * (sqr(MZs) * sqr(MZs))) + sqr(MTs) * (512 * (sqr(MWs) * sqr(MWs)) - 768 * (sqr(MWs) * MWs) * MZs + 600 * (sqr(MWs)) * (sqr(MZs)) - 494 * MWs * (sqr(MZs) * MZs) + 42 * (sqr(MZs) * sqr(MZs)))) * real(B0fin(MZs, MTs, MTs))) /
                      (6912. * (4 * MTs - MZs) * MZs * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi)) +
                  (5 * (trip(EL)) * (sqr(MWs)) * (MWs - MZs) * (8 * (sqr(MWs)) - 13 * MWs * MZs + 5 * (sqr(MZs))) * real(B0fin(s, 0, 0))) /
                      (216. * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi)) +
                  (trip(EL) * (sqr(MWs)) * (MWs - MZs) * (8 * (sqr(MWs)) - 13 * MWs * MZs + 5 * (sqr(MZs))) * (2 * MTs + s) *
                   real(B0fin(s, MTs, MTs))) /
                      (216. * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s);
            break;
        }
        break;
    case AXV:
        switch (type)
        {
        case LEP:
            res = (deltaAlpha * EL * (sqr(MWs)) * ((MWs - MZs) * (MWs - MZs)) * MZs * (-4 * MTs + MZs)) /
                      (8. * (4 * MTs - MZs) * pow(MWs * (-MWs + MZs), 2.5)) -
                  (trip(EL) * MWs * (MWs - MZs) * (MTs * MZs * (-1792 * (sqr(MWs)) + 2368 * MWs * MZs - 1269 * (sqr(MZs))) - 6 * (sqr(MTs)) * (320 * (sqr(MWs)) - 272 * MWs * MZs + 39 * (sqr(MZs))) + 8 * (sqr(MZs)) * (80 * (sqr(MWs)) - 98 * MWs * MZs + 45 * (sqr(MZs))))) /
                      (6912. * (4 * MTs - MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi)) -
                  (trip(EL) * (-32 * (sqr(MWs)) * ((MWs - MZs) * (MWs - MZs)) * (sqr(MZs)) + 36 * (sqr(MTs) * MTs) * (2 * MWs - MZs) * (sqr(MZs)) + 2 * MTs * MWs * MZs * (32 * (sqr(MWs) * MWs) - 88 * (sqr(MWs)) * MZs + 65 * MWs * (sqr(MZs)) - 9 * (sqr(MZs) * MZs)) + sqr(MTs) * (640 * (sqr(MWs) * sqr(MWs)) - 1184 * (sqr(MWs) * MWs) * MZs + 622 * (sqr(MWs)) * (sqr(MZs)) - 96 * MWs * (sqr(MZs) * MZs) + 9 * (sqr(MZs) * sqr(MZs)))) * A0fin(MTs)) /
                      (2304. * MTs * (4 * MTs - MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi)) +
                  (3 * (trip(EL)) * (sqr(MWs)) * (2 * MWs - MZs) * (sqr(MZs)) * (-4 * MTs + MZs) * real(B0fin(MWs, 0, 0))) /
                      (128. * (4 * MTs - MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi)) +
                  (trip(EL) * (sqr(MTs) + MTs * MWs - 2 * (sqr(MWs))) * (2 * MWs - MZs) * (sqr(MZs)) * real(B0fin(MWs, 0, MTs))) /
                      (256. * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi)) -
                  (trip(EL) * (sqr(MWs)) * (40 * MWs - 19 * MZs) * (sqr(MZs)) * (-4 * MTs + MZs) * real(B0fin(MZs, 0, 0))) /
                      (768. * (4 * MTs - MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi)) +
                  (trip(EL) * MWs * (MWs * (sqr(MZs)) * (-32 * (sqr(MWs)) + 40 * MWs * MZs - 17 * (sqr(MZs))) + MTs * MZs * (64 * (sqr(MWs) * MWs) - 80 * (sqr(MWs)) * MZs + 88 * MWs * (sqr(MZs)) - 27 * (sqr(MZs) * MZs)) + 2 * (sqr(MTs)) * (320 * (sqr(MWs) * MWs) - 592 * (sqr(MWs)) * MZs + 275 * MWs * (sqr(MZs)) - 21 * (sqr(MZs) * MZs))) * real(B0fin(MZs, MTs, MTs))) / (2304. * (4 * MTs - MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi));
            break;
        case NEU:
            res = -(deltaAlpha * EL * (sqr(MWs)) * ((MWs - MZs) * (MWs - MZs)) * MZs * (-4 * MTs + MZs)) /
                      (8. * (4 * MTs - MZs) * pow(MWs * (-MWs + MZs), 2.5)) -
                  (trip(EL) * MWs * (MWs - MZs) * (6 * (sqr(MTs)) * (320 * (sqr(MWs)) - 272 * MWs * MZs + 39 * (sqr(MZs))) - 8 * (sqr(MZs)) * (80 * (sqr(MWs)) - 98 * MWs * MZs + 45 * (sqr(MZs))) + MTs * MZs * (1792 * (sqr(MWs)) - 2368 * MWs * MZs + 1269 * (sqr(MZs))))) /
                      (6912. * (4 * MTs - MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi)) +
                  (trip(EL) * (-32 * (sqr(MWs)) * ((MWs - MZs) * (MWs - MZs)) * (sqr(MZs)) + 36 * (sqr(MTs) * MTs) * (2 * MWs - MZs) * (sqr(MZs)) + 2 * MTs * MWs * MZs * (32 * (sqr(MWs) * MWs) - 88 * (sqr(MWs)) * MZs + 65 * MWs * (sqr(MZs)) - 9 * (sqr(MZs) * MZs)) + sqr(MTs) * (640 * (sqr(MWs) * sqr(MWs)) - 1184 * (sqr(MWs) * MWs) * MZs + 622 * (sqr(MWs)) * (sqr(MZs)) - 96 * MWs * (sqr(MZs) * MZs) + 9 * (sqr(MZs) * sqr(MZs)))) * A0fin(MTs)) /
                      (2304. * MTs * (4 * MTs - MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi)) -
                  (3 * (trip(EL)) * (sqr(MWs)) * (2 * MWs - MZs) * (sqr(MZs)) * (-4 * MTs + MZs) * real(B0fin(MWs, 0, 0))) /
                      (128. * (4 * MTs - MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi)) -
                  (trip(EL) * (sqr(MTs) + MTs * MWs - 2 * (sqr(MWs))) * (2 * MWs - MZs) * (sqr(MZs)) * real(B0fin(MWs, 0, MTs))) /
                      (256. * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi)) +
                  (trip(EL) * (sqr(MWs)) * (40 * MWs - 19 * MZs) * (sqr(MZs)) * (-4 * MTs + MZs) * real(B0fin(MZs, 0, 0))) /
                      (768. * (4 * MTs - MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi)) -
                  (trip(EL) * MWs * (MWs * (sqr(MZs)) * (-32 * (sqr(MWs)) + 40 * MWs * MZs - 17 * (sqr(MZs))) + MTs * MZs * (64 * (sqr(MWs) * MWs) - 80 * (sqr(MWs)) * MZs + 88 * MWs * (sqr(MZs)) - 27 * (sqr(MZs) * MZs)) + 2 * (sqr(MTs)) * (320 * (sqr(MWs) * MWs) - 592 * (sqr(MWs)) * MZs + 275 * MWs * (sqr(MZs)) - 21 * (sqr(MZs) * MZs))) * real(B0fin(MZs, MTs, MTs))) / (2304. * (4 * MTs - MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi));
            break;
        case UQU:
            res = -(deltaAlpha * EL * (sqr(MWs)) * ((MWs - MZs) * (MWs - MZs)) * MZs * (-4 * MTs + MZs)) /
                      (8. * (4 * MTs - MZs) * pow(MWs * (-MWs + MZs), 2.5)) -
                  (trip(EL) * MWs * (MWs - MZs) * (6 * (sqr(MTs)) * (320 * (sqr(MWs)) - 272 * MWs * MZs + 39 * (sqr(MZs))) - 8 * (sqr(MZs)) * (80 * (sqr(MWs)) - 98 * MWs * MZs + 45 * (sqr(MZs))) + MTs * MZs * (1792 * (sqr(MWs)) - 2368 * MWs * MZs + 1269 * (sqr(MZs))))) /
                      (6912. * (4 * MTs - MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi)) +
                  (trip(EL) * (-32 * (sqr(MWs)) * ((MWs - MZs) * (MWs - MZs)) * (sqr(MZs)) + 36 * (sqr(MTs) * MTs) * (2 * MWs - MZs) * (sqr(MZs)) + 2 * MTs * MWs * MZs * (32 * (sqr(MWs) * MWs) - 88 * (sqr(MWs)) * MZs + 65 * MWs * (sqr(MZs)) - 9 * (sqr(MZs) * MZs)) + sqr(MTs) * (640 * (sqr(MWs) * sqr(MWs)) - 1184 * (sqr(MWs) * MWs) * MZs + 622 * (sqr(MWs)) * (sqr(MZs)) - 96 * MWs * (sqr(MZs) * MZs) + 9 * (sqr(MZs) * sqr(MZs)))) * A0fin(MTs)) /
                      (2304. * MTs * (4 * MTs - MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi)) -
                  (3 * (trip(EL)) * (sqr(MWs)) * (2 * MWs - MZs) * (sqr(MZs)) * (-4 * MTs + MZs) * real(B0fin(MWs, 0, 0))) /
                      (128. * (4 * MTs - MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi)) -
                  (trip(EL) * (sqr(MTs) + MTs * MWs - 2 * (sqr(MWs))) * (2 * MWs - MZs) * (sqr(MZs)) * real(B0fin(MWs, 0, MTs))) /
                      (256. * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi)) +
                  (trip(EL) * (sqr(MWs)) * (40 * MWs - 19 * MZs) * (sqr(MZs)) * (-4 * MTs + MZs) * real(B0fin(MZs, 0, 0))) /
                      (768. * (4 * MTs - MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi)) -
                  (trip(EL) * MWs * (MWs * (sqr(MZs)) * (-32 * (sqr(MWs)) + 40 * MWs * MZs - 17 * (sqr(MZs))) + MTs * MZs * (64 * (sqr(MWs) * MWs) - 80 * (sqr(MWs)) * MZs + 88 * MWs * (sqr(MZs)) - 27 * (sqr(MZs) * MZs)) + 2 * (sqr(MTs)) * (320 * (sqr(MWs) * MWs) - 592 * (sqr(MWs)) * MZs + 275 * MWs * (sqr(MZs)) - 21 * (sqr(MZs) * MZs))) * real(B0fin(MZs, MTs, MTs))) / (2304. * (4 * MTs - MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi));
            break;
        case DQU:
            res = (deltaAlpha * EL * (sqr(MWs)) * ((MWs - MZs) * (MWs - MZs)) * MZs * (-4 * MTs + MZs)) /
                      (8. * (4 * MTs - MZs) * pow(MWs * (-MWs + MZs), 2.5)) -
                  (trip(EL) * MWs * (MWs - MZs) * (MTs * MZs * (-1792 * (sqr(MWs)) + 2368 * MWs * MZs - 1269 * (sqr(MZs))) - 6 * (sqr(MTs)) * (320 * (sqr(MWs)) - 272 * MWs * MZs + 39 * (sqr(MZs))) + 8 * (sqr(MZs)) * (80 * (sqr(MWs)) - 98 * MWs * MZs + 45 * (sqr(MZs))))) /
                      (6912. * (4 * MTs - MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi)) -
                  (trip(EL) * (-32 * (sqr(MWs)) * ((MWs - MZs) * (MWs - MZs)) * (sqr(MZs)) + 36 * (sqr(MTs) * MTs) * (2 * MWs - MZs) * (sqr(MZs)) + 2 * MTs * MWs * MZs * (32 * (sqr(MWs) * MWs) - 88 * (sqr(MWs)) * MZs + 65 * MWs * (sqr(MZs)) - 9 * (sqr(MZs) * MZs)) + sqr(MTs) * (640 * (sqr(MWs) * sqr(MWs)) - 1184 * (sqr(MWs) * MWs) * MZs + 622 * (sqr(MWs)) * (sqr(MZs)) - 96 * MWs * (sqr(MZs) * MZs) + 9 * (sqr(MZs) * sqr(MZs)))) * A0fin(MTs)) /
                      (2304. * MTs * (4 * MTs - MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi)) +
                  (3 * (trip(EL)) * (sqr(MWs)) * (2 * MWs - MZs) * (sqr(MZs)) * (-4 * MTs + MZs) * real(B0fin(MWs, 0, 0))) /
                      (128. * (4 * MTs - MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi)) +
                  (trip(EL) * (sqr(MTs) + MTs * MWs - 2 * (sqr(MWs))) * (2 * MWs - MZs) * (sqr(MZs)) * real(B0fin(MWs, 0, MTs))) /
                      (256. * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi)) -
                  (trip(EL) * (sqr(MWs)) * (40 * MWs - 19 * MZs) * (sqr(MZs)) * (-4 * MTs + MZs) * real(B0fin(MZs, 0, 0))) /
                      (768. * (4 * MTs - MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi)) +
                  (trip(EL) * MWs * (MWs * (sqr(MZs)) * (-32 * (sqr(MWs)) + 40 * MWs * MZs - 17 * (sqr(MZs))) + MTs * MZs * (64 * (sqr(MWs) * MWs) - 80 * (sqr(MWs)) * MZs + 88 * MWs * (sqr(MZs)) - 27 * (sqr(MZs) * MZs)) + 2 * (sqr(MTs)) * (320 * (sqr(MWs) * MWs) - 592 * (sqr(MWs)) * MZs + 275 * MWs * (sqr(MZs)) - 21 * (sqr(MZs) * MZs))) * real(B0fin(MZs, MTs, MTs))) / (2304. * (4 * MTs - MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi));
            break;
        case BQU:
            res = (deltaAlpha * EL * (sqr(MWs)) * ((MWs - MZs) * (MWs - MZs)) * MZs * (-4 * MTs + MZs)) /
                      (8. * (4 * MTs - MZs) * pow(MWs * (-MWs + MZs), 2.5)) -
                  (trip(EL) * MWs * (MWs - MZs) * (MTs * MZs * (-1792 * (sqr(MWs)) + 2368 * MWs * MZs - 1269 * (sqr(MZs))) - 6 * (sqr(MTs)) * (320 * (sqr(MWs)) - 272 * MWs * MZs + 39 * (sqr(MZs))) + 8 * (sqr(MZs)) * (80 * (sqr(MWs)) - 98 * MWs * MZs + 45 * (sqr(MZs))))) /
                      (6912. * (4 * MTs - MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi)) -
                  (trip(EL) * (-32 * (sqr(MWs)) * ((MWs - MZs) * (MWs - MZs)) * (sqr(MZs)) + 36 * (sqr(MTs) * MTs) * (2 * MWs - MZs) * (sqr(MZs)) + 2 * MTs * MWs * MZs * (32 * (sqr(MWs) * MWs) - 88 * (sqr(MWs)) * MZs + 65 * MWs * (sqr(MZs)) - 9 * (sqr(MZs) * MZs)) + sqr(MTs) * (640 * (sqr(MWs) * sqr(MWs)) - 1184 * (sqr(MWs) * MWs) * MZs + 622 * (sqr(MWs)) * (sqr(MZs)) - 96 * MWs * (sqr(MZs) * MZs) + 9 * (sqr(MZs) * sqr(MZs)))) * A0fin(MTs)) /
                      (2304. * MTs * (4 * MTs - MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi)) +
                  (3 * (trip(EL)) * (sqr(MWs)) * (2 * MWs - MZs) * (sqr(MZs)) * (-4 * MTs + MZs) * real(B0fin(MWs, 0, 0))) /
                      (128. * (4 * MTs - MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi)) +
                  (trip(EL) * (sqr(MTs) + MTs * MWs - 2 * (sqr(MWs))) * (2 * MWs - MZs) * (sqr(MZs)) * real(B0fin(MWs, 0, MTs))) /
                      (256. * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi)) -
                  (trip(EL) * (sqr(MWs)) * (40 * MWs - 19 * MZs) * (sqr(MZs)) * (-4 * MTs + MZs) * real(B0fin(MZs, 0, 0))) /
                      (768. * (4 * MTs - MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi)) +
                  (trip(EL) * MWs * (MWs * (sqr(MZs)) * (-32 * (sqr(MWs)) + 40 * MWs * MZs - 17 * (sqr(MZs))) + MTs * MZs * (64 * (sqr(MWs) * MWs) - 80 * (sqr(MWs)) * MZs + 88 * MWs * (sqr(MZs)) - 27 * (sqr(MZs) * MZs)) + 2 * (sqr(MTs)) * (320 * (sqr(MWs) * MWs) - 592 * (sqr(MWs)) * MZs + 275 * MWs * (sqr(MZs)) - 21 * (sqr(MZs) * MZs))) * real(B0fin(MZs, MTs, MTs))) / (2304. * (4 * MTs - MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi));
            break;
        }
    }
    return (res);
}
// imaginary part of fermionic 1-loop Z vertex factor for k^2 = s
double iz1f(int type, int form, const inval &input, double s)
{
    double MZs = sqr(input.get(MZ)),
           MWs = sqr(input.get(MW)),
           MHs = sqr(input.get(MH)),
           MTs = sqr(input.get(MT)),
           EL = sqrt(4 * Pi * input.get(al)),
           deltaAlpha = input.get(Delal),
           res;
    switch (form)
    {
    case VEC:
        switch (type)
        {
        case LEP:
            res = (trip(EL) * (8 * MWs - 5 * MZs) * (5 * s * imag(B0fin(s, 0, 0)) + (2 * MTs + s) * imag(B0fin(s, MTs, MTs)))) /
                  (72. * sqrt(MWs * (-MWs + MZs)) * (Pi * Pi) * s);
            break;
        case NEU:
            res = 0;
            break;
        case UQU:
            res = -(trip(EL) * (8 * MWs - 5 * MZs) * (5 * s * imag(B0fin(s, 0, 0)) + (2 * MTs + s) * imag(B0fin(s, MTs, MTs)))) /
                  (108. * sqrt(MWs * (-MWs + MZs)) * (Pi * Pi) * s);
            break;
        case DQU:
            res = (trip(EL) * (8 * MWs - 5 * MZs) * (5 * s * imag(B0fin(s, 0, 0)) + (2 * MTs + s) * imag(B0fin(s, MTs, MTs)))) /
                  (216. * sqrt(MWs * (-MWs + MZs)) * (Pi * Pi) * s);
            break;
        case BQU:
            res = (trip(EL) * (8 * MWs - 5 * MZs) * (5 * s * imag(B0fin(s, 0, 0)) + (2 * MTs + s) * imag(B0fin(s, MTs, MTs)))) /
                  (216. * sqrt(MWs * (-MWs + MZs)) * (Pi * Pi) * s);
        }
        break;
    case AXV:
        switch (type)
        {
        case LEP:
            res = 0;
            break;
        case NEU:
            res = 0;
            break;
        case UQU:
            res = 0;
            break;
        case DQU:
            res = 0;
            break;
        case BQU:
            res = 0;
            break;
        }
        break;
    }
    return (res);
}
// real part of bosonic 1-loop Z -vertex factor for k^2 = s
double rz1b(int type, int form, const inval &input, double s)
{
    double MZs = sqr(input.get(MZ)),
           MWs = sqr(input.get(MW)),
           MHs = sqr(input.get(MH)),
           MTs = sqr(input.get(MT)),
           MBs = sqr(input.get(MB)),
           EL = sqrt(4 * Pi * input.get(al)),
           res;

    switch (form)
    {
    case VEC:
        switch (type)
        {
        case LEP:
            res = (trip(EL) * (-384 * (sqr(MHs)) * (trip(MWs) * trip(MWs)) * MZs + 640 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * (sqr(MZs)) + 1536 * MHs * (trip(MWs) * trip(MWs)) * (sqr(MZs)) - 128 * (sqr(MHs)) * (trip(MWs) * MWs) * (trip(MZs)) - 2560 * MHs * (trip(MWs) * sqr(MWs)) * (trip(MZs)) - 128 * (sqr(MHs)) * (trip(MWs)) * (trip(MZs) * MZs) + 512 * MHs * (trip(MWs) * MWs) * (trip(MZs) * MZs) + 512 * MHs * (trip(MWs)) * (trip(MZs) * sqr(MZs)) - 96 * (sqr(MHs)) * (trip(MWs) * trip(MWs)) * s - 8 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * MZs * s + 384 * MHs * (trip(MWs) * trip(MWs)) * MZs * s - 4 * (trip(MHs)) * (trip(MWs)) * (sqr(MZs)) * s + 760 * (sqr(MHs)) * (trip(MWs) * MWs) * (sqr(MZs)) * s + 32 * MHs * (trip(MWs) * sqr(MWs)) * (sqr(MZs)) * s + 7 * (trip(MHs)) * (sqr(MWs)) * (trip(MZs)) * s - 1242 * (sqr(MHs)) * (trip(MWs)) * (trip(MZs)) * s - 3040 * MHs * (trip(MWs) * MWs) * (trip(MZs)) * s - 3 * (trip(MHs)) * MWs * (trip(MZs) * MZs) * s + 598 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs) * MZs) * s + 4984 * MHs * (trip(MWs)) * (trip(MZs) * MZs) * s - 12 * (sqr(MHs)) * MWs * (trip(MZs) * sqr(MZs)) * s - 2420 * MHs * (sqr(MWs)) * (trip(MZs) * sqr(MZs)) * s + 60 * MHs * MWs * (trip(MZs) * trip(MZs)) * s)) / (1536. * MHs * (MHs - 4 * MZs) * MZs * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) + (trip(EL) * (MWs - MZs) * (24 * MWs * (4 * MWs - 3 * MZs) * (trip(MZs)) + 24 * MHs * MWs * (sqr(MZs)) * (-4 * MWs + 3 * MZs) + trip(MHs) * (-8 * (sqr(MWs)) + 8 * MWs * MZs - 3 * (sqr(MZs))) + sqr(MHs) * MZs * (44 * (sqr(MWs)) - 41 * MWs * MZs + 12 * (sqr(MZs)))) * A0fin(MHs)) / (1536. * MHs * (MHs - 4 * MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi)) + (trip(EL) * (4 * (trip(MWs)) * (sqr(MZs)) * (14 * MZs - 99 * s) - 8 * (trip(MWs) * MWs) * MZs * (74 * MZs - 5 * s) + 2 * MWs * (MHs - 53 * MZs) * (trip(MZs)) * s - 3 * (trip(MZs) * MZs) * (MHs + MZs) * s + 96 * (trip(MWs) * sqr(MWs)) * (4 * MZs + s) + 2 * (sqr(MWs)) * (trip(MZs)) * (76 * MZs + 193 * s)) * A0fin(MWs)) / (1536. * MZs * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) + (trip(EL) * (sqr(MHs) * MWs * MZs * (8 * (sqr(MWs)) - 16 * MWs * MZs + 9 * (sqr(MZs))) * s + MHs * (3 * (trip(MZs) * sqr(MZs)) * s + 96 * (trip(MWs) * sqr(MWs)) * (2 * MZs + 3 * s) - 312 * (trip(MWs) * MWs) * MZs * (2 * MZs + 3 * s) + 24 * (trip(MWs)) * (sqr(MZs)) * (33 * MZs + 50 * s) - 13 * (sqr(MWs)) * (trip(MZs)) * (36 * MZs + 55 * s) + MWs * (trip(MZs) * MZs) * (108 * MZs + 139 * s)) - 4 * MZs * (3 * (trip(MZs) * sqr(MZs)) * s + 96 * (trip(MWs) * sqr(MWs)) * (2 * MZs + 3 * s) - 312 * (trip(MWs) * MWs) * MZs * (2 * MZs + 3 * s) + 2 * MWs * (trip(MZs) * MZs) * (54 * MZs + 83 * s) + 4 * (trip(MWs)) * (sqr(MZs)) * (198 * MZs + 305 * s) - 2 * (sqr(MWs)) * (trip(MZs)) * (234 * MZs + 379 * s))) * A0fin(MZs)) / (1536. * (MHs - 4 * MZs) * MZs * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) + (trip(EL) * (2 * (trip(MHs) * MHs) * MWs * (trip(MZs)) * s - 8 * (trip(MHs)) * (sqr(MWs)) * (trip(MZs)) * s + 24 * (sqr(MHs)) * (trip(MWs)) * (trip(MZs)) * s - 3 * (trip(MHs) * MHs) * (trip(MZs) * MZs) * s + 4 * (trip(MHs)) * MWs * (trip(MZs) * MZs) * s - 4 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs) * MZs) * s - 96 * MHs * (trip(MWs)) * (trip(MZs) * MZs) * s + 12 * (trip(MHs)) * (trip(MZs) * sqr(MZs)) * s - 48 * (sqr(MHs)) * MWs * (trip(MZs) * sqr(MZs)) * s + 144 * MHs * (sqr(MWs)) * (trip(MZs) * sqr(MZs)) * s) * real(B0fin(MWs, MHs, MWs))) / (1536. * MHs * (MHs - 4 * MZs) * MZs * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) + (trip(EL) * (-96 * (sqr(MHs)) * (trip(MWs) * MWs) * (sqr(MZs)) * s + 8 * (sqr(MHs)) * (trip(MWs)) * (trip(MZs)) * s + 384 * MHs * (trip(MWs) * MWs) * (trip(MZs)) * s + 236 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs) * MZs) * s - 32 * MHs * (trip(MWs)) * (trip(MZs) * MZs) * s - 46 * (sqr(MHs)) * MWs * (trip(MZs) * sqr(MZs)) * s - 944 * MHs * (sqr(MWs)) * (trip(MZs) * sqr(MZs)) * s - 3 * (sqr(MHs)) * (trip(MZs) * trip(MZs)) * s + 184 * MHs * MWs * (trip(MZs) * trip(MZs)) * s + 12 * MHs * (trip(MZs) * trip(MZs) * MZs) * s) * real(B0fin(MWs, MWs, MZs))) / (1536. * MHs * (MHs - 4 * MZs) * MZs * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) + (trip(EL) * (8 * (trip(MHs) * MHs) * (trip(MWs)) * MZs * s - 16 * (trip(MHs) * MHs) * (sqr(MWs)) * (sqr(MZs)) * s - 52 * (trip(MHs)) * (trip(MWs)) * (sqr(MZs)) * s + 9 * (trip(MHs) * MHs) * MWs * (trip(MZs)) * s + 107 * (trip(MHs)) * (sqr(MWs)) * (trip(MZs)) * s + 128 * (sqr(MHs)) * (trip(MWs)) * (trip(MZs)) * s - 63 * (trip(MHs)) * MWs * (trip(MZs) * MZs) * s - 280 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs) * MZs) * s - 144 * MHs * (trip(MWs)) * (trip(MZs) * MZs) * s + 180 * (sqr(MHs)) * MWs * (trip(MZs) * sqr(MZs)) * s + 348 * MHs * (sqr(MWs)) * (trip(MZs) * sqr(MZs)) * s - 252 * MHs * MWs * (trip(MZs) * trip(MZs)) * s) * real(B0fin(MZs, MHs, MZs))) / (1536. * MHs * (MHs - 4 * MZs) * MZs * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) + (trip(EL) * (-96 * (sqr(MHs)) * (trip(MWs) * trip(MWs)) * s + 248 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * MZs * s + 384 * MHs * (trip(MWs) * trip(MWs)) * MZs * s - 44 * (sqr(MHs)) * (trip(MWs) * MWs) * (sqr(MZs)) * s - 992 * MHs * (trip(MWs) * sqr(MWs)) * (sqr(MZs)) * s - 266 * (sqr(MHs)) * (trip(MWs)) * (trip(MZs)) * s + 176 * MHs * (trip(MWs) * MWs) * (trip(MZs)) * s + 59 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs) * MZs) * s + 1064 * MHs * (trip(MWs)) * (trip(MZs) * MZs) * s - 236 * MHs * (sqr(MWs)) * (trip(MZs) * sqr(MZs)) * s) * real(B0fin(MZs, MWs, MWs))) / (1536. * MHs * (MHs - 4 * MZs) * MZs * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) + (trip(EL) * (-192 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * (sqr(MZs)) + 648 * (sqr(MHs)) * (trip(MWs) * MWs) * (trip(MZs)) + 768 * MHs * (trip(MWs) * sqr(MWs)) * (trip(MZs)) - 816 * (sqr(MHs)) * (trip(MWs)) * (trip(MZs) * MZs) - 2592 * MHs * (trip(MWs) * MWs) * (trip(MZs) * MZs) + 468 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs) * sqr(MZs)) + 3264 * MHs * (trip(MWs)) * (trip(MZs) * sqr(MZs)) - 108 * (sqr(MHs)) * MWs * (trip(MZs) * trip(MZs)) - 1872 * MHs * (sqr(MWs)) * (trip(MZs) * trip(MZs)) + 432 * MHs * MWs * (trip(MZs) * trip(MZs) * MZs) - 288 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * MZs * s + 936 * (sqr(MHs)) * (trip(MWs) * MWs) * (sqr(MZs)) * s + 1152 * MHs * (trip(MWs) * sqr(MWs)) * (sqr(MZs)) * s - 1152 * (sqr(MHs)) * (trip(MWs)) * (trip(MZs)) * s - 3744 * MHs * (trip(MWs) * MWs) * (trip(MZs)) * s + 666 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs) * MZs) * s + 4608 * MHs * (trip(MWs)) * (trip(MZs) * MZs) * s - 162 * (sqr(MHs)) * MWs * (trip(MZs) * sqr(MZs)) * s - 2664 * MHs * (sqr(MWs)) * (trip(MZs) * sqr(MZs)) * s + 648 * MHs * MWs * (trip(MZs) * trip(MZs)) * s) * real(B0fin(s, 0, 0))) / (1536. * MHs * (MHs - 4 * MZs) * MZs * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) + (trip(EL) * (-384 * (sqr(MHs)) * (trip(MWs) * trip(MWs)) * MZs + 592 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * (sqr(MZs)) + 1536 * MHs * (trip(MWs) * trip(MWs)) * (sqr(MZs)) - 80 * (sqr(MHs)) * (trip(MWs) * MWs) * (trip(MZs)) - 2368 * MHs * (trip(MWs) * sqr(MWs)) * (trip(MZs)) - 128 * (sqr(MHs)) * (trip(MWs)) * (trip(MZs) * MZs) + 320 * MHs * (trip(MWs) * MWs) * (trip(MZs) * MZs) + 512 * MHs * (trip(MWs)) * (trip(MZs) * sqr(MZs)) - 288 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * MZs * s + 536 * (sqr(MHs)) * (trip(MWs) * MWs) * (sqr(MZs)) * s + 1152 * MHs * (trip(MWs) * sqr(MWs)) * (sqr(MZs)) * s - 232 * (sqr(MHs)) * (trip(MWs)) * (trip(MZs)) * s - 2144 * MHs * (trip(MWs) * MWs) * (trip(MZs)) * s - 16 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs) * MZs) * s + 928 * MHs * (trip(MWs)) * (trip(MZs) * MZs) * s + 64 * MHs * (sqr(MWs)) * (trip(MZs) * sqr(MZs)) * s) * real(B0fin(s, MWs, MWs))) / (1536. * MHs * (MHs - 4 * MZs) * MZs * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) + (trip(EL) * (24 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * (trip(MZs)) - 24 * (sqr(MHs)) * (trip(MWs) * MWs) * (trip(MZs) * MZs) - 96 * MHs * (trip(MWs) * sqr(MWs)) * (trip(MZs) * MZs) + 96 * MHs * (trip(MWs) * MWs) * (trip(MZs) * sqr(MZs)) + 48 * (sqr(MHs)) * (trip(MWs) * MWs) * (trip(MZs)) * s - 48 * (sqr(MHs)) * (trip(MWs)) * (trip(MZs) * MZs) * s - 192 * MHs * (trip(MWs) * MWs) * (trip(MZs) * MZs) * s + 192 * MHs * (trip(MWs)) * (trip(MZs) * sqr(MZs)) * s + 24 * (sqr(MHs)) * (trip(MWs)) * (trip(MZs)) * (s * s) - 24 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs) * MZs) * (s * s) - 96 * MHs * (trip(MWs)) * (trip(MZs) * MZs) * (s * s) + 96 * MHs * (sqr(MWs)) * (trip(MZs) * sqr(MZs)) * (s * s)) * real(C0(s, 0, 0, 0, 0, MWs))) / (1536. * MHs * (MHs - 4 * MZs) * MZs * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) + (trip(EL) * (-192 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * (trip(MZs)) + 624 * (sqr(MHs)) * (trip(MWs) * MWs) * (trip(MZs) * MZs) + 768 * MHs * (trip(MWs) * sqr(MWs)) * (trip(MZs) * MZs) - 792 * (sqr(MHs)) * (trip(MWs)) * (trip(MZs) * sqr(MZs)) - 2496 * MHs * (trip(MWs) * MWs) * (trip(MZs) * sqr(MZs)) + 468 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs) * trip(MZs)) + 3168 * MHs * (trip(MWs)) * (trip(MZs) * trip(MZs)) - 108 * (sqr(MHs)) * MWs * (trip(MZs) * trip(MZs) * MZs) - 1872 * MHs * (sqr(MWs)) * (trip(MZs) * trip(MZs) * MZs) + 432 * MHs * MWs * (trip(MZs) * trip(MZs) * sqr(MZs)) - 384 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * (sqr(MZs)) * s + 1248 * (sqr(MHs)) * (trip(MWs) * MWs) * (trip(MZs)) * s + 1536 * MHs * (trip(MWs) * sqr(MWs)) * (trip(MZs)) * s - 1584 * (sqr(MHs)) * (trip(MWs)) * (trip(MZs) * MZs) * s - 4992 * MHs * (trip(MWs) * MWs) * (trip(MZs) * MZs) * s + 936 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs) * sqr(MZs)) * s + 6336 * MHs * (trip(MWs)) * (trip(MZs) * sqr(MZs)) * s - 216 * (sqr(MHs)) * MWs * (trip(MZs) * trip(MZs)) * s - 3744 * MHs * (sqr(MWs)) * (trip(MZs) * trip(MZs)) * s + 864 * MHs * MWs * (trip(MZs) * trip(MZs) * MZs) * s - 192 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * MZs * (s * s) + 624 * (sqr(MHs)) * (trip(MWs) * MWs) * (sqr(MZs)) * (s * s) + 768 * MHs * (trip(MWs) * sqr(MWs)) * (sqr(MZs)) * (s * s) - 792 * (sqr(MHs)) * (trip(MWs)) * (trip(MZs)) * (s * s) - 2496 * MHs * (trip(MWs) * MWs) * (trip(MZs)) * (s * s) + 468 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs) * MZs) * (s * s) + 3168 * MHs * (trip(MWs)) * (trip(MZs) * MZs) * (s * s) - 108 * (sqr(MHs)) * MWs * (trip(MZs) * sqr(MZs)) * (s * s) - 1872 * MHs * (sqr(MWs)) * (trip(MZs) * sqr(MZs)) * (s * s) + 432 * MHs * MWs * (trip(MZs) * trip(MZs)) * (s * s)) * real(C0(s, 0, 0, 0, 0, MZs))) / (1536. * MHs * (MHs - 4 * MZs) * MZs * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) + (trip(EL) * (48 * (sqr(MHs)) * (trip(MWs) * trip(MWs)) * (sqr(MZs)) - 48 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * (trip(MZs)) - 192 * MHs * (trip(MWs) * trip(MWs)) * (trip(MZs)) + 192 * MHs * (trip(MWs) * sqr(MWs)) * (trip(MZs) * MZs) + 96 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * (sqr(MZs)) * s - 96 * (sqr(MHs)) * (trip(MWs) * MWs) * (trip(MZs)) * s - 384 * MHs * (trip(MWs) * sqr(MWs)) * (trip(MZs)) * s + 384 * MHs * (trip(MWs) * MWs) * (trip(MZs) * MZs) * s) * real(C0(s, 0, 0, MWs, MWs, 0))) / (1536. * MHs * (MHs - 4 * MZs) * MZs * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s);
            break;
        case NEU:
            res = -(trip(EL) * (-120 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * s - 48 * (sqr(MHs)) * (trip(MWs) * MWs) * MZs * s + 480 * MHs * (trip(MWs) * sqr(MWs)) * MZs * s - trip(MHs) * (sqr(MWs)) * (sqr(MZs)) * s + 336 * (sqr(MHs)) * (trip(MWs)) * (sqr(MZs)) * s + 192 * MHs * (trip(MWs) * MWs) * (sqr(MZs)) * s + trip(MHs) * MWs * (trip(MZs)) * s - 166 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs)) * s - 1344 * MHs * (trip(MWs)) * (trip(MZs)) * s - 2 * (sqr(MHs)) * MWs * (trip(MZs) * MZs) * s + 668 * MHs * (sqr(MWs)) * (trip(MZs) * MZs) * s + 4 * MHs * MWs * (trip(MZs) * sqr(MZs)) * s)) / (1536. * MHs * (MHs - 4 * MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * MZs * (-24 * MHs * MWs * (MWs - MZs) * (sqr(MZs)) + 24 * MWs * (MWs - MZs) * (trip(MZs)) - trip(MHs) * (4 * (sqr(MWs)) - 5 * MWs * MZs + sqr(MZs)) + sqr(MHs) * MZs * (19 * (sqr(MWs)) - 23 * MWs * MZs + 4 * (sqr(MZs)))) * A0fin(MHs)) / (1536. * MHs * (MHs - 4 * MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi)) - (trip(EL) * (4 * (trip(MWs)) * MZs * (6 * MZs - 19 * s) + 120 * (trip(MWs) * MWs) * s - 2 * MWs * (MHs - 5 * MZs) * (sqr(MZs)) * s + trip(MZs) * (MHs + MZs) * s - 2 * (sqr(MWs)) * (sqr(MZs)) * (12 * MZs + 19 * s)) * A0fin(MWs)) / (1536. * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * MZs * (sqr(MHs) * MWs * (4 * MWs - 3 * MZs) * s + 4 * MZs * (48 * (trip(MWs)) * s + trip(MZs) * s + 6 * MWs * (sqr(MZs)) * (2 * MZs + 3 * s) - 2 * (sqr(MWs)) * MZs * (6 * MZs + 25 * s)) - MHs * (48 * (trip(MWs)) * s + trip(MZs) * s + 3 * MWs * (sqr(MZs)) * (4 * MZs + 3 * s) - sqr(MWs) * MZs * (12 * MZs + 37 * s))) * A0fin(MZs)) / (1536. * (MHs - 4 * MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * (-2 * (trip(MHs) * MHs) * MWs * (sqr(MZs)) * s + 8 * (trip(MHs)) * (sqr(MWs)) * (sqr(MZs)) * s - 24 * (sqr(MHs)) * (trip(MWs)) * (sqr(MZs)) * s + trip(MHs) * MHs * (trip(MZs)) * s + 4 * (trip(MHs)) * MWs * (trip(MZs)) * s - 20 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs)) * s + 96 * MHs * (trip(MWs)) * (trip(MZs)) * s - 4 * (trip(MHs)) * (trip(MZs) * MZs) * s + 16 * (sqr(MHs)) * MWs * (trip(MZs) * MZs) * s - 48 * MHs * (sqr(MWs)) * (trip(MZs) * MZs) * s) * real(B0fin(MWs, MHs, MWs))) / (1536. * MHs * (MHs - 4 * MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * (96 * (sqr(MHs)) * (trip(MWs) * MWs) * MZs * s + 88 * (sqr(MHs)) * (trip(MWs)) * (sqr(MZs)) * s - 384 * MHs * (trip(MWs) * MWs) * (sqr(MZs)) * s - 100 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs)) * s - 352 * MHs * (trip(MWs)) * (trip(MZs)) * s + 14 * (sqr(MHs)) * MWs * (trip(MZs) * MZs) * s + 400 * MHs * (sqr(MWs)) * (trip(MZs) * MZs) * s + sqr(MHs) * (trip(MZs) * sqr(MZs)) * s - 56 * MHs * MWs * (trip(MZs) * sqr(MZs)) * s - 4 * MHs * (trip(MZs) * trip(MZs)) * s) * real(B0fin(MWs, MWs, MZs))) / (1536. * MHs * (MHs - 4 * MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * (4 * (trip(MHs) * MHs) * (sqr(MWs)) * MZs * s - 3 * (trip(MHs) * MHs) * MWs * (sqr(MZs)) * s - 29 * (trip(MHs)) * (sqr(MWs)) * (sqr(MZs)) * s + 21 * (trip(MHs)) * MWs * (trip(MZs)) * s + 88 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs)) * s - 60 * (sqr(MHs)) * MWs * (trip(MZs) * MZs) * s - 132 * MHs * (sqr(MWs)) * (trip(MZs) * MZs) * s + 84 * MHs * MWs * (trip(MZs) * sqr(MZs)) * s) * real(B0fin(MZs, MHs, MZs))) / (1536. * MHs * (MHs - 4 * MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * (-120 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * s - 68 * (sqr(MHs)) * (trip(MWs) * MWs) * MZs * s + 480 * MHs * (trip(MWs) * sqr(MWs)) * MZs * s + 106 * (sqr(MHs)) * (trip(MWs)) * (sqr(MZs)) * s + 272 * MHs * (trip(MWs) * MWs) * (sqr(MZs)) * s - 17 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs)) * s - 424 * MHs * (trip(MWs)) * (trip(MZs)) * s + 68 * MHs * (sqr(MWs)) * (trip(MZs) * MZs) * s) * real(B0fin(MZs, MWs, MWs))) / (1536. * MHs * (MHs - 4 * MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * (48 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * MZs - 72 * (sqr(MHs)) * (trip(MWs) * MWs) * (sqr(MZs)) - 192 * MHs * (trip(MWs) * sqr(MWs)) * (sqr(MZs)) + 24 * (sqr(MHs)) * (trip(MWs)) * (trip(MZs)) + 288 * MHs * (trip(MWs) * MWs) * (trip(MZs)) - 12 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs) * MZs) - 96 * MHs * (trip(MWs)) * (trip(MZs) * MZs) + 12 * (sqr(MHs)) * MWs * (trip(MZs) * sqr(MZs)) + 48 * MHs * (sqr(MWs)) * (trip(MZs) * sqr(MZs)) - 48 * MHs * MWs * (trip(MZs) * trip(MZs)) + 72 * (sqr(MHs)) * (trip(MWs) * MWs) * MZs * s - 108 * (sqr(MHs)) * (trip(MWs)) * (sqr(MZs)) * s - 288 * MHs * (trip(MWs) * MWs) * (sqr(MZs)) * s + 18 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs)) * s + 432 * MHs * (trip(MWs)) * (trip(MZs)) * s + 18 * (sqr(MHs)) * MWs * (trip(MZs) * MZs) * s - 72 * MHs * (sqr(MWs)) * (trip(MZs) * MZs) * s - 72 * MHs * MWs * (trip(MZs) * sqr(MZs)) * s) * real(B0fin(s, 0, 0))) / (1536. * MHs * (MHs - 4 * MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * (-48 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * MZs + 48 * (sqr(MHs)) * (trip(MWs) * MWs) * (sqr(MZs)) + 192 * MHs * (trip(MWs) * sqr(MWs)) * (sqr(MZs)) - 192 * MHs * (trip(MWs) * MWs) * (trip(MZs)) - 24 * (sqr(MHs)) * (trip(MWs) * MWs) * MZs * s + 24 * (sqr(MHs)) * (trip(MWs)) * (sqr(MZs)) * s + 96 * MHs * (trip(MWs) * MWs) * (sqr(MZs)) * s - 96 * MHs * (trip(MWs)) * (trip(MZs)) * s) * real(B0fin(s, MWs, MWs))) / (1536. * MHs * (MHs - 4 * MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * (48 * (sqr(MHs)) * (trip(MWs) * trip(MWs)) * MZs - 72 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * (sqr(MZs)) - 192 * MHs * (trip(MWs) * trip(MWs)) * (sqr(MZs)) + 24 * (sqr(MHs)) * (trip(MWs) * MWs) * (trip(MZs)) + 288 * MHs * (trip(MWs) * sqr(MWs)) * (trip(MZs)) - 96 * MHs * (trip(MWs) * MWs) * (trip(MZs) * MZs) + 96 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * MZs * s - 144 * (sqr(MHs)) * (trip(MWs) * MWs) * (sqr(MZs)) * s - 384 * MHs * (trip(MWs) * sqr(MWs)) * (sqr(MZs)) * s + 48 * (sqr(MHs)) * (trip(MWs)) * (trip(MZs)) * s + 576 * MHs * (trip(MWs) * MWs) * (trip(MZs)) * s - 192 * MHs * (trip(MWs)) * (trip(MZs) * MZs) * s + 48 * (sqr(MHs)) * (trip(MWs) * MWs) * MZs * (s * s) - 72 * (sqr(MHs)) * (trip(MWs)) * (sqr(MZs)) * (s * s) - 192 * MHs * (trip(MWs) * MWs) * (sqr(MZs)) * (s * s) + 24 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs)) * (s * s) + 288 * MHs * (trip(MWs)) * (trip(MZs)) * (s * s) - 96 * MHs * (sqr(MWs)) * (trip(MZs) * MZs) * (s * s)) * real(C0(s, 0, 0, 0, 0, MWs))) / (1536. * MHs * (MHs - 4 * MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * (-12 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs) * sqr(MZs)) + 12 * (sqr(MHs)) * MWs * (trip(MZs) * trip(MZs)) + 48 * MHs * (sqr(MWs)) * (trip(MZs) * trip(MZs)) - 48 * MHs * MWs * (trip(MZs) * trip(MZs) * MZs) - 24 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs) * MZs) * s + 24 * (sqr(MHs)) * MWs * (trip(MZs) * sqr(MZs)) * s + 96 * MHs * (sqr(MWs)) * (trip(MZs) * sqr(MZs)) * s - 96 * MHs * MWs * (trip(MZs) * trip(MZs)) * s - 12 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs)) * (s * s) + 12 * (sqr(MHs)) * MWs * (trip(MZs) * MZs) * (s * s) + 48 * MHs * (sqr(MWs)) * (trip(MZs) * MZs) * (s * s) - 48 * MHs * MWs * (trip(MZs) * sqr(MZs)) * (s * s)) * real(C0(s, 0, 0, 0, 0, MZs))) / (1536. * MHs * (MHs - 4 * MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * (48 * (sqr(MHs)) * (trip(MWs) * trip(MWs)) * MZs - 48 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * (sqr(MZs)) - 192 * MHs * (trip(MWs) * trip(MWs)) * (sqr(MZs)) + 192 * MHs * (trip(MWs) * sqr(MWs)) * (trip(MZs)) + 96 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * MZs * s - 96 * (sqr(MHs)) * (trip(MWs) * MWs) * (sqr(MZs)) * s - 384 * MHs * (trip(MWs) * sqr(MWs)) * (sqr(MZs)) * s + 384 * MHs * (trip(MWs) * MWs) * (trip(MZs)) * s) * real(C0(s, 0, 0, MWs, MWs, 0))) / (1536. * MHs * (MHs - 4 * MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s);
            break;
        case UQU:
            res = -(trip(EL) * (-2304 * (sqr(MHs)) * (trip(MWs) * trip(MWs)) * MZs + 3840 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * (sqr(MZs)) + 9216 * MHs * (trip(MWs) * trip(MWs)) * (sqr(MZs)) - 768 * (sqr(MHs)) * (trip(MWs) * MWs) * (trip(MZs)) - 15360 * MHs * (trip(MWs) * sqr(MWs)) * (trip(MZs)) - 768 * (sqr(MHs)) * (trip(MWs)) * (trip(MZs) * MZs) + 3072 * MHs * (trip(MWs) * MWs) * (trip(MZs) * MZs) + 3072 * MHs * (trip(MWs)) * (trip(MZs) * sqr(MZs)) - 576 * (sqr(MHs)) * (trip(MWs) * trip(MWs)) * s - 248 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * MZs * s + 2304 * MHs * (trip(MWs) * trip(MWs)) * MZs * s - 24 * (trip(MHs)) * (trip(MWs)) * (sqr(MZs)) * s + 3848 * (sqr(MHs)) * (trip(MWs) * MWs) * (sqr(MZs)) * s + 992 * MHs * (trip(MWs) * sqr(MWs)) * (sqr(MZs)) * s + 39 * (trip(MHs)) * (sqr(MWs)) * (trip(MZs)) * s - 5700 * (sqr(MHs)) * (trip(MWs)) * (trip(MZs)) * s - 15392 * MHs * (trip(MWs) * MWs) * (trip(MZs)) * s - 15 * (trip(MHs)) * MWs * (trip(MZs) * MZs) * s + 2666 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs) * MZs) * s + 22896 * MHs * (trip(MWs)) * (trip(MZs) * MZs) * s + 10 * (sqr(MHs)) * MWs * (trip(MZs) * sqr(MZs)) * s - 10820 * MHs * (sqr(MWs)) * (trip(MZs) * sqr(MZs)) * s + 20 * MHs * MWs * (trip(MZs) * trip(MZs)) * s)) / (13824. * MHs * (MHs - 4 * MZs) * MZs * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) + (trip(EL) * (MWs - MZs) * (24 * MHs * MWs * (8 * MWs - 5 * MZs) * (sqr(MZs)) + 24 * MWs * (trip(MZs)) * (-8 * MWs + 5 * MZs) + sqr(MHs) * MZs * (-88 * (sqr(MWs)) + 63 * MWs * MZs - 20 * (sqr(MZs))) + trip(MHs) * (16 * (sqr(MWs)) - 12 * MWs * MZs + 5 * (sqr(MZs)))) * A0fin(MHs)) / (4608. * MHs * (MHs - 4 * MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi)) - (trip(EL) * (4 * (trip(MWs)) * (sqr(MZs)) * (34 * MZs - 217 * s) - 8 * (trip(MWs) * MWs) * MZs * (148 * MZs - 25 * s) + 2 * MWs * (MHs - 101 * MZs) * (trip(MZs)) * s - 5 * (trip(MZs) * MZs) * (MHs + MZs) * s + 192 * (trip(MWs) * sqr(MWs)) * (4 * MZs + s) + 2 * (sqr(MWs)) * (trip(MZs)) * (140 * MZs + 367 * s)) * A0fin(MWs)) / (4608. * MZs * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * (3 * (sqr(MHs)) * MWs * MZs * (16 * (sqr(MWs)) - 28 * MWs * MZs + 15 * (sqr(MZs))) * s - 4 * MZs * (15 * (trip(MZs) * sqr(MZs)) * s + 256 * (trip(MWs) * sqr(MWs)) * (2 * MZs + 3 * s) - 736 * (trip(MWs) * MWs) * MZs * (2 * MZs + 3 * s) + 24 * (trip(MWs)) * (sqr(MZs)) * (74 * MZs + 113 * s) + 2 * MWs * (trip(MZs) * MZs) * (130 * MZs + 207 * s) - 2 * (sqr(MWs)) * (trip(MZs)) * (538 * MZs + 927 * s)) + MHs * (15 * (trip(MZs) * sqr(MZs)) * s + 256 * (trip(MWs) * sqr(MWs)) * (2 * MZs + 3 * s) - 736 * (trip(MWs) * MWs) * MZs * (2 * MZs + 3 * s) + 48 * (trip(MWs)) * (sqr(MZs)) * (37 * MZs + 54 * s) + MWs * (trip(MZs) * MZs) * (260 * MZs + 279 * s) - sqr(MWs) * (trip(MZs)) * (1076 * MZs + 1635 * s))) * A0fin(MZs)) / (13824. * (MHs - 4 * MZs) * MZs * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * (6 * (trip(MHs) * MHs) * MWs * (trip(MZs)) * s - 24 * (trip(MHs)) * (sqr(MWs)) * (trip(MZs)) * s + 72 * (sqr(MHs)) * (trip(MWs)) * (trip(MZs)) * s - 15 * (trip(MHs) * MHs) * (trip(MZs) * MZs) * s + 36 * (trip(MHs)) * MWs * (trip(MZs) * MZs) * s - 84 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs) * MZs) * s - 288 * MHs * (trip(MWs)) * (trip(MZs) * MZs) * s + 60 * (trip(MHs)) * (trip(MZs) * sqr(MZs)) * s - 240 * (sqr(MHs)) * MWs * (trip(MZs) * sqr(MZs)) * s + 720 * MHs * (sqr(MWs)) * (trip(MZs) * sqr(MZs)) * s) * real(B0fin(MWs, MHs, MWs))) / (13824. * MHs * (MHs - 4 * MZs) * MZs * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * (-288 * (sqr(MHs)) * (trip(MWs) * MWs) * (sqr(MZs)) * s + 312 * (sqr(MHs)) * (trip(MWs)) * (trip(MZs)) * s + 1152 * MHs * (trip(MWs) * MWs) * (trip(MZs)) * s + 1116 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs) * MZs) * s - 1248 * MHs * (trip(MWs)) * (trip(MZs) * MZs) * s - 234 * (sqr(MHs)) * MWs * (trip(MZs) * sqr(MZs)) * s - 4464 * MHs * (sqr(MWs)) * (trip(MZs) * sqr(MZs)) * s - 15 * (sqr(MHs)) * (trip(MZs) * trip(MZs)) * s + 936 * MHs * MWs * (trip(MZs) * trip(MZs)) * s + 60 * MHs * (trip(MZs) * trip(MZs) * MZs) * s) * real(B0fin(MWs, MWs, MZs))) / (13824. * MHs * (MHs - 4 * MZs) * MZs * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * (48 * (trip(MHs) * MHs) * (trip(MWs)) * MZs * s - 84 * (trip(MHs) * MHs) * (sqr(MWs)) * (sqr(MZs)) * s - 312 * (trip(MHs)) * (trip(MWs)) * (sqr(MZs)) * s + 45 * (trip(MHs) * MHs) * MWs * (trip(MZs)) * s + 555 * (trip(MHs)) * (sqr(MWs)) * (trip(MZs)) * s + 768 * (sqr(MHs)) * (trip(MWs)) * (trip(MZs)) * s - 315 * (trip(MHs)) * MWs * (trip(MZs) * MZs) * s - 1416 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs) * MZs) * s - 864 * MHs * (trip(MWs)) * (trip(MZs) * MZs) * s + 900 * (sqr(MHs)) * MWs * (trip(MZs) * sqr(MZs)) * s + 1692 * MHs * (sqr(MWs)) * (trip(MZs) * sqr(MZs)) * s - 1260 * MHs * MWs * (trip(MZs) * trip(MZs)) * s) * real(B0fin(MZs, MHs, MZs))) / (13824. * MHs * (MHs - 4 * MZs) * MZs * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * (-576 * (sqr(MHs)) * (trip(MWs) * trip(MWs)) * s + 1128 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * MZs * s + 2304 * MHs * (trip(MWs) * trip(MWs)) * MZs * s - 468 * (sqr(MHs)) * (trip(MWs) * MWs) * (sqr(MZs)) * s - 4512 * MHs * (trip(MWs) * sqr(MWs)) * (sqr(MZs)) * s - 1278 * (sqr(MHs)) * (trip(MWs)) * (trip(MZs)) * s + 1872 * MHs * (trip(MWs) * MWs) * (trip(MZs)) * s + 303 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs) * MZs) * s + 5112 * MHs * (trip(MWs)) * (trip(MZs) * MZs) * s - 1212 * MHs * (sqr(MWs)) * (trip(MZs) * sqr(MZs)) * s) * real(B0fin(MZs, MWs, MWs))) / (13824. * MHs * (MHs - 4 * MZs) * MZs * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * (-368 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * (sqr(MZs)) + 1400 * (sqr(MHs)) * (trip(MWs) * MWs) * (trip(MZs)) + 1472 * MHs * (trip(MWs) * sqr(MWs)) * (trip(MZs)) - 1848 * (sqr(MHs)) * (trip(MWs)) * (trip(MZs) * MZs) - 5600 * MHs * (trip(MWs) * MWs) * (trip(MZs) * MZs) + 1076 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs) * sqr(MZs)) + 7392 * MHs * (trip(MWs)) * (trip(MZs) * sqr(MZs)) - 260 * (sqr(MHs)) * MWs * (trip(MZs) * trip(MZs)) - 4304 * MHs * (sqr(MWs)) * (trip(MZs) * trip(MZs)) + 1040 * MHs * MWs * (trip(MZs) * trip(MZs) * MZs) - 768 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * MZs * s + 2424 * (sqr(MHs)) * (trip(MWs) * MWs) * (sqr(MZs)) * s + 3072 * MHs * (trip(MWs) * sqr(MWs)) * (sqr(MZs)) * s - 2772 * (sqr(MHs)) * (trip(MWs)) * (trip(MZs)) * s - 9696 * MHs * (trip(MWs) * MWs) * (trip(MZs)) * s + 1506 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs) * MZs) * s + 11088 * MHs * (trip(MWs)) * (trip(MZs) * MZs) * s - 390 * (sqr(MHs)) * MWs * (trip(MZs) * sqr(MZs)) * s - 6024 * MHs * (sqr(MWs)) * (trip(MZs) * sqr(MZs)) * s + 1560 * MHs * MWs * (trip(MZs) * trip(MZs)) * s) * real(B0fin(s, 0, 0))) / (13824. * MHs * (MHs - 4 * MZs) * MZs * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * (-2304 * (sqr(MHs)) * (trip(MWs) * trip(MWs)) * MZs + 3408 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * (sqr(MZs)) + 9216 * MHs * (trip(MWs) * trip(MWs)) * (sqr(MZs)) - 336 * (sqr(MHs)) * (trip(MWs) * MWs) * (trip(MZs)) - 13632 * MHs * (trip(MWs) * sqr(MWs)) * (trip(MZs)) - 768 * (sqr(MHs)) * (trip(MWs)) * (trip(MZs) * MZs) + 1344 * MHs * (trip(MWs) * MWs) * (trip(MZs) * MZs) + 3072 * MHs * (trip(MWs)) * (trip(MZs) * sqr(MZs)) - 1728 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * MZs * s + 3144 * (sqr(MHs)) * (trip(MWs) * MWs) * (sqr(MZs)) * s + 6912 * MHs * (trip(MWs) * sqr(MWs)) * (sqr(MZs)) * s - 1320 * (sqr(MHs)) * (trip(MWs)) * (trip(MZs)) * s - 12576 * MHs * (trip(MWs) * MWs) * (trip(MZs)) * s - 96 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs) * MZs) * s + 5280 * MHs * (trip(MWs)) * (trip(MZs) * MZs) * s + 384 * MHs * (sqr(MWs)) * (trip(MZs) * sqr(MZs)) * s) * real(B0fin(s, MWs, MWs))) / (13824. * MHs * (MHs - 4 * MZs) * MZs * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * (144 * (sqr(MHs)) * (trip(MWs) * trip(MWs)) * (sqr(MZs)) - 72 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * (trip(MZs)) - 576 * MHs * (trip(MWs) * trip(MWs)) * (trip(MZs)) - 72 * (sqr(MHs)) * (trip(MWs) * MWs) * (trip(MZs) * MZs) + 288 * MHs * (trip(MWs) * sqr(MWs)) * (trip(MZs) * MZs) + 288 * MHs * (trip(MWs) * MWs) * (trip(MZs) * sqr(MZs)) + 288 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * (sqr(MZs)) * s - 144 * (sqr(MHs)) * (trip(MWs) * MWs) * (trip(MZs)) * s - 1152 * MHs * (trip(MWs) * sqr(MWs)) * (trip(MZs)) * s - 144 * (sqr(MHs)) * (trip(MWs)) * (trip(MZs) * MZs) * s + 576 * MHs * (trip(MWs) * MWs) * (trip(MZs) * MZs) * s + 576 * MHs * (trip(MWs)) * (trip(MZs) * sqr(MZs)) * s + 144 * (sqr(MHs)) * (trip(MWs) * MWs) * (sqr(MZs)) * (s * s) - 72 * (sqr(MHs)) * (trip(MWs)) * (trip(MZs)) * (s * s) - 576 * MHs * (trip(MWs) * MWs) * (trip(MZs)) * (s * s) - 72 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs) * MZs) * (s * s) + 288 * MHs * (trip(MWs)) * (trip(MZs) * MZs) * (s * s) + 288 * MHs * (sqr(MWs)) * (trip(MZs) * sqr(MZs)) * (s * s)) * real(C0(s, 0, 0, 0, 0, MWs))) / (13824. * MHs * (MHs - 4 * MZs) * MZs * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * (-512 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * (trip(MZs)) + 1472 * (sqr(MHs)) * (trip(MWs) * MWs) * (trip(MZs) * MZs) + 2048 * MHs * (trip(MWs) * sqr(MWs)) * (trip(MZs) * MZs) - 1776 * (sqr(MHs)) * (trip(MWs)) * (trip(MZs) * sqr(MZs)) - 5888 * MHs * (trip(MWs) * MWs) * (trip(MZs) * sqr(MZs)) + 1076 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs) * trip(MZs)) + 7104 * MHs * (trip(MWs)) * (trip(MZs) * trip(MZs)) - 260 * (sqr(MHs)) * MWs * (trip(MZs) * trip(MZs) * MZs) - 4304 * MHs * (sqr(MWs)) * (trip(MZs) * trip(MZs) * MZs) + 1040 * MHs * MWs * (trip(MZs) * trip(MZs) * sqr(MZs)) - 1024 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * (sqr(MZs)) * s + 2944 * (sqr(MHs)) * (trip(MWs) * MWs) * (trip(MZs)) * s + 4096 * MHs * (trip(MWs) * sqr(MWs)) * (trip(MZs)) * s - 3552 * (sqr(MHs)) * (trip(MWs)) * (trip(MZs) * MZs) * s - 11776 * MHs * (trip(MWs) * MWs) * (trip(MZs) * MZs) * s + 2152 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs) * sqr(MZs)) * s + 14208 * MHs * (trip(MWs)) * (trip(MZs) * sqr(MZs)) * s - 520 * (sqr(MHs)) * MWs * (trip(MZs) * trip(MZs)) * s - 8608 * MHs * (sqr(MWs)) * (trip(MZs) * trip(MZs)) * s + 2080 * MHs * MWs * (trip(MZs) * trip(MZs) * MZs) * s - 512 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * MZs * (s * s) + 1472 * (sqr(MHs)) * (trip(MWs) * MWs) * (sqr(MZs)) * (s * s) + 2048 * MHs * (trip(MWs) * sqr(MWs)) * (sqr(MZs)) * (s * s) - 1776 * (sqr(MHs)) * (trip(MWs)) * (trip(MZs)) * (s * s) - 5888 * MHs * (trip(MWs) * MWs) * (trip(MZs)) * (s * s) + 1076 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs) * MZs) * (s * s) + 7104 * MHs * (trip(MWs)) * (trip(MZs) * MZs) * (s * s) - 260 * (sqr(MHs)) * MWs * (trip(MZs) * sqr(MZs)) * (s * s) - 4304 * MHs * (sqr(MWs)) * (trip(MZs) * sqr(MZs)) * (s * s) + 1040 * MHs * MWs * (trip(MZs) * trip(MZs)) * (s * s)) * real(C0(s, 0, 0, 0, 0, MZs))) / (13824. * MHs * (MHs - 4 * MZs) * MZs * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * (432 * (sqr(MHs)) * (trip(MWs) * trip(MWs)) * (sqr(MZs)) - 432 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * (trip(MZs)) - 1728 * MHs * (trip(MWs) * trip(MWs)) * (trip(MZs)) + 1728 * MHs * (trip(MWs) * sqr(MWs)) * (trip(MZs) * MZs) + 864 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * (sqr(MZs)) * s - 864 * (sqr(MHs)) * (trip(MWs) * MWs) * (trip(MZs)) * s - 3456 * MHs * (trip(MWs) * sqr(MWs)) * (trip(MZs)) * s + 3456 * MHs * (trip(MWs) * MWs) * (trip(MZs) * MZs) * s) * real(C0(s, 0, 0, MWs, MWs, 0))) / (13824. * MHs * (MHs - 4 * MZs) * MZs * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s);
            break;
        case DQU:
            res = -(trip(EL) * (1152 * (sqr(MHs)) * (trip(MWs) * trip(MWs)) * MZs - 1920 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * (sqr(MZs)) - 4608 * MHs * (trip(MWs) * trip(MWs)) * (sqr(MZs)) + 384 * (sqr(MHs)) * (trip(MWs) * MWs) * (sqr(MZs) * MZs) + 7680 * MHs * (trip(MWs) * sqr(MWs)) * (sqr(MZs) * MZs) + 384 * (sqr(MHs)) * (trip(MWs)) * (trip(MZs) * MZs) - 1536 * MHs * (trip(MWs) * MWs) * (trip(MZs) * MZs) - 1536 * MHs * (trip(MWs)) * (trip(MZs) * sqr(MZs)) + 288 * (sqr(MHs)) * (trip(MWs) * trip(MWs)) * s + 616 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * MZs * s - 1152 * MHs * (trip(MWs) * trip(MWs)) * MZs * s + 12 * (trip(MHs)) * (trip(MWs)) * (sqr(MZs)) * s - 1552 * (sqr(MHs)) * (trip(MWs) * MWs) * (sqr(MZs)) * s - 2464 * MHs * (trip(MWs) * sqr(MWs)) * (sqr(MZs)) * s - 15 * (trip(MHs)) * (sqr(MWs)) * (sqr(MZs) * MZs) * s + 1158 * (sqr(MHs)) * (trip(MWs)) * (sqr(MZs) * MZs) * s + 6208 * MHs * (trip(MWs) * MWs) * (sqr(MZs) * MZs) * s + 3 * (trip(MHs)) * MWs * (trip(MZs) * MZs) * s - 502 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs) * MZs) * s - 4680 * MHs * (trip(MWs)) * (trip(MZs) * MZs) * s - 8 * (sqr(MHs)) * MWs * (trip(MZs) * sqr(MZs)) * s + 2068 * MHs * (sqr(MWs)) * (trip(MZs) * sqr(MZs)) * s + 20 * MHs * MWs * (trip(MZs) * sqr(MZs) * MZs) * s)) / (13824. * MHs * (MHs - 4 * MZs) * MZs * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * (MWs - MZs) * (24 * MHs * MWs * (4 * MWs - MZs) * (sqr(MZs)) + 24 * MWs * (sqr(MZs) * MZs) * (-4 * MWs + MZs) + sqr(MHs) * MZs * (-44 * (sqr(MWs)) + 3 * MWs * MZs - 4 * (sqr(MZs))) + trip(MHs) * (8 * (sqr(MWs)) + sqr(MZs))) * A0fin(MHs)) / (4608. * MHs * (MHs - 4 * MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi)) - (trip(EL) * (8 * (trip(MWs) * MWs) * MZs * (74 * MZs - 35 * s) + trip(MZs) * MZs * (MHs + MZs) * s + 2 * MWs * (sqr(MZs) * MZs) * (MHs + 43 * MZs) * s - 96 * (trip(MWs) * sqr(MWs)) * (4 * MZs + s) + 4 * (trip(MWs)) * (sqr(MZs)) * (-26 * MZs + 137 * s) - 2 * (sqr(MWs)) * (sqr(MZs) * MZs) * (52 * MZs + 155 * s)) * A0fin(MWs)) / (4608. * MZs * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * (-3 * (sqr(MHs)) * MWs * MZs * (8 * (sqr(MWs)) - 8 * MWs * MZs + 3 * (sqr(MZs))) * s - MHs * (4 * MWs - MZs) * (9 * (sqr(MWs)) * (sqr(MZs)) * (4 * MZs - s) - 3 * (trip(MZs) * MZs) * s + 8 * (trip(MWs) * MWs) * (2 * MZs + 3 * s) - 12 * (trip(MWs)) * MZs * (2 * MZs + 3 * s) - MWs * (sqr(MZs) * MZs) * (28 * MZs + 39 * s)) + 4 * MZs * (3 * (trip(MZs) * sqr(MZs)) * s + 32 * (trip(MWs) * sqr(MWs)) * (2 * MZs + 3 * s) - 56 * (trip(MWs) * MWs) * MZs * (2 * MZs + 3 * s) + 12 * (trip(MWs)) * (sqr(MZs)) * (14 * MZs + 5 * s) + 2 * MWs * (trip(MZs) * MZs) * (14 * MZs + 27 * s) - 2 * (sqr(MWs)) * (sqr(MZs) * MZs) * (74 * MZs + 99 * s))) * A0fin(MZs)) / (13824. * (MHs - 4 * MZs) * MZs * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * (6 * (trip(MHs) * MHs) * MWs * (sqr(MZs) * MZs) * s - 24 * (trip(MHs)) * (sqr(MWs)) * (sqr(MZs) * MZs) * s + 72 * (sqr(MHs)) * (trip(MWs)) * (sqr(MZs) * MZs) * s + 3 * (trip(MHs) * MHs) * (trip(MZs) * MZs) * s - 36 * (trip(MHs)) * MWs * (trip(MZs) * MZs) * s + 132 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs) * MZs) * s - 288 * MHs * (trip(MWs)) * (trip(MZs) * MZs) * s - 12 * (trip(MHs)) * (trip(MZs) * sqr(MZs)) * s + 48 * (sqr(MHs)) * MWs * (trip(MZs) * sqr(MZs)) * s - 144 * MHs * (sqr(MWs)) * (trip(MZs) * sqr(MZs)) * s) * real(B0fin(MWs, MHs, MWs))) / (13824. * MHs * (MHs - 4 * MZs) * MZs * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * (-288 * (sqr(MHs)) * (trip(MWs) * MWs) * (sqr(MZs)) * s - 552 * (sqr(MHs)) * (trip(MWs)) * (sqr(MZs) * MZs) * s + 1152 * MHs * (trip(MWs) * MWs) * (sqr(MZs) * MZs) * s - 108 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs) * MZs) * s + 2208 * MHs * (trip(MWs)) * (trip(MZs) * MZs) * s + 54 * (sqr(MHs)) * MWs * (trip(MZs) * sqr(MZs)) * s + 432 * MHs * (sqr(MWs)) * (trip(MZs) * sqr(MZs)) * s + 3 * (sqr(MHs)) * (trip(MZs) * sqr(MZs) * MZs) * s - 216 * MHs * MWs * (trip(MZs) * sqr(MZs) * MZs) * s - 12 * MHs * (trip(MZs) * trip(MZs) * MZs) * s) * real(B0fin(MWs, MWs, MZs))) / (13824. * MHs * (MHs - 4 * MZs) * MZs * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * (-24 * (trip(MHs) * MHs) * (trip(MWs)) * MZs * s + 24 * (trip(MHs) * MHs) * (sqr(MWs)) * (sqr(MZs)) * s + 156 * (trip(MHs)) * (trip(MWs)) * (sqr(MZs)) * s - 9 * (trip(MHs) * MHs) * MWs * (sqr(MZs) * MZs) * s - 147 * (trip(MHs)) * (sqr(MWs)) * (sqr(MZs) * MZs) * s - 384 * (sqr(MHs)) * (trip(MWs)) * (sqr(MZs) * MZs) * s + 63 * (trip(MHs)) * MWs * (trip(MZs) * MZs) * s + 312 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs) * MZs) * s + 432 * MHs * (trip(MWs)) * (trip(MZs) * MZs) * s - 180 * (sqr(MHs)) * MWs * (trip(MZs) * sqr(MZs)) * s - 252 * MHs * (sqr(MWs)) * (trip(MZs) * sqr(MZs)) * s + 252 * MHs * MWs * (trip(MZs) * sqr(MZs) * MZs) * s) * real(B0fin(MZs, MHs, MZs))) / (13824. * MHs * (MHs - 4 * MZs) * MZs * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * (288 * (sqr(MHs)) * (trip(MWs) * trip(MWs)) * s - 24 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * MZs * s - 1152 * MHs * (trip(MWs) * trip(MWs)) * MZs * s + 540 * (sqr(MHs)) * (trip(MWs) * MWs) * (sqr(MZs)) * s + 96 * MHs * (trip(MWs) * sqr(MWs)) * (sqr(MZs)) * s + 162 * (sqr(MHs)) * (trip(MWs)) * (sqr(MZs) * MZs) * s - 2160 * MHs * (trip(MWs) * MWs) * (sqr(MZs) * MZs) * s - 75 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs) * MZs) * s - 648 * MHs * (trip(MWs)) * (trip(MZs) * MZs) * s + 300 * MHs * (sqr(MWs)) * (trip(MZs) * sqr(MZs)) * s) * real(B0fin(MZs, MWs, MWs))) / (13824. * MHs * (MHs - 4 * MZs) * MZs * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * (-224 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * (sqr(MZs)) + 248 * (sqr(MHs)) * (trip(MWs) * MWs) * (sqr(MZs) * MZs) + 896 * MHs * (trip(MWs) * sqr(MWs)) * (sqr(MZs) * MZs) + 96 * (sqr(MHs)) * (trip(MWs)) * (trip(MZs) * MZs) - 992 * MHs * (trip(MWs) * MWs) * (trip(MZs) * MZs) - 148 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs) * sqr(MZs)) - 384 * MHs * (trip(MWs)) * (trip(MZs) * sqr(MZs)) + 28 * (sqr(MHs)) * MWs * (trip(MZs) * sqr(MZs) * MZs) + 592 * MHs * (sqr(MWs)) * (trip(MZs) * sqr(MZs) * MZs) - 112 * MHs * MWs * (trip(MZs) * trip(MZs) * MZs) + 96 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * MZs * s - 600 * (sqr(MHs)) * (trip(MWs) * MWs) * (sqr(MZs)) * s - 384 * MHs * (trip(MWs) * sqr(MWs)) * (sqr(MZs)) * s + 792 * (sqr(MHs)) * (trip(MWs)) * (sqr(MZs) * MZs) * s + 2400 * MHs * (trip(MWs) * MWs) * (sqr(MZs) * MZs) * s - 330 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs) * MZs) * s - 3168 * MHs * (trip(MWs)) * (trip(MZs) * MZs) * s + 42 * (sqr(MHs)) * MWs * (trip(MZs) * sqr(MZs)) * s + 1320 * MHs * (sqr(MWs)) * (trip(MZs) * sqr(MZs)) * s - 168 * MHs * MWs * (trip(MZs) * sqr(MZs) * MZs) * s) * real(B0fin(s, 0, 0))) / (13824. * MHs * (MHs - 4 * MZs) * MZs * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * (1152 * (sqr(MHs)) * (trip(MWs) * trip(MWs)) * MZs - 1488 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * (sqr(MZs)) - 4608 * MHs * (trip(MWs) * trip(MWs)) * (sqr(MZs)) - 48 * (sqr(MHs)) * (trip(MWs) * MWs) * (sqr(MZs) * MZs) + 5952 * MHs * (trip(MWs) * sqr(MWs)) * (sqr(MZs) * MZs) + 384 * (sqr(MHs)) * (trip(MWs)) * (trip(MZs) * MZs) + 192 * MHs * (trip(MWs) * MWs) * (trip(MZs) * MZs) - 1536 * MHs * (trip(MWs)) * (trip(MZs) * sqr(MZs)) + 864 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * MZs * s - 1464 * (sqr(MHs)) * (trip(MWs) * MWs) * (sqr(MZs)) * s - 3456 * MHs * (trip(MWs) * sqr(MWs)) * (sqr(MZs)) * s + 552 * (sqr(MHs)) * (trip(MWs)) * (sqr(MZs) * MZs) * s + 5856 * MHs * (trip(MWs) * MWs) * (sqr(MZs) * MZs) * s + 48 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs) * MZs) * s - 2208 * MHs * (trip(MWs)) * (trip(MZs) * MZs) * s - 192 * MHs * (sqr(MWs)) * (trip(MZs) * sqr(MZs)) * s) * real(B0fin(s, MWs, MWs))) / (13824. * MHs * (MHs - 4 * MZs) * MZs * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * (-288 * (sqr(MHs)) * (trip(MWs) * trip(MWs)) * (sqr(MZs)) + 360 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * (sqr(MZs) * MZs) + 1152 * MHs * (trip(MWs) * trip(MWs)) * (sqr(MZs) * MZs) - 72 * (sqr(MHs)) * (trip(MWs) * MWs) * (trip(MZs) * MZs) - 1440 * MHs * (trip(MWs) * sqr(MWs)) * (trip(MZs) * MZs) + 288 * MHs * (trip(MWs) * MWs) * (trip(MZs) * sqr(MZs)) - 576 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * (sqr(MZs)) * s + 720 * (sqr(MHs)) * (trip(MWs) * MWs) * (sqr(MZs) * MZs) * s + 2304 * MHs * (trip(MWs) * sqr(MWs)) * (sqr(MZs) * MZs) * s - 144 * (sqr(MHs)) * (trip(MWs)) * (trip(MZs) * MZs) * s - 2880 * MHs * (trip(MWs) * MWs) * (trip(MZs) * MZs) * s + 576 * MHs * (trip(MWs)) * (trip(MZs) * sqr(MZs)) * s - 288 * (sqr(MHs)) * (trip(MWs) * MWs) * (sqr(MZs)) * (s * s) + 360 * (sqr(MHs)) * (trip(MWs)) * (sqr(MZs) * MZs) * (s * s) + 1152 * MHs * (trip(MWs) * MWs) * (sqr(MZs) * MZs) * (s * s) - 72 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs) * MZs) * (s * s) - 1440 * MHs * (trip(MWs)) * (trip(MZs) * MZs) * (s * s) + 288 * MHs * (sqr(MWs)) * (trip(MZs) * sqr(MZs)) * (s * s)) * real(C0(s, 0, 0, 0, 0, MWs))) / (13824. * MHs * (MHs - 4 * MZs) * MZs * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * (64 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * (sqr(MZs) * MZs) - 112 * (sqr(MHs)) * (trip(MWs) * MWs) * (trip(MZs) * MZs) - 256 * MHs * (trip(MWs) * sqr(MWs)) * (trip(MZs) * MZs) + 168 * (sqr(MHs)) * (trip(MWs)) * (trip(MZs) * sqr(MZs)) + 448 * MHs * (trip(MWs) * MWs) * (trip(MZs) * sqr(MZs)) - 148 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs) * sqr(MZs) * MZs) - 672 * MHs * (trip(MWs)) * (trip(MZs) * sqr(MZs) * MZs) + 28 * (sqr(MHs)) * MWs * (trip(MZs) * trip(MZs) * MZs) + 592 * MHs * (sqr(MWs)) * (trip(MZs) * trip(MZs) * MZs) - 112 * MHs * MWs * (trip(MZs) * trip(MZs) * sqr(MZs)) + 128 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * (sqr(MZs)) * s - 224 * (sqr(MHs)) * (trip(MWs) * MWs) * (sqr(MZs) * MZs) * s - 512 * MHs * (trip(MWs) * sqr(MWs)) * (sqr(MZs) * MZs) * s + 336 * (sqr(MHs)) * (trip(MWs)) * (trip(MZs) * MZs) * s + 896 * MHs * (trip(MWs) * MWs) * (trip(MZs) * MZs) * s - 296 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs) * sqr(MZs)) * s - 1344 * MHs * (trip(MWs)) * (trip(MZs) * sqr(MZs)) * s + 56 * (sqr(MHs)) * MWs * (trip(MZs) * sqr(MZs) * MZs) * s + 1184 * MHs * (sqr(MWs)) * (trip(MZs) * sqr(MZs) * MZs) * s - 224 * MHs * MWs * (trip(MZs) * trip(MZs) * MZs) * s + 64 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * MZs * (s * s) - 112 * (sqr(MHs)) * (trip(MWs) * MWs) * (sqr(MZs)) * (s * s) - 256 * MHs * (trip(MWs) * sqr(MWs)) * (sqr(MZs)) * (s * s) + 168 * (sqr(MHs)) * (trip(MWs)) * (sqr(MZs) * MZs) * (s * s) + 448 * MHs * (trip(MWs) * MWs) * (sqr(MZs) * MZs) * (s * s) - 148 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs) * MZs) * (s * s) - 672 * MHs * (trip(MWs)) * (trip(MZs) * MZs) * (s * s) + 28 * (sqr(MHs)) * MWs * (trip(MZs) * sqr(MZs)) * (s * s) + 592 * MHs * (sqr(MWs)) * (trip(MZs) * sqr(MZs)) * (s * s) - 112 * MHs * MWs * (trip(MZs) * sqr(MZs) * MZs) * (s * s)) * real(C0(s, 0, 0, 0, 0, MZs))) / (13824. * MHs * (MHs - 4 * MZs) * MZs * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * (-432 * (sqr(MHs)) * (trip(MWs) * trip(MWs)) * (sqr(MZs)) + 432 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * (sqr(MZs) * MZs) + 1728 * MHs * (trip(MWs) * trip(MWs)) * (sqr(MZs) * MZs) - 1728 * MHs * (trip(MWs) * sqr(MWs)) * (trip(MZs) * MZs) - 864 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * (sqr(MZs)) * s + 864 * (sqr(MHs)) * (trip(MWs) * MWs) * (sqr(MZs) * MZs) * s + 3456 * MHs * (trip(MWs) * sqr(MWs)) * (sqr(MZs) * MZs) * s - 3456 * MHs * (trip(MWs) * MWs) * (trip(MZs) * MZs) * s) * real(C0(s, 0, 0, MWs, MWs, 0))) / (13824. * MHs * (MHs - 4 * MZs) * MZs * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s);
            break;
        case BQU:
            res = -(trip(EL) * (-1152 * (sqr(MHs)) * MTs * (trip(MWs) * trip(MWs)) * (-MTs + MWs) * MZs + 1152 * (sqr(MHs)) * (trip(MWs) * trip(MWs) * MWs) * (-MTs + MWs) * MZs + 1920 * (sqr(MHs)) * MTs * (trip(MWs) * sqr(MWs)) * (-MTs + MWs) * (sqr(MZs)) - 1920 * (sqr(MHs)) * (trip(MWs) * trip(MWs)) * (-MTs + MWs) * (sqr(MZs)) + 4608 * MHs * MTs * (trip(MWs) * trip(MWs)) * (-MTs + MWs) * (sqr(MZs)) - 4608 * MHs * (trip(MWs) * trip(MWs) * MWs) * (-MTs + MWs) * (sqr(MZs)) - 384 * (sqr(MHs)) * MTs * (trip(MWs) * MWs) * (-MTs + MWs) * (sqr(MZs) * MZs) + 384 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * (-MTs + MWs) * (sqr(MZs) * MZs) - 7680 * MHs * MTs * (trip(MWs) * sqr(MWs)) * (-MTs + MWs) * (sqr(MZs) * MZs) + 7680 * MHs * (trip(MWs) * trip(MWs)) * (-MTs + MWs) * (sqr(MZs) * MZs) - 384 * (sqr(MHs)) * MTs * (trip(MWs)) * (-MTs + MWs) * (trip(MZs) * MZs) + 384 * (sqr(MHs)) * (trip(MWs) * MWs) * (-MTs + MWs) * (trip(MZs) * MZs) + 1536 * MHs * MTs * (trip(MWs) * MWs) * (-MTs + MWs) * (trip(MZs) * MZs) - 1536 * MHs * (trip(MWs) * sqr(MWs)) * (-MTs + MWs) * (trip(MZs) * MZs) + 1536 * MHs * MTs * (trip(MWs)) * (-MTs + MWs) * (trip(MZs) * sqr(MZs)) - 1536 * MHs * (trip(MWs) * MWs) * (-MTs + MWs) * (trip(MZs) * sqr(MZs)) - 288 * (sqr(MHs)) * MTs * (trip(MWs) * trip(MWs)) * (-MTs + MWs) * s + 288 * (sqr(MHs)) * (trip(MWs) * trip(MWs) * MWs) * (-MTs + MWs) * s - 616 * (sqr(MHs)) * MTs * (trip(MWs) * sqr(MWs)) * (-MTs + MWs) * MZs * s + 616 * (sqr(MHs)) * (trip(MWs) * trip(MWs)) * (-MTs + MWs) * MZs * s + 1152 * MHs * MTs * (trip(MWs) * trip(MWs)) * (-MTs + MWs) * MZs * s - 1152 * MHs * (trip(MWs) * trip(MWs) * MWs) * (-MTs + MWs) * MZs * s - 12 * (trip(MHs)) * MTs * (trip(MWs)) * (-MTs + MWs) * (sqr(MZs)) * s + 162 * (sqr(MHs)) * (MTs * MTs) * (trip(MWs)) * (-MTs + MWs) * (sqr(MZs)) * s + 12 * (trip(MHs)) * (trip(MWs) * MWs) * (-MTs + MWs) * (sqr(MZs)) * s + 1282 * (sqr(MHs)) * MTs * (trip(MWs) * MWs) * (-MTs + MWs) * (sqr(MZs)) * s - 1552 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * (-MTs + MWs) * (sqr(MZs)) * s + 2464 * MHs * MTs * (trip(MWs) * sqr(MWs)) * (-MTs + MWs) * (sqr(MZs)) * s - 2464 * MHs * (trip(MWs) * trip(MWs)) * (-MTs + MWs) * (sqr(MZs)) * s + 15 * (trip(MHs)) * MTs * (sqr(MWs)) * (-MTs + MWs) * (sqr(MZs) * MZs) * s - 297 * (sqr(MHs)) * (MTs * MTs) * (sqr(MWs)) * (-MTs + MWs) * (sqr(MZs) * MZs) * s - 15 * (trip(MHs)) * (trip(MWs)) * (-MTs + MWs) * (sqr(MZs) * MZs) * s - 807 * (sqr(MHs)) * MTs * (trip(MWs)) * (-MTs + MWs) * (sqr(MZs) * MZs) * s - 648 * MHs * (MTs * MTs) * (trip(MWs)) * (-MTs + MWs) * (sqr(MZs) * MZs) * s + 1158 * (sqr(MHs)) * (trip(MWs) * MWs) * (-MTs + MWs) * (sqr(MZs) * MZs) * s - 5128 * MHs * MTs * (trip(MWs) * MWs) * (-MTs + MWs) * (sqr(MZs) * MZs) * s + 6208 * MHs * (trip(MWs) * sqr(MWs)) * (-MTs + MWs) * (sqr(MZs) * MZs) * s - 3 * (trip(MHs)) * MTs * MWs * (-MTs + MWs) * (trip(MZs) * MZs) * s + 135 * (sqr(MHs)) * (MTs * MTs) * MWs * (-MTs + MWs) * (trip(MZs) * MZs) * s + 3 * (trip(MHs)) * (sqr(MWs)) * (-MTs + MWs) * (trip(MZs) * MZs) * s + 421 * (sqr(MHs)) * MTs * (sqr(MWs)) * (-MTs + MWs) * (trip(MZs) * MZs) * s + 1188 * MHs * (MTs * MTs) * (sqr(MWs)) * (-MTs + MWs) * (trip(MZs) * MZs) * s - 502 * (sqr(MHs)) * (trip(MWs)) * (-MTs + MWs) * (trip(MZs) * MZs) * s + 3276 * MHs * MTs * (trip(MWs)) * (-MTs + MWs) * (trip(MZs) * MZs) * s - 4680 * MHs * (trip(MWs) * MWs) * (-MTs + MWs) * (trip(MZs) * MZs) * s + 8 * (sqr(MHs)) * MTs * MWs * (-MTs + MWs) * (trip(MZs) * sqr(MZs)) * s - 540 * MHs * (MTs * MTs) * MWs * (-MTs + MWs) * (trip(MZs) * sqr(MZs)) * s - 8 * (sqr(MHs)) * (sqr(MWs)) * (-MTs + MWs) * (trip(MZs) * sqr(MZs)) * s - 1744 * MHs * MTs * (sqr(MWs)) * (-MTs + MWs) * (trip(MZs) * sqr(MZs)) * s + 2068 * MHs * (trip(MWs)) * (-MTs + MWs) * (trip(MZs) * sqr(MZs)) * s - 20 * MHs * MTs * MWs * (-MTs + MWs) * (trip(MZs) * sqr(MZs) * MZs) * s + 20 * MHs * (sqr(MWs)) * (-MTs + MWs) * (trip(MZs) * sqr(MZs) * MZs) * s)) / (13824. * MHs * ((MTs - MWs) * (MTs - MWs)) * (MHs - 4 * MZs) * MZs * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * (MWs - MZs) * (24 * MHs * MWs * (4 * MWs - MZs) * (sqr(MZs)) + 24 * MWs * (sqr(MZs) * MZs) * (-4 * MWs + MZs) + sqr(MHs) * MZs * (-44 * (sqr(MWs)) + 3 * MWs * MZs - 4 * (sqr(MZs))) + trip(MHs) * (8 * (sqr(MWs)) + sqr(MZs))) * A0fin(MHs)) / (4608. * MHs * (MHs - 4 * MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi)) + (trip(EL) * MWs * MZs * (-2 * (sqr(MWs)) + MWs * MZs + sqr(MZs)) * (2 * (trip(MTs)) + sqr(MTs) * s - 6 * MTs * MWs * (MWs + s) + 4 * (sqr(MWs)) * (MWs + 2 * s)) * A0fin(MTs)) / (768. * ((MTs - MWs) * (MTs - MWs)) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * (12 * (trip(MTs)) * MWs * (sqr(MZs)) * (-2 * (sqr(MWs)) + MWs * MZs + sqr(MZs)) + sqr(MWs) * (8 * (trip(MWs) * MWs) * MZs * (74 * MZs - 35 * s) + trip(MZs) * MZs * (MHs + MZs) * s + 2 * MWs * (sqr(MZs) * MZs) * (MHs + 43 * MZs) * s - 96 * (trip(MWs) * sqr(MWs)) * (4 * MZs + s) + 4 * (trip(MWs)) * (sqr(MZs)) * (-26 * MZs + 137 * s) - 2 * (sqr(MWs)) * (sqr(MZs) * MZs) * (52 * MZs + 155 * s)) + sqr(MTs) * (40 * (trip(MWs) * MWs) * MZs * (16 * MZs - 7 * s) + trip(MZs) * MZs * (MHs + MZs) * s + 2 * MWs * (sqr(MZs) * MZs) * (MHs + 31 * MZs) * s - 96 * (trip(MWs) * sqr(MWs)) * (4 * MZs + s) + 4 * (trip(MWs)) * (sqr(MZs)) * (-32 * MZs + 149 * s) - 2 * (sqr(MWs)) * (sqr(MZs) * MZs) * (64 * MZs + 167 * s)) + 2 * MTs * MWs * (10 * (trip(MWs)) * (sqr(MZs)) * (11 * MZs - 59 * s) - trip(MZs) * MZs * (MHs + MZs) * s - MWs * (sqr(MZs) * MZs) * (2 * MHs + 65 * MZs) * s + 96 * (trip(MWs) * sqr(MWs)) * (4 * MZs + s) + 4 * (trip(MWs) * MWs) * MZs * (-151 * MZs + 70 * s) + sqr(MWs) * (sqr(MZs) * MZs) * (110 * MZs + 331 * s))) * A0fin(MWs)) / (4608. * ((MTs - MWs) * (MTs - MWs)) * MZs * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * (-MTs + MWs) * (3 * (sqr(MHs)) * MWs * MZs * (8 * (sqr(MWs)) - 8 * MWs * MZs + 3 * (sqr(MZs))) * s + MHs * (4 * MWs - MZs) * (9 * (sqr(MWs)) * (sqr(MZs)) * (4 * MZs - s) - 3 * (trip(MZs) * MZs) * s + 8 * (trip(MWs) * MWs) * (2 * MZs + 3 * s) - 12 * (trip(MWs)) * MZs * (2 * MZs + 3 * s) - MWs * (sqr(MZs) * MZs) * (28 * MZs + 39 * s)) - 4 * MZs * (3 * (trip(MZs) * sqr(MZs)) * s + 32 * (trip(MWs) * sqr(MWs)) * (2 * MZs + 3 * s) - 56 * (trip(MWs) * MWs) * MZs * (2 * MZs + 3 * s) + 12 * (trip(MWs)) * (sqr(MZs)) * (14 * MZs + 5 * s) + 2 * MWs * (trip(MZs) * MZs) * (14 * MZs + 27 * s) - 2 * (sqr(MWs)) * (sqr(MZs) * MZs) * (74 * MZs + 99 * s))) * A0fin(MZs)) / (13824. * (MTs - MWs) * (MHs - 4 * MZs) * MZs * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) + (trip(EL) * (-MTs + MWs) * (sqr(MHs) - 4 * MHs * MWs + 12 * (sqr(MWs))) * (sqr(MZs)) * (2 * MWs + MZs) * real(B0fin(MWs, MHs, MWs))) / (4608. * (MTs - MWs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi)) - (trip(EL) * (288 * (sqr(MHs)) * MTs * (trip(MWs) * MWs) * (-MTs + MWs) * (sqr(MZs)) * s - 288 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * (-MTs + MWs) * (sqr(MZs)) * s + 552 * (sqr(MHs)) * MTs * (trip(MWs)) * (-MTs + MWs) * (sqr(MZs) * MZs) * s - 552 * (sqr(MHs)) * (trip(MWs) * MWs) * (-MTs + MWs) * (sqr(MZs) * MZs) * s - 1152 * MHs * MTs * (trip(MWs) * MWs) * (-MTs + MWs) * (sqr(MZs) * MZs) * s + 1152 * MHs * (trip(MWs) * sqr(MWs)) * (-MTs + MWs) * (sqr(MZs) * MZs) * s + 108 * (sqr(MHs)) * MTs * (sqr(MWs)) * (-MTs + MWs) * (trip(MZs) * MZs) * s - 108 * (sqr(MHs)) * (trip(MWs)) * (-MTs + MWs) * (trip(MZs) * MZs) * s - 2208 * MHs * MTs * (trip(MWs)) * (-MTs + MWs) * (trip(MZs) * MZs) * s + 2208 * MHs * (trip(MWs) * MWs) * (-MTs + MWs) * (trip(MZs) * MZs) * s - 54 * (sqr(MHs)) * MTs * MWs * (-MTs + MWs) * (trip(MZs) * sqr(MZs)) * s + 54 * (sqr(MHs)) * (sqr(MWs)) * (-MTs + MWs) * (trip(MZs) * sqr(MZs)) * s - 432 * MHs * MTs * (sqr(MWs)) * (-MTs + MWs) * (trip(MZs) * sqr(MZs)) * s + 432 * MHs * (trip(MWs)) * (-MTs + MWs) * (trip(MZs) * sqr(MZs)) * s - 3 * (sqr(MHs)) * MTs * (-MTs + MWs) * (trip(MZs) * sqr(MZs) * MZs) * s + 3 * (sqr(MHs)) * MWs * (-MTs + MWs) * (trip(MZs) * sqr(MZs) * MZs) * s + 216 * MHs * MTs * MWs * (-MTs + MWs) * (trip(MZs) * sqr(MZs) * MZs) * s - 216 * MHs * (sqr(MWs)) * (-MTs + MWs) * (trip(MZs) * sqr(MZs) * MZs) * s + 12 * MHs * MTs * (-MTs + MWs) * (trip(MZs) * trip(MZs) * MZs) * s - 12 * MHs * MWs * (-MTs + MWs) * (trip(MZs) * trip(MZs) * MZs) * s) * real(B0fin(MWs, MWs, MZs))) / (13824. * MHs * ((MTs - MWs) * (MTs - MWs)) * (MHs - 4 * MZs) * MZs * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * (24 * (trip(MHs) * MHs) * MTs * (trip(MWs)) * (-MTs + MWs) * MZs * s - 24 * (trip(MHs) * MHs) * (trip(MWs) * MWs) * (-MTs + MWs) * MZs * s - 24 * (trip(MHs) * MHs) * MTs * (sqr(MWs)) * (-MTs + MWs) * (sqr(MZs)) * s + 24 * (trip(MHs) * MHs) * (trip(MWs)) * (-MTs + MWs) * (sqr(MZs)) * s - 156 * (trip(MHs)) * MTs * (trip(MWs)) * (-MTs + MWs) * (sqr(MZs)) * s + 156 * (trip(MHs)) * (trip(MWs) * MWs) * (-MTs + MWs) * (sqr(MZs)) * s + 9 * (trip(MHs) * MHs) * MTs * MWs * (-MTs + MWs) * (sqr(MZs) * MZs) * s - 9 * (trip(MHs) * MHs) * (sqr(MWs)) * (-MTs + MWs) * (sqr(MZs) * MZs) * s + 147 * (trip(MHs)) * MTs * (sqr(MWs)) * (-MTs + MWs) * (sqr(MZs) * MZs) * s - 147 * (trip(MHs)) * (trip(MWs)) * (-MTs + MWs) * (sqr(MZs) * MZs) * s + 384 * (sqr(MHs)) * MTs * (trip(MWs)) * (-MTs + MWs) * (sqr(MZs) * MZs) * s - 384 * (sqr(MHs)) * (trip(MWs) * MWs) * (-MTs + MWs) * (sqr(MZs) * MZs) * s - 63 * (trip(MHs)) * MTs * MWs * (-MTs + MWs) * (trip(MZs) * MZs) * s + 63 * (trip(MHs)) * (sqr(MWs)) * (-MTs + MWs) * (trip(MZs) * MZs) * s - 312 * (sqr(MHs)) * MTs * (sqr(MWs)) * (-MTs + MWs) * (trip(MZs) * MZs) * s + 312 * (sqr(MHs)) * (trip(MWs)) * (-MTs + MWs) * (trip(MZs) * MZs) * s - 432 * MHs * MTs * (trip(MWs)) * (-MTs + MWs) * (trip(MZs) * MZs) * s + 432 * MHs * (trip(MWs) * MWs) * (-MTs + MWs) * (trip(MZs) * MZs) * s + 180 * (sqr(MHs)) * MTs * MWs * (-MTs + MWs) * (trip(MZs) * sqr(MZs)) * s - 180 * (sqr(MHs)) * (sqr(MWs)) * (-MTs + MWs) * (trip(MZs) * sqr(MZs)) * s + 252 * MHs * MTs * (sqr(MWs)) * (-MTs + MWs) * (trip(MZs) * sqr(MZs)) * s - 252 * MHs * (trip(MWs)) * (-MTs + MWs) * (trip(MZs) * sqr(MZs)) * s - 252 * MHs * MTs * MWs * (-MTs + MWs) * (trip(MZs) * sqr(MZs) * MZs) * s + 252 * MHs * (sqr(MWs)) * (-MTs + MWs) * (trip(MZs) * sqr(MZs) * MZs) * s) * real(B0fin(MZs, MHs, MZs))) / (13824. * MHs * ((MTs - MWs) * (MTs - MWs)) * (MHs - 4 * MZs) * MZs * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * (-288 * (sqr(MHs)) * MTs * (trip(MWs) * trip(MWs)) * (-MTs + MWs) * s + 288 * (sqr(MHs)) * (trip(MWs) * trip(MWs) * MWs) * (-MTs + MWs) * s + 24 * (sqr(MHs)) * MTs * (trip(MWs) * sqr(MWs)) * (-MTs + MWs) * MZs * s - 24 * (sqr(MHs)) * (trip(MWs) * trip(MWs)) * (-MTs + MWs) * MZs * s + 1152 * MHs * MTs * (trip(MWs) * trip(MWs)) * (-MTs + MWs) * MZs * s - 1152 * MHs * (trip(MWs) * trip(MWs) * MWs) * (-MTs + MWs) * MZs * s - 540 * (sqr(MHs)) * MTs * (trip(MWs) * MWs) * (-MTs + MWs) * (sqr(MZs)) * s + 540 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * (-MTs + MWs) * (sqr(MZs)) * s - 96 * MHs * MTs * (trip(MWs) * sqr(MWs)) * (-MTs + MWs) * (sqr(MZs)) * s + 96 * MHs * (trip(MWs) * trip(MWs)) * (-MTs + MWs) * (sqr(MZs)) * s - 162 * (sqr(MHs)) * MTs * (trip(MWs)) * (-MTs + MWs) * (sqr(MZs) * MZs) * s + 162 * (sqr(MHs)) * (trip(MWs) * MWs) * (-MTs + MWs) * (sqr(MZs) * MZs) * s + 2160 * MHs * MTs * (trip(MWs) * MWs) * (-MTs + MWs) * (sqr(MZs) * MZs) * s - 2160 * MHs * (trip(MWs) * sqr(MWs)) * (-MTs + MWs) * (sqr(MZs) * MZs) * s + 75 * (sqr(MHs)) * MTs * (sqr(MWs)) * (-MTs + MWs) * (trip(MZs) * MZs) * s - 75 * (sqr(MHs)) * (trip(MWs)) * (-MTs + MWs) * (trip(MZs) * MZs) * s + 648 * MHs * MTs * (trip(MWs)) * (-MTs + MWs) * (trip(MZs) * MZs) * s - 648 * MHs * (trip(MWs) * MWs) * (-MTs + MWs) * (trip(MZs) * MZs) * s - 300 * MHs * MTs * (sqr(MWs)) * (-MTs + MWs) * (trip(MZs) * sqr(MZs)) * s + 300 * MHs * (trip(MWs)) * (-MTs + MWs) * (trip(MZs) * sqr(MZs)) * s) * real(B0fin(MZs, MWs, MWs))) / (13824. * MHs * ((MTs - MWs) * (MTs - MWs)) * (MHs - 4 * MZs) * MZs * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * (-64 * (sqr(MHs)) * MTs * (trip(MWs) * sqr(MWs)) * (-MTs + MWs) * (sqr(MZs)) + 64 * (sqr(MHs)) * (trip(MWs) * trip(MWs)) * (-MTs + MWs) * (sqr(MZs)) + 112 * (sqr(MHs)) * MTs * (trip(MWs) * MWs) * (-MTs + MWs) * (sqr(MZs) * MZs) - 112 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * (-MTs + MWs) * (sqr(MZs) * MZs) + 256 * MHs * MTs * (trip(MWs) * sqr(MWs)) * (-MTs + MWs) * (sqr(MZs) * MZs) - 256 * MHs * (trip(MWs) * trip(MWs)) * (-MTs + MWs) * (sqr(MZs) * MZs) - 168 * (sqr(MHs)) * MTs * (trip(MWs)) * (-MTs + MWs) * (trip(MZs) * MZs) + 168 * (sqr(MHs)) * (trip(MWs) * MWs) * (-MTs + MWs) * (trip(MZs) * MZs) - 448 * MHs * MTs * (trip(MWs) * MWs) * (-MTs + MWs) * (trip(MZs) * MZs) + 448 * MHs * (trip(MWs) * sqr(MWs)) * (-MTs + MWs) * (trip(MZs) * MZs) + 148 * (sqr(MHs)) * MTs * (sqr(MWs)) * (-MTs + MWs) * (trip(MZs) * sqr(MZs)) - 148 * (sqr(MHs)) * (trip(MWs)) * (-MTs + MWs) * (trip(MZs) * sqr(MZs)) + 672 * MHs * MTs * (trip(MWs)) * (-MTs + MWs) * (trip(MZs) * sqr(MZs)) - 672 * MHs * (trip(MWs) * MWs) * (-MTs + MWs) * (trip(MZs) * sqr(MZs)) - 28 * (sqr(MHs)) * MTs * MWs * (-MTs + MWs) * (trip(MZs) * sqr(MZs) * MZs) + 28 * (sqr(MHs)) * (sqr(MWs)) * (-MTs + MWs) * (trip(MZs) * sqr(MZs) * MZs) - 592 * MHs * MTs * (sqr(MWs)) * (-MTs + MWs) * (trip(MZs) * sqr(MZs) * MZs) + 592 * MHs * (trip(MWs)) * (-MTs + MWs) * (trip(MZs) * sqr(MZs) * MZs) + 112 * MHs * MTs * MWs * (-MTs + MWs) * (trip(MZs) * trip(MZs) * MZs) - 112 * MHs * (sqr(MWs)) * (-MTs + MWs) * (trip(MZs) * trip(MZs) * MZs) - 96 * (sqr(MHs)) * MTs * (trip(MWs) * sqr(MWs)) * (-MTs + MWs) * MZs * s + 96 * (sqr(MHs)) * (trip(MWs) * trip(MWs)) * (-MTs + MWs) * MZs * s + 168 * (sqr(MHs)) * MTs * (trip(MWs) * MWs) * (-MTs + MWs) * (sqr(MZs)) * s - 168 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * (-MTs + MWs) * (sqr(MZs)) * s + 384 * MHs * MTs * (trip(MWs) * sqr(MWs)) * (-MTs + MWs) * (sqr(MZs)) * s - 384 * MHs * (trip(MWs) * trip(MWs)) * (-MTs + MWs) * (sqr(MZs)) * s - 252 * (sqr(MHs)) * MTs * (trip(MWs)) * (-MTs + MWs) * (sqr(MZs) * MZs) * s + 252 * (sqr(MHs)) * (trip(MWs) * MWs) * (-MTs + MWs) * (sqr(MZs) * MZs) * s - 672 * MHs * MTs * (trip(MWs) * MWs) * (-MTs + MWs) * (sqr(MZs) * MZs) * s + 672 * MHs * (trip(MWs) * sqr(MWs)) * (-MTs + MWs) * (sqr(MZs) * MZs) * s + 222 * (sqr(MHs)) * MTs * (sqr(MWs)) * (-MTs + MWs) * (trip(MZs) * MZs) * s - 222 * (sqr(MHs)) * (trip(MWs)) * (-MTs + MWs) * (trip(MZs) * MZs) * s + 1008 * MHs * MTs * (trip(MWs)) * (-MTs + MWs) * (trip(MZs) * MZs) * s - 1008 * MHs * (trip(MWs) * MWs) * (-MTs + MWs) * (trip(MZs) * MZs) * s - 42 * (sqr(MHs)) * MTs * MWs * (-MTs + MWs) * (trip(MZs) * sqr(MZs)) * s + 42 * (sqr(MHs)) * (sqr(MWs)) * (-MTs + MWs) * (trip(MZs) * sqr(MZs)) * s - 888 * MHs * MTs * (sqr(MWs)) * (-MTs + MWs) * (trip(MZs) * sqr(MZs)) * s + 888 * MHs * (trip(MWs)) * (-MTs + MWs) * (trip(MZs) * sqr(MZs)) * s + 168 * MHs * MTs * MWs * (-MTs + MWs) * (trip(MZs) * sqr(MZs) * MZs) * s - 168 * MHs * (sqr(MWs)) * (-MTs + MWs) * (trip(MZs) * sqr(MZs) * MZs) * s) * real(B0fin(s, 0, 0))) / (13824. * MHs * ((MTs - MWs) * (MTs - MWs)) * (MHs - 4 * MZs) * MZs * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * (-144 * (sqr(MHs)) * (trip(MTs)) * (trip(MWs)) * (-MTs + MWs) * (sqr(MZs)) + 432 * (sqr(MHs)) * MTs * (trip(MWs) * sqr(MWs)) * (-MTs + MWs) * (sqr(MZs)) - 288 * (sqr(MHs)) * (trip(MWs) * trip(MWs)) * (-MTs + MWs) * (sqr(MZs)) + 288 * (sqr(MHs)) * (trip(MTs)) * (sqr(MWs)) * (-MTs + MWs) * (sqr(MZs) * MZs) - 216 * (sqr(MHs)) * (MTs * MTs) * (trip(MWs)) * (-MTs + MWs) * (sqr(MZs) * MZs) + 576 * MHs * (trip(MTs)) * (trip(MWs)) * (-MTs + MWs) * (sqr(MZs) * MZs) - 432 * (sqr(MHs)) * MTs * (trip(MWs) * MWs) * (-MTs + MWs) * (sqr(MZs) * MZs) + 360 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * (-MTs + MWs) * (sqr(MZs) * MZs) - 1728 * MHs * MTs * (trip(MWs) * sqr(MWs)) * (-MTs + MWs) * (sqr(MZs) * MZs) + 1152 * MHs * (trip(MWs) * trip(MWs)) * (-MTs + MWs) * (sqr(MZs) * MZs) - 144 * (sqr(MHs)) * (trip(MTs)) * MWs * (-MTs + MWs) * (trip(MZs) * MZs) + 216 * (sqr(MHs)) * (MTs * MTs) * (sqr(MWs)) * (-MTs + MWs) * (trip(MZs) * MZs) - 1152 * MHs * (trip(MTs)) * (sqr(MWs)) * (-MTs + MWs) * (trip(MZs) * MZs) + 864 * MHs * (MTs * MTs) * (trip(MWs)) * (-MTs + MWs) * (trip(MZs) * MZs) - 72 * (sqr(MHs)) * (trip(MWs) * MWs) * (-MTs + MWs) * (trip(MZs) * MZs) + 1728 * MHs * MTs * (trip(MWs) * MWs) * (-MTs + MWs) * (trip(MZs) * MZs) - 1440 * MHs * (trip(MWs) * sqr(MWs)) * (-MTs + MWs) * (trip(MZs) * MZs) + 576 * MHs * (trip(MTs)) * MWs * (-MTs + MWs) * (trip(MZs) * sqr(MZs)) - 864 * MHs * (MTs * MTs) * (sqr(MWs)) * (-MTs + MWs) * (trip(MZs) * sqr(MZs)) + 288 * MHs * (trip(MWs) * MWs) * (-MTs + MWs) * (trip(MZs) * sqr(MZs)) - 72 * (sqr(MHs)) * (MTs * MTs) * (trip(MWs)) * (-MTs + MWs) * (sqr(MZs)) * s + 504 * (sqr(MHs)) * MTs * (trip(MWs) * MWs) * (-MTs + MWs) * (sqr(MZs)) * s - 432 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * (-MTs + MWs) * (sqr(MZs)) * s + 144 * (sqr(MHs)) * (MTs * MTs) * (sqr(MWs)) * (-MTs + MWs) * (sqr(MZs) * MZs) * s - 684 * (sqr(MHs)) * MTs * (trip(MWs)) * (-MTs + MWs) * (sqr(MZs) * MZs) * s + 288 * MHs * (MTs * MTs) * (trip(MWs)) * (-MTs + MWs) * (sqr(MZs) * MZs) * s + 540 * (sqr(MHs)) * (trip(MWs) * MWs) * (-MTs + MWs) * (sqr(MZs) * MZs) * s - 2016 * MHs * MTs * (trip(MWs) * MWs) * (-MTs + MWs) * (sqr(MZs) * MZs) * s + 1728 * MHs * (trip(MWs) * sqr(MWs)) * (-MTs + MWs) * (sqr(MZs) * MZs) * s - 72 * (sqr(MHs)) * (MTs * MTs) * MWs * (-MTs + MWs) * (trip(MZs) * MZs) * s + 180 * (sqr(MHs)) * MTs * (sqr(MWs)) * (-MTs + MWs) * (trip(MZs) * MZs) * s - 576 * MHs * (MTs * MTs) * (sqr(MWs)) * (-MTs + MWs) * (trip(MZs) * MZs) * s - 108 * (sqr(MHs)) * (trip(MWs)) * (-MTs + MWs) * (trip(MZs) * MZs) * s + 2736 * MHs * MTs * (trip(MWs)) * (-MTs + MWs) * (trip(MZs) * MZs) * s - 2160 * MHs * (trip(MWs) * MWs) * (-MTs + MWs) * (trip(MZs) * MZs) * s + 288 * MHs * (MTs * MTs) * MWs * (-MTs + MWs) * (trip(MZs) * sqr(MZs)) * s - 720 * MHs * MTs * (sqr(MWs)) * (-MTs + MWs) * (trip(MZs) * sqr(MZs)) * s + 432 * MHs * (trip(MWs)) * (-MTs + MWs) * (trip(MZs) * sqr(MZs)) * s) * real(B0fin(s, MTs, MTs))) / (13824. * MHs * ((MTs - MWs) * (MTs - MWs)) * (MHs - 4 * MZs) * MZs * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * (-1152 * (sqr(MHs)) * MTs * (trip(MWs) * trip(MWs)) * (-MTs + MWs) * MZs + 1152 * (sqr(MHs)) * (trip(MWs) * trip(MWs) * MWs) * (-MTs + MWs) * MZs + 216 * (sqr(MHs)) * (trip(MTs)) * (trip(MWs)) * (-MTs + MWs) * (sqr(MZs)) + 1272 * (sqr(MHs)) * MTs * (trip(MWs) * sqr(MWs)) * (-MTs + MWs) * (sqr(MZs)) - 1488 * (sqr(MHs)) * (trip(MWs) * trip(MWs)) * (-MTs + MWs) * (sqr(MZs)) + 4608 * MHs * MTs * (trip(MWs) * trip(MWs)) * (-MTs + MWs) * (sqr(MZs)) - 4608 * MHs * (trip(MWs) * trip(MWs) * MWs) * (-MTs + MWs) * (sqr(MZs)) - 324 * (sqr(MHs)) * (trip(MTs)) * (sqr(MWs)) * (-MTs + MWs) * (sqr(MZs) * MZs) + 216 * (sqr(MHs)) * (MTs * MTs) * (trip(MWs)) * (-MTs + MWs) * (sqr(MZs) * MZs) - 864 * MHs * (trip(MTs)) * (trip(MWs)) * (-MTs + MWs) * (sqr(MZs) * MZs) + 156 * (sqr(MHs)) * MTs * (trip(MWs) * MWs) * (-MTs + MWs) * (sqr(MZs) * MZs) - 48 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * (-MTs + MWs) * (sqr(MZs) * MZs) - 5088 * MHs * MTs * (trip(MWs) * sqr(MWs)) * (-MTs + MWs) * (sqr(MZs) * MZs) + 5952 * MHs * (trip(MWs) * trip(MWs)) * (-MTs + MWs) * (sqr(MZs) * MZs) + 108 * (sqr(MHs)) * (trip(MTs)) * MWs * (-MTs + MWs) * (trip(MZs) * MZs) - 216 * (sqr(MHs)) * (MTs * MTs) * (sqr(MWs)) * (-MTs + MWs) * (trip(MZs) * MZs) + 1296 * MHs * (trip(MTs)) * (sqr(MWs)) * (-MTs + MWs) * (trip(MZs) * MZs) - 276 * (sqr(MHs)) * MTs * (trip(MWs)) * (-MTs + MWs) * (trip(MZs) * MZs) - 864 * MHs * (MTs * MTs) * (trip(MWs)) * (-MTs + MWs) * (trip(MZs) * MZs) + 384 * (sqr(MHs)) * (trip(MWs) * MWs) * (-MTs + MWs) * (trip(MZs) * MZs) - 624 * MHs * MTs * (trip(MWs) * MWs) * (-MTs + MWs) * (trip(MZs) * MZs) + 192 * MHs * (trip(MWs) * sqr(MWs)) * (-MTs + MWs) * (trip(MZs) * MZs) - 432 * MHs * (trip(MTs)) * MWs * (-MTs + MWs) * (trip(MZs) * sqr(MZs)) + 864 * MHs * (MTs * MTs) * (sqr(MWs)) * (-MTs + MWs) * (trip(MZs) * sqr(MZs)) + 1104 * MHs * MTs * (trip(MWs)) * (-MTs + MWs) * (trip(MZs) * sqr(MZs)) - 1536 * MHs * (trip(MWs) * MWs) * (-MTs + MWs) * (trip(MZs) * sqr(MZs)) - 864 * (sqr(MHs)) * MTs * (trip(MWs) * sqr(MWs)) * (-MTs + MWs) * MZs * s + 864 * (sqr(MHs)) * (trip(MWs) * trip(MWs)) * (-MTs + MWs) * MZs * s + 108 * (sqr(MHs)) * (MTs * MTs) * (trip(MWs)) * (-MTs + MWs) * (sqr(MZs)) * s + 1356 * (sqr(MHs)) * MTs * (trip(MWs) * MWs) * (-MTs + MWs) * (sqr(MZs)) * s - 1464 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * (-MTs + MWs) * (sqr(MZs)) * s + 3456 * MHs * MTs * (trip(MWs) * sqr(MWs)) * (-MTs + MWs) * (sqr(MZs)) * s - 3456 * MHs * (trip(MWs) * trip(MWs)) * (-MTs + MWs) * (sqr(MZs)) * s - 162 * (sqr(MHs)) * (MTs * MTs) * (sqr(MWs)) * (-MTs + MWs) * (sqr(MZs) * MZs) * s - 390 * (sqr(MHs)) * MTs * (trip(MWs)) * (-MTs + MWs) * (sqr(MZs) * MZs) * s - 432 * MHs * (MTs * MTs) * (trip(MWs)) * (-MTs + MWs) * (sqr(MZs) * MZs) * s + 552 * (sqr(MHs)) * (trip(MWs) * MWs) * (-MTs + MWs) * (sqr(MZs) * MZs) * s - 5424 * MHs * MTs * (trip(MWs) * MWs) * (-MTs + MWs) * (sqr(MZs) * MZs) * s + 5856 * MHs * (trip(MWs) * sqr(MWs)) * (-MTs + MWs) * (sqr(MZs) * MZs) * s + 54 * (sqr(MHs)) * (MTs * MTs) * MWs * (-MTs + MWs) * (trip(MZs) * MZs) * s - 102 * (sqr(MHs)) * MTs * (sqr(MWs)) * (-MTs + MWs) * (trip(MZs) * MZs) * s + 648 * MHs * (MTs * MTs) * (sqr(MWs)) * (-MTs + MWs) * (trip(MZs) * MZs) * s + 48 * (sqr(MHs)) * (trip(MWs)) * (-MTs + MWs) * (trip(MZs) * MZs) * s + 1560 * MHs * MTs * (trip(MWs)) * (-MTs + MWs) * (trip(MZs) * MZs) * s - 2208 * MHs * (trip(MWs) * MWs) * (-MTs + MWs) * (trip(MZs) * MZs) * s - 216 * MHs * (MTs * MTs) * MWs * (-MTs + MWs) * (trip(MZs) * sqr(MZs)) * s + 408 * MHs * MTs * (sqr(MWs)) * (-MTs + MWs) * (trip(MZs) * sqr(MZs)) * s - 192 * MHs * (trip(MWs)) * (-MTs + MWs) * (trip(MZs) * sqr(MZs)) * s) * real(B0fin(s, MWs, MWs))) / (13824. * MHs * ((MTs - MWs) * (MTs - MWs)) * (MHs - 4 * MZs) * MZs * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * (-64 * (sqr(MHs)) * MTs * (trip(MWs) * sqr(MWs)) * (-MTs + MWs) * (sqr(MZs) * MZs) + 64 * (sqr(MHs)) * (trip(MWs) * trip(MWs)) * (-MTs + MWs) * (sqr(MZs) * MZs) + 112 * (sqr(MHs)) * MTs * (trip(MWs) * MWs) * (-MTs + MWs) * (trip(MZs) * MZs) - 112 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * (-MTs + MWs) * (trip(MZs) * MZs) + 256 * MHs * MTs * (trip(MWs) * sqr(MWs)) * (-MTs + MWs) * (trip(MZs) * MZs) - 256 * MHs * (trip(MWs) * trip(MWs)) * (-MTs + MWs) * (trip(MZs) * MZs) - 168 * (sqr(MHs)) * MTs * (trip(MWs)) * (-MTs + MWs) * (trip(MZs) * sqr(MZs)) + 168 * (sqr(MHs)) * (trip(MWs) * MWs) * (-MTs + MWs) * (trip(MZs) * sqr(MZs)) - 448 * MHs * MTs * (trip(MWs) * MWs) * (-MTs + MWs) * (trip(MZs) * sqr(MZs)) + 448 * MHs * (trip(MWs) * sqr(MWs)) * (-MTs + MWs) * (trip(MZs) * sqr(MZs)) + 148 * (sqr(MHs)) * MTs * (sqr(MWs)) * (-MTs + MWs) * (trip(MZs) * sqr(MZs) * MZs) - 148 * (sqr(MHs)) * (trip(MWs)) * (-MTs + MWs) * (trip(MZs) * sqr(MZs) * MZs) + 672 * MHs * MTs * (trip(MWs)) * (-MTs + MWs) * (trip(MZs) * sqr(MZs) * MZs) - 672 * MHs * (trip(MWs) * MWs) * (-MTs + MWs) * (trip(MZs) * sqr(MZs) * MZs) - 28 * (sqr(MHs)) * MTs * MWs * (-MTs + MWs) * (trip(MZs) * trip(MZs) * MZs) + 28 * (sqr(MHs)) * (sqr(MWs)) * (-MTs + MWs) * (trip(MZs) * trip(MZs) * MZs) - 592 * MHs * MTs * (sqr(MWs)) * (-MTs + MWs) * (trip(MZs) * trip(MZs) * MZs) + 592 * MHs * (trip(MWs)) * (-MTs + MWs) * (trip(MZs) * trip(MZs) * MZs) + 112 * MHs * MTs * MWs * (-MTs + MWs) * (trip(MZs) * trip(MZs) * sqr(MZs)) - 112 * MHs * (sqr(MWs)) * (-MTs + MWs) * (trip(MZs) * trip(MZs) * sqr(MZs)) - 128 * (sqr(MHs)) * MTs * (trip(MWs) * sqr(MWs)) * (-MTs + MWs) * (sqr(MZs)) * s + 128 * (sqr(MHs)) * (trip(MWs) * trip(MWs)) * (-MTs + MWs) * (sqr(MZs)) * s + 224 * (sqr(MHs)) * MTs * (trip(MWs) * MWs) * (-MTs + MWs) * (sqr(MZs) * MZs) * s - 224 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * (-MTs + MWs) * (sqr(MZs) * MZs) * s + 512 * MHs * MTs * (trip(MWs) * sqr(MWs)) * (-MTs + MWs) * (sqr(MZs) * MZs) * s - 512 * MHs * (trip(MWs) * trip(MWs)) * (-MTs + MWs) * (sqr(MZs) * MZs) * s - 336 * (sqr(MHs)) * MTs * (trip(MWs)) * (-MTs + MWs) * (trip(MZs) * MZs) * s + 336 * (sqr(MHs)) * (trip(MWs) * MWs) * (-MTs + MWs) * (trip(MZs) * MZs) * s - 896 * MHs * MTs * (trip(MWs) * MWs) * (-MTs + MWs) * (trip(MZs) * MZs) * s + 896 * MHs * (trip(MWs) * sqr(MWs)) * (-MTs + MWs) * (trip(MZs) * MZs) * s + 296 * (sqr(MHs)) * MTs * (sqr(MWs)) * (-MTs + MWs) * (trip(MZs) * sqr(MZs)) * s - 296 * (sqr(MHs)) * (trip(MWs)) * (-MTs + MWs) * (trip(MZs) * sqr(MZs)) * s + 1344 * MHs * MTs * (trip(MWs)) * (-MTs + MWs) * (trip(MZs) * sqr(MZs)) * s - 1344 * MHs * (trip(MWs) * MWs) * (-MTs + MWs) * (trip(MZs) * sqr(MZs)) * s - 56 * (sqr(MHs)) * MTs * MWs * (-MTs + MWs) * (trip(MZs) * sqr(MZs) * MZs) * s + 56 * (sqr(MHs)) * (sqr(MWs)) * (-MTs + MWs) * (trip(MZs) * sqr(MZs) * MZs) * s - 1184 * MHs * MTs * (sqr(MWs)) * (-MTs + MWs) * (trip(MZs) * sqr(MZs) * MZs) * s + 1184 * MHs * (trip(MWs)) * (-MTs + MWs) * (trip(MZs) * sqr(MZs) * MZs) * s + 224 * MHs * MTs * MWs * (-MTs + MWs) * (trip(MZs) * trip(MZs) * MZs) * s - 224 * MHs * (sqr(MWs)) * (-MTs + MWs) * (trip(MZs) * trip(MZs) * MZs) * s - 64 * (sqr(MHs)) * MTs * (trip(MWs) * sqr(MWs)) * (-MTs + MWs) * MZs * (s * s) + 64 * (sqr(MHs)) * (trip(MWs) * trip(MWs)) * (-MTs + MWs) * MZs * (s * s) + 112 * (sqr(MHs)) * MTs * (trip(MWs) * MWs) * (-MTs + MWs) * (sqr(MZs)) * (s * s) - 112 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * (-MTs + MWs) * (sqr(MZs)) * (s * s) + 256 * MHs * MTs * (trip(MWs) * sqr(MWs)) * (-MTs + MWs) * (sqr(MZs)) * (s * s) - 256 * MHs * (trip(MWs) * trip(MWs)) * (-MTs + MWs) * (sqr(MZs)) * (s * s) - 168 * (sqr(MHs)) * MTs * (trip(MWs)) * (-MTs + MWs) * (sqr(MZs) * MZs) * (s * s) + 168 * (sqr(MHs)) * (trip(MWs) * MWs) * (-MTs + MWs) * (sqr(MZs) * MZs) * (s * s) - 448 * MHs * MTs * (trip(MWs) * MWs) * (-MTs + MWs) * (sqr(MZs) * MZs) * (s * s) + 448 * MHs * (trip(MWs) * sqr(MWs)) * (-MTs + MWs) * (sqr(MZs) * MZs) * (s * s) + 148 * (sqr(MHs)) * MTs * (sqr(MWs)) * (-MTs + MWs) * (trip(MZs) * MZs) * (s * s) - 148 * (sqr(MHs)) * (trip(MWs)) * (-MTs + MWs) * (trip(MZs) * MZs) * (s * s) + 672 * MHs * MTs * (trip(MWs)) * (-MTs + MWs) * (trip(MZs) * MZs) * (s * s) - 672 * MHs * (trip(MWs) * MWs) * (-MTs + MWs) * (trip(MZs) * MZs) * (s * s) - 28 * (sqr(MHs)) * MTs * MWs * (-MTs + MWs) * (trip(MZs) * sqr(MZs)) * (s * s) + 28 * (sqr(MHs)) * (sqr(MWs)) * (-MTs + MWs) * (trip(MZs) * sqr(MZs)) * (s * s) - 592 * MHs * MTs * (sqr(MWs)) * (-MTs + MWs) * (trip(MZs) * sqr(MZs)) * (s * s) + 592 * MHs * (trip(MWs)) * (-MTs + MWs) * (trip(MZs) * sqr(MZs)) * (s * s) + 112 * MHs * MTs * MWs * (-MTs + MWs) * (trip(MZs) * sqr(MZs) * MZs) * (s * s) - 112 * MHs * (sqr(MWs)) * (-MTs + MWs) * (trip(MZs) * sqr(MZs) * MZs) * (s * s)) * real(C0(s, 0, 0, 0, 0, MZs))) / (13824. * MHs * ((MTs - MWs) * (MTs - MWs)) * (MHs - 4 * MZs) * MZs * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * (144 * (sqr(MHs)) * (trip(MTs) * MTs) * (trip(MWs)) * (-MTs + MWs) * (sqr(MZs)) - 144 * (sqr(MHs)) * (trip(MTs)) * (trip(MWs) * MWs) * (-MTs + MWs) * (sqr(MZs)) - 432 * (sqr(MHs)) * (MTs * MTs) * (trip(MWs) * sqr(MWs)) * (-MTs + MWs) * (sqr(MZs)) + 720 * (sqr(MHs)) * MTs * (trip(MWs) * trip(MWs)) * (-MTs + MWs) * (sqr(MZs)) - 288 * (sqr(MHs)) * (trip(MWs) * trip(MWs) * MWs) * (-MTs + MWs) * (sqr(MZs)) - 288 * (sqr(MHs)) * (trip(MTs) * MTs) * (sqr(MWs)) * (-MTs + MWs) * (sqr(MZs) * MZs) + 504 * (sqr(MHs)) * (trip(MTs)) * (trip(MWs)) * (-MTs + MWs) * (sqr(MZs) * MZs) - 576 * MHs * (trip(MTs) * MTs) * (trip(MWs)) * (-MTs + MWs) * (sqr(MZs) * MZs) + 216 * (sqr(MHs)) * (MTs * MTs) * (trip(MWs) * MWs) * (-MTs + MWs) * (sqr(MZs) * MZs) + 576 * MHs * (trip(MTs)) * (trip(MWs) * MWs) * (-MTs + MWs) * (sqr(MZs) * MZs) - 792 * (sqr(MHs)) * MTs * (trip(MWs) * sqr(MWs)) * (-MTs + MWs) * (sqr(MZs) * MZs) + 1728 * MHs * (MTs * MTs) * (trip(MWs) * sqr(MWs)) * (-MTs + MWs) * (sqr(MZs) * MZs) + 360 * (sqr(MHs)) * (trip(MWs) * trip(MWs)) * (-MTs + MWs) * (sqr(MZs) * MZs) - 2880 * MHs * MTs * (trip(MWs) * trip(MWs)) * (-MTs + MWs) * (sqr(MZs) * MZs) + 1152 * MHs * (trip(MWs) * trip(MWs) * MWs) * (-MTs + MWs) * (sqr(MZs) * MZs) + 144 * (sqr(MHs)) * (trip(MTs) * MTs) * MWs * (-MTs + MWs) * (trip(MZs) * MZs) - 360 * (sqr(MHs)) * (trip(MTs)) * (sqr(MWs)) * (-MTs + MWs) * (trip(MZs) * MZs) + 1152 * MHs * (trip(MTs) * MTs) * (sqr(MWs)) * (-MTs + MWs) * (trip(MZs) * MZs) + 216 * (sqr(MHs)) * (MTs * MTs) * (trip(MWs)) * (-MTs + MWs) * (trip(MZs) * MZs) - 2016 * MHs * (trip(MTs)) * (trip(MWs)) * (-MTs + MWs) * (trip(MZs) * MZs) + 72 * (sqr(MHs)) * MTs * (trip(MWs) * MWs) * (-MTs + MWs) * (trip(MZs) * MZs) - 864 * MHs * (MTs * MTs) * (trip(MWs) * MWs) * (-MTs + MWs) * (trip(MZs) * MZs) - 72 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * (-MTs + MWs) * (trip(MZs) * MZs) + 3168 * MHs * MTs * (trip(MWs) * sqr(MWs)) * (-MTs + MWs) * (trip(MZs) * MZs) - 1440 * MHs * (trip(MWs) * trip(MWs)) * (-MTs + MWs) * (trip(MZs) * MZs) - 576 * MHs * (trip(MTs) * MTs) * MWs * (-MTs + MWs) * (trip(MZs) * sqr(MZs)) + 1440 * MHs * (trip(MTs)) * (sqr(MWs)) * (-MTs + MWs) * (trip(MZs) * sqr(MZs)) - 864 * MHs * (MTs * MTs) * (trip(MWs)) * (-MTs + MWs) * (trip(MZs) * sqr(MZs)) - 288 * MHs * MTs * (trip(MWs) * MWs) * (-MTs + MWs) * (trip(MZs) * sqr(MZs)) + 288 * MHs * (trip(MWs) * sqr(MWs)) * (-MTs + MWs) * (trip(MZs) * sqr(MZs)) + 144 * (sqr(MHs)) * (trip(MTs)) * (trip(MWs)) * (-MTs + MWs) * (sqr(MZs)) * s - 432 * (sqr(MHs)) * (MTs * MTs) * (trip(MWs) * MWs) * (-MTs + MWs) * (sqr(MZs)) * s + 864 * (sqr(MHs)) * MTs * (trip(MWs) * sqr(MWs)) * (-MTs + MWs) * (sqr(MZs)) * s - 576 * (sqr(MHs)) * (trip(MWs) * trip(MWs)) * (-MTs + MWs) * (sqr(MZs)) * s - 180 * (sqr(MHs)) * (trip(MTs)) * (sqr(MWs)) * (-MTs + MWs) * (sqr(MZs) * MZs) * s + 324 * (sqr(MHs)) * (MTs * MTs) * (trip(MWs)) * (-MTs + MWs) * (sqr(MZs) * MZs) * s - 576 * MHs * (trip(MTs)) * (trip(MWs)) * (-MTs + MWs) * (sqr(MZs) * MZs) * s - 864 * (sqr(MHs)) * MTs * (trip(MWs) * MWs) * (-MTs + MWs) * (sqr(MZs) * MZs) * s + 1728 * MHs * (MTs * MTs) * (trip(MWs) * MWs) * (-MTs + MWs) * (sqr(MZs) * MZs) * s + 720 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * (-MTs + MWs) * (sqr(MZs) * MZs) * s - 3456 * MHs * MTs * (trip(MWs) * sqr(MWs)) * (-MTs + MWs) * (sqr(MZs) * MZs) * s + 2304 * MHs * (trip(MWs) * trip(MWs)) * (-MTs + MWs) * (sqr(MZs) * MZs) * s + 36 * (sqr(MHs)) * (trip(MTs)) * MWs * (-MTs + MWs) * (trip(MZs) * MZs) * s + 108 * (sqr(MHs)) * (MTs * MTs) * (sqr(MWs)) * (-MTs + MWs) * (trip(MZs) * MZs) * s + 720 * MHs * (trip(MTs)) * (sqr(MWs)) * (-MTs + MWs) * (trip(MZs) * MZs) * s - 1296 * MHs * (MTs * MTs) * (trip(MWs)) * (-MTs + MWs) * (trip(MZs) * MZs) * s - 144 * (sqr(MHs)) * (trip(MWs) * MWs) * (-MTs + MWs) * (trip(MZs) * MZs) * s + 3456 * MHs * MTs * (trip(MWs) * MWs) * (-MTs + MWs) * (trip(MZs) * MZs) * s - 2880 * MHs * (trip(MWs) * sqr(MWs)) * (-MTs + MWs) * (trip(MZs) * MZs) * s - 144 * MHs * (trip(MTs)) * MWs * (-MTs + MWs) * (trip(MZs) * sqr(MZs)) * s - 432 * MHs * (MTs * MTs) * (sqr(MWs)) * (-MTs + MWs) * (trip(MZs) * sqr(MZs)) * s + 576 * MHs * (trip(MWs) * MWs) * (-MTs + MWs) * (trip(MZs) * sqr(MZs)) * s + 288 * (sqr(MHs)) * MTs * (trip(MWs) * MWs) * (-MTs + MWs) * (sqr(MZs)) * (s * s) - 288 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * (-MTs + MWs) * (sqr(MZs)) * (s * s) - 360 * (sqr(MHs)) * MTs * (trip(MWs)) * (-MTs + MWs) * (sqr(MZs) * MZs) * (s * s) + 360 * (sqr(MHs)) * (trip(MWs) * MWs) * (-MTs + MWs) * (sqr(MZs) * MZs) * (s * s) - 1152 * MHs * MTs * (trip(MWs) * MWs) * (-MTs + MWs) * (sqr(MZs) * MZs) * (s * s) + 1152 * MHs * (trip(MWs) * sqr(MWs)) * (-MTs + MWs) * (sqr(MZs) * MZs) * (s * s) + 72 * (sqr(MHs)) * MTs * (sqr(MWs)) * (-MTs + MWs) * (trip(MZs) * MZs) * (s * s) - 72 * (sqr(MHs)) * (trip(MWs)) * (-MTs + MWs) * (trip(MZs) * MZs) * (s * s) + 1440 * MHs * MTs * (trip(MWs)) * (-MTs + MWs) * (trip(MZs) * MZs) * (s * s) - 1440 * MHs * (trip(MWs) * MWs) * (-MTs + MWs) * (trip(MZs) * MZs) * (s * s) - 288 * MHs * MTs * (sqr(MWs)) * (-MTs + MWs) * (trip(MZs) * sqr(MZs)) * (s * s) + 288 * MHs * (trip(MWs)) * (-MTs + MWs) * (trip(MZs) * sqr(MZs)) * (s * s)) * real(C0(s, 0, 0, MTs, MTs, MWs))) / (13824. * MHs * ((MTs - MWs) * (MTs - MWs)) * (MHs - 4 * MZs) * MZs * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * (216 * (sqr(MHs)) * (trip(MTs) * MTs) * (trip(MWs)) * (-MTs + MWs) * (sqr(MZs)) - 216 * (sqr(MHs)) * (trip(MTs)) * (trip(MWs) * MWs) * (-MTs + MWs) * (sqr(MZs)) - 648 * (sqr(MHs)) * (MTs * MTs) * (trip(MWs) * sqr(MWs)) * (-MTs + MWs) * (sqr(MZs)) + 1080 * (sqr(MHs)) * MTs * (trip(MWs) * trip(MWs)) * (-MTs + MWs) * (sqr(MZs)) - 432 * (sqr(MHs)) * (trip(MWs) * trip(MWs) * MWs) * (-MTs + MWs) * (sqr(MZs)) - 324 * (sqr(MHs)) * (trip(MTs) * MTs) * (sqr(MWs)) * (-MTs + MWs) * (sqr(MZs) * MZs) + 540 * (sqr(MHs)) * (trip(MTs)) * (trip(MWs)) * (-MTs + MWs) * (sqr(MZs) * MZs) - 864 * MHs * (trip(MTs) * MTs) * (trip(MWs)) * (-MTs + MWs) * (sqr(MZs) * MZs) + 324 * (sqr(MHs)) * (MTs * MTs) * (trip(MWs) * MWs) * (-MTs + MWs) * (sqr(MZs) * MZs) + 864 * MHs * (trip(MTs)) * (trip(MWs) * MWs) * (-MTs + MWs) * (sqr(MZs) * MZs) - 972 * (sqr(MHs)) * MTs * (trip(MWs) * sqr(MWs)) * (-MTs + MWs) * (sqr(MZs) * MZs) + 2592 * MHs * (MTs * MTs) * (trip(MWs) * sqr(MWs)) * (-MTs + MWs) * (sqr(MZs) * MZs) + 432 * (sqr(MHs)) * (trip(MWs) * trip(MWs)) * (-MTs + MWs) * (sqr(MZs) * MZs) - 4320 * MHs * MTs * (trip(MWs) * trip(MWs)) * (-MTs + MWs) * (sqr(MZs) * MZs) + 1728 * MHs * (trip(MWs) * trip(MWs) * MWs) * (-MTs + MWs) * (sqr(MZs) * MZs) + 108 * (sqr(MHs)) * (trip(MTs) * MTs) * MWs * (-MTs + MWs) * (trip(MZs) * MZs) - 324 * (sqr(MHs)) * (trip(MTs)) * (sqr(MWs)) * (-MTs + MWs) * (trip(MZs) * MZs) + 1296 * MHs * (trip(MTs) * MTs) * (sqr(MWs)) * (-MTs + MWs) * (trip(MZs) * MZs) + 324 * (sqr(MHs)) * (MTs * MTs) * (trip(MWs)) * (-MTs + MWs) * (trip(MZs) * MZs) - 2160 * MHs * (trip(MTs)) * (trip(MWs)) * (-MTs + MWs) * (trip(MZs) * MZs) - 108 * (sqr(MHs)) * MTs * (trip(MWs) * MWs) * (-MTs + MWs) * (trip(MZs) * MZs) - 1296 * MHs * (MTs * MTs) * (trip(MWs) * MWs) * (-MTs + MWs) * (trip(MZs) * MZs) + 3888 * MHs * MTs * (trip(MWs) * sqr(MWs)) * (-MTs + MWs) * (trip(MZs) * MZs) - 1728 * MHs * (trip(MWs) * trip(MWs)) * (-MTs + MWs) * (trip(MZs) * MZs) - 432 * MHs * (trip(MTs) * MTs) * MWs * (-MTs + MWs) * (trip(MZs) * sqr(MZs)) + 1296 * MHs * (trip(MTs)) * (sqr(MWs)) * (-MTs + MWs) * (trip(MZs) * sqr(MZs)) - 1296 * MHs * (MTs * MTs) * (trip(MWs)) * (-MTs + MWs) * (trip(MZs) * sqr(MZs)) + 432 * MHs * MTs * (trip(MWs) * MWs) * (-MTs + MWs) * (trip(MZs) * sqr(MZs)) + 216 * (sqr(MHs)) * (trip(MTs)) * (trip(MWs)) * (-MTs + MWs) * (sqr(MZs)) * s - 648 * (sqr(MHs)) * (MTs * MTs) * (trip(MWs) * MWs) * (-MTs + MWs) * (sqr(MZs)) * s + 1296 * (sqr(MHs)) * MTs * (trip(MWs) * sqr(MWs)) * (-MTs + MWs) * (sqr(MZs)) * s - 864 * (sqr(MHs)) * (trip(MWs) * trip(MWs)) * (-MTs + MWs) * (sqr(MZs)) * s - 324 * (sqr(MHs)) * (trip(MTs)) * (sqr(MWs)) * (-MTs + MWs) * (sqr(MZs) * MZs) * s + 1188 * (sqr(MHs)) * (MTs * MTs) * (trip(MWs)) * (-MTs + MWs) * (sqr(MZs) * MZs) * s - 864 * MHs * (trip(MTs)) * (trip(MWs)) * (-MTs + MWs) * (sqr(MZs) * MZs) * s - 1728 * (sqr(MHs)) * MTs * (trip(MWs) * MWs) * (-MTs + MWs) * (sqr(MZs) * MZs) * s + 2592 * MHs * (MTs * MTs) * (trip(MWs) * MWs) * (-MTs + MWs) * (sqr(MZs) * MZs) * s + 864 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * (-MTs + MWs) * (sqr(MZs) * MZs) * s - 5184 * MHs * MTs * (trip(MWs) * sqr(MWs)) * (-MTs + MWs) * (sqr(MZs) * MZs) * s + 3456 * MHs * (trip(MWs) * trip(MWs)) * (-MTs + MWs) * (sqr(MZs) * MZs) * s + 108 * (sqr(MHs)) * (trip(MTs)) * MWs * (-MTs + MWs) * (trip(MZs) * MZs) * s - 540 * (sqr(MHs)) * (MTs * MTs) * (sqr(MWs)) * (-MTs + MWs) * (trip(MZs) * MZs) * s + 1296 * MHs * (trip(MTs)) * (sqr(MWs)) * (-MTs + MWs) * (trip(MZs) * MZs) * s + 432 * (sqr(MHs)) * MTs * (trip(MWs)) * (-MTs + MWs) * (trip(MZs) * MZs) * s - 4752 * MHs * (MTs * MTs) * (trip(MWs)) * (-MTs + MWs) * (trip(MZs) * MZs) * s + 6912 * MHs * MTs * (trip(MWs) * MWs) * (-MTs + MWs) * (trip(MZs) * MZs) * s - 3456 * MHs * (trip(MWs) * sqr(MWs)) * (-MTs + MWs) * (trip(MZs) * MZs) * s - 432 * MHs * (trip(MTs)) * MWs * (-MTs + MWs) * (trip(MZs) * sqr(MZs)) * s + 2160 * MHs * (MTs * MTs) * (sqr(MWs)) * (-MTs + MWs) * (trip(MZs) * sqr(MZs)) * s - 1728 * MHs * MTs * (trip(MWs)) * (-MTs + MWs) * (trip(MZs) * sqr(MZs)) * s) * real(C0(s, 0, 0, MWs, MWs, MTs))) / (13824. * MHs * ((MTs - MWs) * (MTs - MWs)) * (MHs - 4 * MZs) * MZs * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s);
            break;
        }
        break;
    case AXV:
        switch (type)
        {
        case LEP:
            res = -(trip(EL) * (120 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * s + 96 * (sqr(MHs)) * (trip(MWs) * MWs) * MZs * s - 480 * MHs * (trip(MWs) * sqr(MWs)) * MZs * s + trip(MHs) * (sqr(MWs)) * (sqr(MZs)) * s - 450 * (sqr(MHs)) * (trip(MWs)) * (sqr(MZs)) * s - 384 * MHs * (trip(MWs) * MWs) * (sqr(MZs)) * s - trip(MHs) * MWs * (trip(MZs)) * s + 250 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs)) * s + 1800 * MHs * (trip(MWs)) * (trip(MZs)) * s - 16 * (sqr(MHs)) * MWs * (trip(MZs) * MZs) * s - 1004 * MHs * (sqr(MWs)) * (trip(MZs) * MZs) * s + 68 * MHs * MWs * (trip(MZs) * sqr(MZs)) * s)) / (1536. * MHs * (MHs - 4 * MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * MZs * (24 * MHs * MWs * (MWs - MZs) * (sqr(MZs)) + 24 * MWs * (trip(MZs)) * (-MWs + MZs) + sqr(MHs) * MZs * (-19 * (sqr(MWs)) + 23 * MWs * MZs - 4 * (sqr(MZs))) + trip(MHs) * (4 * (sqr(MWs)) - 5 * MWs * MZs + sqr(MZs))) * A0fin(MHs)) / (1536. * MHs * (MHs - 4 * MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi)) + (trip(EL) * (2 * (sqr(MWs)) * (sqr(MZs)) * (12 * MZs - 91 * s) + trip(MZs) * (MHs + MZs) * s + 2 * MWs * (sqr(MZs)) * (-MHs + 41 * MZs) * s - 4 * (trip(MWs)) * MZs * (18 * MZs + s) + 24 * (trip(MWs) * MWs) * (2 * MZs + 5 * s)) * A0fin(MWs)) / (1536. * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * (sqr(MHs) * MWs * MZs * (-4 * MWs + 3 * MZs) * s - 4 * MZs * (trip(MZs) * MZs * s - 72 * (trip(MWs) * MWs) * (2 * MZs + 3 * s) + 42 * MWs * (trip(MZs)) * (2 * MZs + 3 * s) + 12 * (trip(MWs)) * MZs * (30 * MZs + 49 * s) - 2 * (sqr(MWs)) * (sqr(MZs)) * (150 * MZs + 241 * s)) + MHs * (trip(MZs) * MZs * s - 72 * (trip(MWs) * MWs) * (2 * MZs + 3 * s) + 3 * MWs * (trip(MZs)) * (28 * MZs + 39 * s) + 12 * (trip(MWs)) * MZs * (30 * MZs + 49 * s) - sqr(MWs) * (sqr(MZs)) * (300 * MZs + 469 * s))) * A0fin(MZs)) / (1536. * (MHs - 4 * MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * (2 * (trip(MHs) * MHs) * MWs * (sqr(MZs)) * s - 8 * (trip(MHs)) * (sqr(MWs)) * (sqr(MZs)) * s + 24 * (sqr(MHs)) * (trip(MWs)) * (sqr(MZs)) * s - trip(MHs) * MHs * (trip(MZs)) * s - 4 * (trip(MHs)) * MWs * (trip(MZs)) * s + 20 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs)) * s - 96 * MHs * (trip(MWs)) * (trip(MZs)) * s + 4 * (trip(MHs)) * (trip(MZs) * MZs) * s - 16 * (sqr(MHs)) * MWs * (trip(MZs) * MZs) * s + 48 * MHs * (sqr(MWs)) * (trip(MZs) * MZs) * s) * real(B0fin(MWs, MHs, MWs))) / (1536. * MHs * (MHs - 4 * MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * (-96 * (sqr(MHs)) * (trip(MWs) * MWs) * MZs * s - 88 * (sqr(MHs)) * (trip(MWs)) * (sqr(MZs)) * s + 384 * MHs * (trip(MWs) * MWs) * (sqr(MZs)) * s + 100 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs)) * s + 352 * MHs * (trip(MWs)) * (trip(MZs)) * s - 14 * (sqr(MHs)) * MWs * (trip(MZs) * MZs) * s - 400 * MHs * (sqr(MWs)) * (trip(MZs) * MZs) * s - sqr(MHs) * (trip(MZs) * sqr(MZs)) * s + 56 * MHs * MWs * (trip(MZs) * sqr(MZs)) * s + 4 * MHs * (trip(MZs) * trip(MZs)) * s) * real(B0fin(MWs, MWs, MZs))) / (1536. * MHs * (MHs - 4 * MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * (-4 * (trip(MHs) * MHs) * (sqr(MWs)) * MZs * s + 3 * (trip(MHs) * MHs) * MWs * (sqr(MZs)) * s + 29 * (trip(MHs)) * (sqr(MWs)) * (sqr(MZs)) * s - 21 * (trip(MHs)) * MWs * (trip(MZs)) * s - 88 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs)) * s + 60 * (sqr(MHs)) * MWs * (trip(MZs) * MZs) * s + 132 * MHs * (sqr(MWs)) * (trip(MZs) * MZs) * s - 84 * MHs * MWs * (trip(MZs) * sqr(MZs)) * s) * real(B0fin(MZs, MHs, MZs))) / (1536. * MHs * (MHs - 4 * MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * (120 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * s + 68 * (sqr(MHs)) * (trip(MWs) * MWs) * MZs * s - 480 * MHs * (trip(MWs) * sqr(MWs)) * MZs * s - 106 * (sqr(MHs)) * (trip(MWs)) * (sqr(MZs)) * s - 272 * MHs * (trip(MWs) * MWs) * (sqr(MZs)) * s + 17 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs)) * s + 424 * MHs * (trip(MWs)) * (trip(MZs)) * s - 68 * MHs * (sqr(MWs)) * (trip(MZs) * MZs) * s) * real(B0fin(MZs, MWs, MWs))) / (1536. * MHs * (MHs - 4 * MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * (120 * (sqr(MHs)) * (trip(MWs) * MWs) * (sqr(MZs)) - 336 * (sqr(MHs)) * (trip(MWs)) * (trip(MZs)) - 480 * MHs * (trip(MWs) * MWs) * (trip(MZs)) + 300 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs) * MZs) + 1344 * MHs * (trip(MWs)) * (trip(MZs) * MZs) - 84 * (sqr(MHs)) * MWs * (trip(MZs) * sqr(MZs)) - 1200 * MHs * (sqr(MWs)) * (trip(MZs) * sqr(MZs)) + 336 * MHs * MWs * (trip(MZs) * trip(MZs)) + 216 * (sqr(MHs)) * (trip(MWs) * MWs) * MZs * s - 576 * (sqr(MHs)) * (trip(MWs)) * (sqr(MZs)) * s - 864 * MHs * (trip(MWs) * MWs) * (sqr(MZs)) * s + 486 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs)) * s + 2304 * MHs * (trip(MWs)) * (trip(MZs)) * s - 126 * (sqr(MHs)) * MWs * (trip(MZs) * MZs) * s - 1944 * MHs * (sqr(MWs)) * (trip(MZs) * MZs) * s + 504 * MHs * MWs * (trip(MZs) * sqr(MZs)) * s) * real(B0fin(s, 0, 0))) / (1536. * MHs * (MHs - 4 * MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * (48 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * MZs - 48 * (sqr(MHs)) * (trip(MWs) * MWs) * (sqr(MZs)) - 192 * MHs * (trip(MWs) * sqr(MWs)) * (sqr(MZs)) + 192 * MHs * (trip(MWs) * MWs) * (trip(MZs)) + 24 * (sqr(MHs)) * (trip(MWs) * MWs) * MZs * s - 24 * (sqr(MHs)) * (trip(MWs)) * (sqr(MZs)) * s - 96 * MHs * (trip(MWs) * MWs) * (sqr(MZs)) * s + 96 * MHs * (trip(MWs)) * (trip(MZs)) * s) * real(B0fin(s, MWs, MWs))) / (1536. * MHs * (MHs - 4 * MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * (-24 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * (sqr(MZs)) + 24 * (sqr(MHs)) * (trip(MWs) * MWs) * (trip(MZs)) + 96 * MHs * (trip(MWs) * sqr(MWs)) * (trip(MZs)) - 96 * MHs * (trip(MWs) * MWs) * (trip(MZs) * MZs) - 48 * (sqr(MHs)) * (trip(MWs) * MWs) * (sqr(MZs)) * s + 48 * (sqr(MHs)) * (trip(MWs)) * (trip(MZs)) * s + 192 * MHs * (trip(MWs) * MWs) * (trip(MZs)) * s - 192 * MHs * (trip(MWs)) * (trip(MZs) * MZs) * s - 24 * (sqr(MHs)) * (trip(MWs)) * (sqr(MZs)) * (s * s) + 24 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs)) * (s * s) + 96 * MHs * (trip(MWs)) * (trip(MZs)) * (s * s) - 96 * MHs * (sqr(MWs)) * (trip(MZs) * MZs) * (s * s)) * real(C0(s, 0, 0, 0, 0, MWs))) / (1536. * MHs * (MHs - 4 * MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * (144 * (sqr(MHs)) * (trip(MWs) * MWs) * (trip(MZs)) - 360 * (sqr(MHs)) * (trip(MWs)) * (trip(MZs) * MZs) - 576 * MHs * (trip(MWs) * MWs) * (trip(MZs) * MZs) + 300 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs) * sqr(MZs)) + 1440 * MHs * (trip(MWs)) * (trip(MZs) * sqr(MZs)) - 84 * (sqr(MHs)) * MWs * (trip(MZs) * trip(MZs)) - 1200 * MHs * (sqr(MWs)) * (trip(MZs) * trip(MZs)) + 336 * MHs * MWs * (trip(MZs) * trip(MZs) * MZs) + 288 * (sqr(MHs)) * (trip(MWs) * MWs) * (sqr(MZs)) * s - 720 * (sqr(MHs)) * (trip(MWs)) * (trip(MZs)) * s - 1152 * MHs * (trip(MWs) * MWs) * (trip(MZs)) * s + 600 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs) * MZs) * s + 2880 * MHs * (trip(MWs)) * (trip(MZs) * MZs) * s - 168 * (sqr(MHs)) * MWs * (trip(MZs) * sqr(MZs)) * s - 2400 * MHs * (sqr(MWs)) * (trip(MZs) * sqr(MZs)) * s + 672 * MHs * MWs * (trip(MZs) * trip(MZs)) * s + 144 * (sqr(MHs)) * (trip(MWs) * MWs) * MZs * (s * s) - 360 * (sqr(MHs)) * (trip(MWs)) * (sqr(MZs)) * (s * s) - 576 * MHs * (trip(MWs) * MWs) * (sqr(MZs)) * (s * s) + 300 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs)) * (s * s) + 1440 * MHs * (trip(MWs)) * (trip(MZs)) * (s * s) - 84 * (sqr(MHs)) * MWs * (trip(MZs) * MZs) * (s * s) - 1200 * MHs * (sqr(MWs)) * (trip(MZs) * MZs) * (s * s) + 336 * MHs * MWs * (trip(MZs) * sqr(MZs)) * (s * s)) * real(C0(s, 0, 0, 0, 0, MZs))) / (1536. * MHs * (MHs - 4 * MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * (-48 * (sqr(MHs)) * (trip(MWs) * trip(MWs)) * MZs + 48 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * (sqr(MZs)) + 192 * MHs * (trip(MWs) * trip(MWs)) * (sqr(MZs)) - 192 * MHs * (trip(MWs) * sqr(MWs)) * (trip(MZs)) - 96 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * MZs * s + 96 * (sqr(MHs)) * (trip(MWs) * MWs) * (sqr(MZs)) * s + 384 * MHs * (trip(MWs) * sqr(MWs)) * (sqr(MZs)) * s - 384 * MHs * (trip(MWs) * MWs) * (trip(MZs)) * s) * real(C0(s, 0, 0, MWs, MWs, 0))) / (1536. * MHs * (MHs - 4 * MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s);
            break;
        case NEU:
            res = -(trip(EL) * (-120 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * s - 48 * (sqr(MHs)) * (trip(MWs) * MWs) * MZs * s + 480 * MHs * (trip(MWs) * sqr(MWs)) * MZs * s - trip(MHs) * (sqr(MWs)) * (sqr(MZs)) * s + 336 * (sqr(MHs)) * (trip(MWs)) * (sqr(MZs)) * s + 192 * MHs * (trip(MWs) * MWs) * (sqr(MZs)) * s + trip(MHs) * MWs * (trip(MZs)) * s - 166 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs)) * s - 1344 * MHs * (trip(MWs)) * (trip(MZs)) * s - 2 * (sqr(MHs)) * MWs * (trip(MZs) * MZs) * s + 668 * MHs * (sqr(MWs)) * (trip(MZs) * MZs) * s + 4 * MHs * MWs * (trip(MZs) * sqr(MZs)) * s)) / (1536. * MHs * (MHs - 4 * MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * MZs * (-24 * MHs * MWs * (MWs - MZs) * (sqr(MZs)) + 24 * MWs * (MWs - MZs) * (trip(MZs)) - trip(MHs) * (4 * (sqr(MWs)) - 5 * MWs * MZs + sqr(MZs)) + sqr(MHs) * MZs * (19 * (sqr(MWs)) - 23 * MWs * MZs + 4 * (sqr(MZs)))) * A0fin(MHs)) / (1536. * MHs * (MHs - 4 * MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi)) - (trip(EL) * (4 * (trip(MWs)) * MZs * (6 * MZs - 19 * s) + 120 * (trip(MWs) * MWs) * s - 2 * MWs * (MHs - 5 * MZs) * (sqr(MZs)) * s + trip(MZs) * (MHs + MZs) * s - 2 * (sqr(MWs)) * (sqr(MZs)) * (12 * MZs + 19 * s)) * A0fin(MWs)) / (1536. * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * MZs * (sqr(MHs) * MWs * (4 * MWs - 3 * MZs) * s + 4 * MZs * (48 * (trip(MWs)) * s + trip(MZs) * s + 6 * MWs * (sqr(MZs)) * (2 * MZs + 3 * s) - 2 * (sqr(MWs)) * MZs * (6 * MZs + 25 * s)) - MHs * (48 * (trip(MWs)) * s + trip(MZs) * s + 3 * MWs * (sqr(MZs)) * (4 * MZs + 3 * s) - sqr(MWs) * MZs * (12 * MZs + 37 * s))) * A0fin(MZs)) / (1536. * (MHs - 4 * MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * (-2 * (trip(MHs) * MHs) * MWs * (sqr(MZs)) * s + 8 * (trip(MHs)) * (sqr(MWs)) * (sqr(MZs)) * s - 24 * (sqr(MHs)) * (trip(MWs)) * (sqr(MZs)) * s + trip(MHs) * MHs * (trip(MZs)) * s + 4 * (trip(MHs)) * MWs * (trip(MZs)) * s - 20 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs)) * s + 96 * MHs * (trip(MWs)) * (trip(MZs)) * s - 4 * (trip(MHs)) * (trip(MZs) * MZs) * s + 16 * (sqr(MHs)) * MWs * (trip(MZs) * MZs) * s - 48 * MHs * (sqr(MWs)) * (trip(MZs) * MZs) * s) * real(B0fin(MWs, MHs, MWs))) / (1536. * MHs * (MHs - 4 * MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * (96 * (sqr(MHs)) * (trip(MWs) * MWs) * MZs * s + 88 * (sqr(MHs)) * (trip(MWs)) * (sqr(MZs)) * s - 384 * MHs * (trip(MWs) * MWs) * (sqr(MZs)) * s - 100 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs)) * s - 352 * MHs * (trip(MWs)) * (trip(MZs)) * s + 14 * (sqr(MHs)) * MWs * (trip(MZs) * MZs) * s + 400 * MHs * (sqr(MWs)) * (trip(MZs) * MZs) * s + sqr(MHs) * (trip(MZs) * sqr(MZs)) * s - 56 * MHs * MWs * (trip(MZs) * sqr(MZs)) * s - 4 * MHs * (trip(MZs) * trip(MZs)) * s) * real(B0fin(MWs, MWs, MZs))) / (1536. * MHs * (MHs - 4 * MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * (4 * (trip(MHs) * MHs) * (sqr(MWs)) * MZs * s - 3 * (trip(MHs) * MHs) * MWs * (sqr(MZs)) * s - 29 * (trip(MHs)) * (sqr(MWs)) * (sqr(MZs)) * s + 21 * (trip(MHs)) * MWs * (trip(MZs)) * s + 88 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs)) * s - 60 * (sqr(MHs)) * MWs * (trip(MZs) * MZs) * s - 132 * MHs * (sqr(MWs)) * (trip(MZs) * MZs) * s + 84 * MHs * MWs * (trip(MZs) * sqr(MZs)) * s) * real(B0fin(MZs, MHs, MZs))) / (1536. * MHs * (MHs - 4 * MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * (-120 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * s - 68 * (sqr(MHs)) * (trip(MWs) * MWs) * MZs * s + 480 * MHs * (trip(MWs) * sqr(MWs)) * MZs * s + 106 * (sqr(MHs)) * (trip(MWs)) * (sqr(MZs)) * s + 272 * MHs * (trip(MWs) * MWs) * (sqr(MZs)) * s - 17 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs)) * s - 424 * MHs * (trip(MWs)) * (trip(MZs)) * s + 68 * MHs * (sqr(MWs)) * (trip(MZs) * MZs) * s) * real(B0fin(MZs, MWs, MWs))) / (1536. * MHs * (MHs - 4 * MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * (48 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * MZs - 72 * (sqr(MHs)) * (trip(MWs) * MWs) * (sqr(MZs)) - 192 * MHs * (trip(MWs) * sqr(MWs)) * (sqr(MZs)) + 24 * (sqr(MHs)) * (trip(MWs)) * (trip(MZs)) + 288 * MHs * (trip(MWs) * MWs) * (trip(MZs)) - 12 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs) * MZs) - 96 * MHs * (trip(MWs)) * (trip(MZs) * MZs) + 12 * (sqr(MHs)) * MWs * (trip(MZs) * sqr(MZs)) + 48 * MHs * (sqr(MWs)) * (trip(MZs) * sqr(MZs)) - 48 * MHs * MWs * (trip(MZs) * trip(MZs)) + 72 * (sqr(MHs)) * (trip(MWs) * MWs) * MZs * s - 108 * (sqr(MHs)) * (trip(MWs)) * (sqr(MZs)) * s - 288 * MHs * (trip(MWs) * MWs) * (sqr(MZs)) * s + 18 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs)) * s + 432 * MHs * (trip(MWs)) * (trip(MZs)) * s + 18 * (sqr(MHs)) * MWs * (trip(MZs) * MZs) * s - 72 * MHs * (sqr(MWs)) * (trip(MZs) * MZs) * s - 72 * MHs * MWs * (trip(MZs) * sqr(MZs)) * s) * real(B0fin(s, 0, 0))) / (1536. * MHs * (MHs - 4 * MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * (-48 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * MZs + 48 * (sqr(MHs)) * (trip(MWs) * MWs) * (sqr(MZs)) + 192 * MHs * (trip(MWs) * sqr(MWs)) * (sqr(MZs)) - 192 * MHs * (trip(MWs) * MWs) * (trip(MZs)) - 24 * (sqr(MHs)) * (trip(MWs) * MWs) * MZs * s + 24 * (sqr(MHs)) * (trip(MWs)) * (sqr(MZs)) * s + 96 * MHs * (trip(MWs) * MWs) * (sqr(MZs)) * s - 96 * MHs * (trip(MWs)) * (trip(MZs)) * s) * real(B0fin(s, MWs, MWs))) / (1536. * MHs * (MHs - 4 * MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * (48 * (sqr(MHs)) * (trip(MWs) * trip(MWs)) * MZs - 72 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * (sqr(MZs)) - 192 * MHs * (trip(MWs) * trip(MWs)) * (sqr(MZs)) + 24 * (sqr(MHs)) * (trip(MWs) * MWs) * (trip(MZs)) + 288 * MHs * (trip(MWs) * sqr(MWs)) * (trip(MZs)) - 96 * MHs * (trip(MWs) * MWs) * (trip(MZs) * MZs) + 96 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * MZs * s - 144 * (sqr(MHs)) * (trip(MWs) * MWs) * (sqr(MZs)) * s - 384 * MHs * (trip(MWs) * sqr(MWs)) * (sqr(MZs)) * s + 48 * (sqr(MHs)) * (trip(MWs)) * (trip(MZs)) * s + 576 * MHs * (trip(MWs) * MWs) * (trip(MZs)) * s - 192 * MHs * (trip(MWs)) * (trip(MZs) * MZs) * s + 48 * (sqr(MHs)) * (trip(MWs) * MWs) * MZs * (s * s) - 72 * (sqr(MHs)) * (trip(MWs)) * (sqr(MZs)) * (s * s) - 192 * MHs * (trip(MWs) * MWs) * (sqr(MZs)) * (s * s) + 24 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs)) * (s * s) + 288 * MHs * (trip(MWs)) * (trip(MZs)) * (s * s) - 96 * MHs * (sqr(MWs)) * (trip(MZs) * MZs) * (s * s)) * real(C0(s, 0, 0, 0, 0, MWs))) / (1536. * MHs * (MHs - 4 * MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * (-12 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs) * sqr(MZs)) + 12 * (sqr(MHs)) * MWs * (trip(MZs) * trip(MZs)) + 48 * MHs * (sqr(MWs)) * (trip(MZs) * trip(MZs)) - 48 * MHs * MWs * (trip(MZs) * trip(MZs) * MZs) - 24 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs) * MZs) * s + 24 * (sqr(MHs)) * MWs * (trip(MZs) * sqr(MZs)) * s + 96 * MHs * (sqr(MWs)) * (trip(MZs) * sqr(MZs)) * s - 96 * MHs * MWs * (trip(MZs) * trip(MZs)) * s - 12 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs)) * (s * s) + 12 * (sqr(MHs)) * MWs * (trip(MZs) * MZs) * (s * s) + 48 * MHs * (sqr(MWs)) * (trip(MZs) * MZs) * (s * s) - 48 * MHs * MWs * (trip(MZs) * sqr(MZs)) * (s * s)) * real(C0(s, 0, 0, 0, 0, MZs))) / (1536. * MHs * (MHs - 4 * MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * (48 * (sqr(MHs)) * (trip(MWs) * trip(MWs)) * MZs - 48 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * (sqr(MZs)) - 192 * MHs * (trip(MWs) * trip(MWs)) * (sqr(MZs)) + 192 * MHs * (trip(MWs) * sqr(MWs)) * (trip(MZs)) + 96 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * MZs * s - 96 * (sqr(MHs)) * (trip(MWs) * MWs) * (sqr(MZs)) * s - 384 * MHs * (trip(MWs) * sqr(MWs)) * (sqr(MZs)) * s + 384 * MHs * (trip(MWs) * MWs) * (trip(MZs)) * s) * real(C0(s, 0, 0, MWs, MWs, 0))) / (1536. * MHs * (MHs - 4 * MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s);
            break;
        case UQU:
            res = -(trip(EL) * (-120 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * s - 72 * (sqr(MHs)) * (trip(MWs) * MWs) * MZs * s + 480 * MHs * (trip(MWs) * sqr(MWs)) * MZs * s - trip(MHs) * (sqr(MWs)) * (sqr(MZs)) * s + 388 * (sqr(MHs)) * (trip(MWs)) * (sqr(MZs)) * s + 288 * MHs * (trip(MWs) * MWs) * (sqr(MZs)) * s + trip(MHs) * MWs * (trip(MZs)) * s - 198 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs)) * s - 1552 * MHs * (trip(MWs)) * (trip(MZs)) * s + 2 * (sqr(MHs)) * MWs * (trip(MZs) * MZs) * s + 796 * MHs * (sqr(MWs)) * (trip(MZs) * MZs) * s - 12 * MHs * MWs * (trip(MZs) * sqr(MZs)) * s)) / (1536. * MHs * (MHs - 4 * MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * MZs * (-24 * MHs * MWs * (MWs - MZs) * (sqr(MZs)) + 24 * MWs * (MWs - MZs) * (trip(MZs)) - trip(MHs) * (4 * (sqr(MWs)) - 5 * MWs * MZs + sqr(MZs)) + sqr(MHs) * MZs * (19 * (sqr(MWs)) - 23 * MWs * MZs + 4 * (sqr(MZs)))) * A0fin(MHs)) / (1536. * MHs * (MHs - 4 * MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi)) - (trip(EL) * (2 * (sqr(MWs)) * (sqr(MZs)) * (4 * MZs - 67 * s) + trip(MZs) * (MHs + MZs) * s + 2 * MWs * (sqr(MZs)) * (-MHs + 29 * MZs) * s - 4 * (trip(MWs)) * MZs * (10 * MZs + 7 * s) + 8 * (trip(MWs) * MWs) * (4 * MZs + 15 * s)) * A0fin(MWs)) / (1536. * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * (sqr(MHs) * MWs * (4 * MWs - 3 * MZs) * MZs * s + 4 * MZs * (trip(MZs) * MZs * s - 32 * (trip(MWs) * MWs) * (2 * MZs + 3 * s) + 14 * MWs * (trip(MZs)) * (2 * MZs + 3 * s) + 24 * (trip(MWs)) * MZs * (6 * MZs + 11 * s) - 2 * (sqr(MWs)) * (sqr(MZs)) * (54 * MZs + 97 * s)) + MHs * (-(trip(MZs) * MZs * s) + 32 * (trip(MWs) * MWs) * (2 * MZs + 3 * s) - 24 * (trip(MWs)) * MZs * (6 * MZs + 11 * s) - MWs * (trip(MZs)) * (28 * MZs + 33 * s) + sqr(MWs) * (sqr(MZs)) * (108 * MZs + 181 * s))) * A0fin(MZs)) / (1536. * (MHs - 4 * MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * (-2 * (trip(MHs) * MHs) * MWs * (sqr(MZs)) * s + 8 * (trip(MHs)) * (sqr(MWs)) * (sqr(MZs)) * s - 24 * (sqr(MHs)) * (trip(MWs)) * (sqr(MZs)) * s + trip(MHs) * MHs * (trip(MZs)) * s + 4 * (trip(MHs)) * MWs * (trip(MZs)) * s - 20 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs)) * s + 96 * MHs * (trip(MWs)) * (trip(MZs)) * s - 4 * (trip(MHs)) * (trip(MZs) * MZs) * s + 16 * (sqr(MHs)) * MWs * (trip(MZs) * MZs) * s - 48 * MHs * (sqr(MWs)) * (trip(MZs) * MZs) * s) * real(B0fin(MWs, MHs, MWs))) / (1536. * MHs * (MHs - 4 * MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * (96 * (sqr(MHs)) * (trip(MWs) * MWs) * MZs * s + 88 * (sqr(MHs)) * (trip(MWs)) * (sqr(MZs)) * s - 384 * MHs * (trip(MWs) * MWs) * (sqr(MZs)) * s - 100 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs)) * s - 352 * MHs * (trip(MWs)) * (trip(MZs)) * s + 14 * (sqr(MHs)) * MWs * (trip(MZs) * MZs) * s + 400 * MHs * (sqr(MWs)) * (trip(MZs) * MZs) * s + sqr(MHs) * (trip(MZs) * sqr(MZs)) * s - 56 * MHs * MWs * (trip(MZs) * sqr(MZs)) * s - 4 * MHs * (trip(MZs) * trip(MZs)) * s) * real(B0fin(MWs, MWs, MZs))) / (1536. * MHs * (MHs - 4 * MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * (4 * (trip(MHs) * MHs) * (sqr(MWs)) * MZs * s - 3 * (trip(MHs) * MHs) * MWs * (sqr(MZs)) * s - 29 * (trip(MHs)) * (sqr(MWs)) * (sqr(MZs)) * s + 21 * (trip(MHs)) * MWs * (trip(MZs)) * s + 88 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs)) * s - 60 * (sqr(MHs)) * MWs * (trip(MZs) * MZs) * s - 132 * MHs * (sqr(MWs)) * (trip(MZs) * MZs) * s + 84 * MHs * MWs * (trip(MZs) * sqr(MZs)) * s) * real(B0fin(MZs, MHs, MZs))) / (1536. * MHs * (MHs - 4 * MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * (-120 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * s - 68 * (sqr(MHs)) * (trip(MWs) * MWs) * MZs * s + 480 * MHs * (trip(MWs) * sqr(MWs)) * MZs * s + 106 * (sqr(MHs)) * (trip(MWs)) * (sqr(MZs)) * s + 272 * MHs * (trip(MWs) * MWs) * (sqr(MZs)) * s - 17 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs)) * s - 424 * MHs * (trip(MWs)) * (trip(MZs)) * s + 68 * MHs * (sqr(MWs)) * (trip(MZs) * MZs) * s) * real(B0fin(MZs, MWs, MWs))) / (1536. * MHs * (MHs - 4 * MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * (16 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * MZs - 72 * (sqr(MHs)) * (trip(MWs) * MWs) * (sqr(MZs)) - 64 * MHs * (trip(MWs) * sqr(MWs)) * (sqr(MZs)) + 136 * (sqr(MHs)) * (trip(MWs)) * (trip(MZs)) + 288 * MHs * (trip(MWs) * MWs) * (trip(MZs)) - 108 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs) * MZs) - 544 * MHs * (trip(MWs)) * (trip(MZs) * MZs) + 28 * (sqr(MHs)) * MWs * (trip(MZs) * sqr(MZs)) + 432 * MHs * (sqr(MWs)) * (trip(MZs) * sqr(MZs)) - 112 * MHs * MWs * (trip(MZs) * trip(MZs)) - 72 * (sqr(MHs)) * (trip(MWs) * MWs) * MZs * s + 204 * (sqr(MHs)) * (trip(MWs)) * (sqr(MZs)) * s + 288 * MHs * (trip(MWs) * MWs) * (sqr(MZs)) * s - 174 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs)) * s - 816 * MHs * (trip(MWs)) * (trip(MZs)) * s + 42 * (sqr(MHs)) * MWs * (trip(MZs) * MZs) * s + 696 * MHs * (sqr(MWs)) * (trip(MZs) * MZs) * s - 168 * MHs * MWs * (trip(MZs) * sqr(MZs)) * s) * real(B0fin(s, 0, 0))) / (1536. * MHs * (MHs - 4 * MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * (-48 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * MZs + 48 * (sqr(MHs)) * (trip(MWs) * MWs) * (sqr(MZs)) + 192 * MHs * (trip(MWs) * sqr(MWs)) * (sqr(MZs)) - 192 * MHs * (trip(MWs) * MWs) * (trip(MZs)) - 24 * (sqr(MHs)) * (trip(MWs) * MWs) * MZs * s + 24 * (sqr(MHs)) * (trip(MWs)) * (sqr(MZs)) * s + 96 * MHs * (trip(MWs) * MWs) * (sqr(MZs)) * s - 96 * MHs * (trip(MWs)) * (trip(MZs)) * s) * real(B0fin(s, MWs, MWs))) / (1536. * MHs * (MHs - 4 * MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * (16 * (sqr(MHs)) * (trip(MWs) * trip(MWs)) * MZs - 8 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * (sqr(MZs)) - 64 * MHs * (trip(MWs) * trip(MWs)) * (sqr(MZs)) - 8 * (sqr(MHs)) * (trip(MWs) * MWs) * (trip(MZs)) + 32 * MHs * (trip(MWs) * sqr(MWs)) * (trip(MZs)) + 32 * MHs * (trip(MWs) * MWs) * (trip(MZs) * MZs) + 32 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * MZs * s - 16 * (sqr(MHs)) * (trip(MWs) * MWs) * (sqr(MZs)) * s - 128 * MHs * (trip(MWs) * sqr(MWs)) * (sqr(MZs)) * s - 16 * (sqr(MHs)) * (trip(MWs)) * (trip(MZs)) * s + 64 * MHs * (trip(MWs) * MWs) * (trip(MZs)) * s + 64 * MHs * (trip(MWs)) * (trip(MZs) * MZs) * s + 16 * (sqr(MHs)) * (trip(MWs) * MWs) * MZs * (s * s) - 8 * (sqr(MHs)) * (trip(MWs)) * (sqr(MZs)) * (s * s) - 64 * MHs * (trip(MWs) * MWs) * (sqr(MZs)) * (s * s) - 8 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs)) * (s * s) + 32 * MHs * (trip(MWs)) * (trip(MZs)) * (s * s) + 32 * MHs * (sqr(MWs)) * (trip(MZs) * MZs) * (s * s)) * real(C0(s, 0, 0, 0, 0, MWs))) / (1536. * MHs * (MHs - 4 * MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * (-64 * (sqr(MHs)) * (trip(MWs) * MWs) * (trip(MZs)) + 144 * (sqr(MHs)) * (trip(MWs)) * (trip(MZs) * MZs) + 256 * MHs * (trip(MWs) * MWs) * (trip(MZs) * MZs) - 108 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs) * sqr(MZs)) - 576 * MHs * (trip(MWs)) * (trip(MZs) * sqr(MZs)) + 28 * (sqr(MHs)) * MWs * (trip(MZs) * trip(MZs)) + 432 * MHs * (sqr(MWs)) * (trip(MZs) * trip(MZs)) - 112 * MHs * MWs * (trip(MZs) * trip(MZs) * MZs) - 128 * (sqr(MHs)) * (trip(MWs) * MWs) * (sqr(MZs)) * s + 288 * (sqr(MHs)) * (trip(MWs)) * (trip(MZs)) * s + 512 * MHs * (trip(MWs) * MWs) * (trip(MZs)) * s - 216 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs) * MZs) * s - 1152 * MHs * (trip(MWs)) * (trip(MZs) * MZs) * s + 56 * (sqr(MHs)) * MWs * (trip(MZs) * sqr(MZs)) * s + 864 * MHs * (sqr(MWs)) * (trip(MZs) * sqr(MZs)) * s - 224 * MHs * MWs * (trip(MZs) * trip(MZs)) * s - 64 * (sqr(MHs)) * (trip(MWs) * MWs) * MZs * (s * s) + 144 * (sqr(MHs)) * (trip(MWs)) * (sqr(MZs)) * (s * s) + 256 * MHs * (trip(MWs) * MWs) * (sqr(MZs)) * (s * s) - 108 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs)) * (s * s) - 576 * MHs * (trip(MWs)) * (trip(MZs)) * (s * s) + 28 * (sqr(MHs)) * MWs * (trip(MZs) * MZs) * (s * s) + 432 * MHs * (sqr(MWs)) * (trip(MZs) * MZs) * (s * s) - 112 * MHs * MWs * (trip(MZs) * sqr(MZs)) * (s * s)) * real(C0(s, 0, 0, 0, 0, MZs))) / (1536. * MHs * (MHs - 4 * MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * (48 * (sqr(MHs)) * (trip(MWs) * trip(MWs)) * MZs - 48 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * (sqr(MZs)) - 192 * MHs * (trip(MWs) * trip(MWs)) * (sqr(MZs)) + 192 * MHs * (trip(MWs) * sqr(MWs)) * (trip(MZs)) + 96 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * MZs * s - 96 * (sqr(MHs)) * (trip(MWs) * MWs) * (sqr(MZs)) * s - 384 * MHs * (trip(MWs) * sqr(MWs)) * (sqr(MZs)) * s + 384 * MHs * (trip(MWs) * MWs) * (trip(MZs)) * s) * real(C0(s, 0, 0, MWs, MWs, 0))) / (1536. * MHs * (MHs - 4 * MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s);
            break;
        case DQU:
            res = -(trip(EL) * (120 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * s + 56 * (sqr(MHs)) * (trip(MWs) * MWs) * MZs * s - 480 * MHs * (trip(MWs) * sqr(MWs)) * MZs * s + trip(MHs) * (sqr(MWs)) * (sqr(MZs)) * s - 350 * (sqr(MHs)) * (trip(MWs)) * (sqr(MZs)) * s - 224 * MHs * (trip(MWs) * MWs) * (sqr(MZs)) * s - trip(MHs) * MWs * (trip(MZs)) * s + 170 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs)) * s + 1400 * MHs * (trip(MWs)) * (trip(MZs)) * s + 4 * (sqr(MHs)) * MWs * (trip(MZs) * MZs) * s - 684 * MHs * (sqr(MWs)) * (trip(MZs) * MZs) * s - 12 * MHs * MWs * (trip(MZs) * sqr(MZs)) * s)) / (1536. * MHs * (MHs - 4 * MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * MZs * (24 * MHs * MWs * (MWs - MZs) * (sqr(MZs)) + 24 * MWs * (trip(MZs)) * (-MWs + MZs) + sqr(MHs) * MZs * (-19 * (sqr(MWs)) + 23 * MWs * MZs - 4 * (sqr(MZs))) + trip(MHs) * (4 * (sqr(MWs)) - 5 * MWs * MZs + sqr(MZs))) * A0fin(MHs)) / (1536. * MHs * (MHs - 4 * MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi)) + (trip(EL) * (trip(MZs) * (MHs + MZs) * s + 2 * MWs * (sqr(MZs)) * (-MHs + 17 * MZs) * s - 4 * (trip(MWs)) * MZs * (2 * MZs + 13 * s) + 8 * (trip(MWs) * MWs) * (2 * MZs + 15 * s) - 2 * (sqr(MWs)) * (sqr(MZs)) * (4 * MZs + 43 * s)) * A0fin(MWs)) / (1536. * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) + (trip(EL) * (sqr(MHs) * MWs * (4 * MWs - 3 * MZs) * MZs * s + 4 * MZs * (trip(MZs) * MZs * s - 8 * (trip(MWs) * MWs) * (2 * MZs + 3 * s) + 2 * MWs * (trip(MZs)) * (2 * MZs + 3 * s) + 12 * (trip(MWs)) * MZs * (2 * MZs + 7 * s) - 2 * (sqr(MWs)) * (sqr(MZs)) * (6 * MZs + 25 * s)) + MHs * (-(trip(MZs) * MZs * s) + MWs * (trip(MZs)) * (-4 * MZs + 3 * s) + 8 * (trip(MWs) * MWs) * (2 * MZs + 3 * s) - 12 * (trip(MWs)) * MZs * (2 * MZs + 7 * s) + sqr(MWs) * (sqr(MZs)) * (12 * MZs + 37 * s))) * A0fin(MZs)) / (1536. * (MHs - 4 * MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * (2 * (trip(MHs) * MHs) * MWs * (sqr(MZs)) * s - 8 * (trip(MHs)) * (sqr(MWs)) * (sqr(MZs)) * s + 24 * (sqr(MHs)) * (trip(MWs)) * (sqr(MZs)) * s - trip(MHs) * MHs * (trip(MZs)) * s - 4 * (trip(MHs)) * MWs * (trip(MZs)) * s + 20 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs)) * s - 96 * MHs * (trip(MWs)) * (trip(MZs)) * s + 4 * (trip(MHs)) * (trip(MZs) * MZs) * s - 16 * (sqr(MHs)) * MWs * (trip(MZs) * MZs) * s + 48 * MHs * (sqr(MWs)) * (trip(MZs) * MZs) * s) * real(B0fin(MWs, MHs, MWs))) / (1536. * MHs * (MHs - 4 * MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * (-96 * (sqr(MHs)) * (trip(MWs) * MWs) * MZs * s - 88 * (sqr(MHs)) * (trip(MWs)) * (sqr(MZs)) * s + 384 * MHs * (trip(MWs) * MWs) * (sqr(MZs)) * s + 100 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs)) * s + 352 * MHs * (trip(MWs)) * (trip(MZs)) * s - 14 * (sqr(MHs)) * MWs * (trip(MZs) * MZs) * s - 400 * MHs * (sqr(MWs)) * (trip(MZs) * MZs) * s - sqr(MHs) * (trip(MZs) * sqr(MZs)) * s + 56 * MHs * MWs * (trip(MZs) * sqr(MZs)) * s + 4 * MHs * (trip(MZs) * trip(MZs)) * s) * real(B0fin(MWs, MWs, MZs))) / (1536. * MHs * (MHs - 4 * MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * (-4 * (trip(MHs) * MHs) * (sqr(MWs)) * MZs * s + 3 * (trip(MHs) * MHs) * MWs * (sqr(MZs)) * s + 29 * (trip(MHs)) * (sqr(MWs)) * (sqr(MZs)) * s - 21 * (trip(MHs)) * MWs * (trip(MZs)) * s - 88 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs)) * s + 60 * (sqr(MHs)) * MWs * (trip(MZs) * MZs) * s + 132 * MHs * (sqr(MWs)) * (trip(MZs) * MZs) * s - 84 * MHs * MWs * (trip(MZs) * sqr(MZs)) * s) * real(B0fin(MZs, MHs, MZs))) / (1536. * MHs * (MHs - 4 * MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * (120 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * s + 68 * (sqr(MHs)) * (trip(MWs) * MWs) * MZs * s - 480 * MHs * (trip(MWs) * sqr(MWs)) * MZs * s - 106 * (sqr(MHs)) * (trip(MWs)) * (sqr(MZs)) * s - 272 * MHs * (trip(MWs) * MWs) * (sqr(MZs)) * s + 17 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs)) * s + 424 * MHs * (trip(MWs)) * (trip(MZs)) * s - 68 * MHs * (sqr(MWs)) * (trip(MZs) * MZs) * s) * real(B0fin(MZs, MWs, MWs))) / (1536. * MHs * (MHs - 4 * MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * (-32 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * MZs + 56 * (sqr(MHs)) * (trip(MWs) * MWs) * (sqr(MZs)) + 128 * MHs * (trip(MWs) * sqr(MWs)) * (sqr(MZs)) - 32 * (sqr(MHs)) * (trip(MWs)) * (trip(MZs)) - 224 * MHs * (trip(MWs) * MWs) * (trip(MZs)) + 12 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs) * MZs) + 128 * MHs * (trip(MWs)) * (trip(MZs) * MZs) - 4 * (sqr(MHs)) * MWs * (trip(MZs) * sqr(MZs)) - 48 * MHs * (sqr(MWs)) * (trip(MZs) * sqr(MZs)) + 16 * MHs * MWs * (trip(MZs) * trip(MZs)) - 24 * (sqr(MHs)) * (trip(MWs) * MWs) * MZs * s + 24 * (sqr(MHs)) * (trip(MWs)) * (sqr(MZs)) * s + 96 * MHs * (trip(MWs) * MWs) * (sqr(MZs)) * s + 6 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs)) * s - 96 * MHs * (trip(MWs)) * (trip(MZs)) * s - 6 * (sqr(MHs)) * MWs * (trip(MZs) * MZs) * s - 24 * MHs * (sqr(MWs)) * (trip(MZs) * MZs) * s + 24 * MHs * MWs * (trip(MZs) * sqr(MZs)) * s) * real(B0fin(s, 0, 0))) / (1536. * MHs * (MHs - 4 * MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * (48 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * MZs - 48 * (sqr(MHs)) * (trip(MWs) * MWs) * (sqr(MZs)) - 192 * MHs * (trip(MWs) * sqr(MWs)) * (sqr(MZs)) + 192 * MHs * (trip(MWs) * MWs) * (trip(MZs)) + 24 * (sqr(MHs)) * (trip(MWs) * MWs) * MZs * s - 24 * (sqr(MHs)) * (trip(MWs)) * (sqr(MZs)) * s - 96 * MHs * (trip(MWs) * MWs) * (sqr(MZs)) * s + 96 * MHs * (trip(MWs)) * (trip(MZs)) * s) * real(B0fin(s, MWs, MWs))) / (1536. * MHs * (MHs - 4 * MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * (-32 * (sqr(MHs)) * (trip(MWs) * trip(MWs)) * MZs + 40 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * (sqr(MZs)) + 128 * MHs * (trip(MWs) * trip(MWs)) * (sqr(MZs)) - 8 * (sqr(MHs)) * (trip(MWs) * MWs) * (trip(MZs)) - 160 * MHs * (trip(MWs) * sqr(MWs)) * (trip(MZs)) + 32 * MHs * (trip(MWs) * MWs) * (trip(MZs) * MZs) - 64 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * MZs * s + 80 * (sqr(MHs)) * (trip(MWs) * MWs) * (sqr(MZs)) * s + 256 * MHs * (trip(MWs) * sqr(MWs)) * (sqr(MZs)) * s - 16 * (sqr(MHs)) * (trip(MWs)) * (trip(MZs)) * s - 320 * MHs * (trip(MWs) * MWs) * (trip(MZs)) * s + 64 * MHs * (trip(MWs)) * (trip(MZs) * MZs) * s - 32 * (sqr(MHs)) * (trip(MWs) * MWs) * MZs * (s * s) + 40 * (sqr(MHs)) * (trip(MWs)) * (sqr(MZs)) * (s * s) + 128 * MHs * (trip(MWs) * MWs) * (sqr(MZs)) * (s * s) - 8 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs)) * (s * s) - 160 * MHs * (trip(MWs)) * (trip(MZs)) * (s * s) + 32 * MHs * (sqr(MWs)) * (trip(MZs) * MZs) * (s * s)) * real(C0(s, 0, 0, 0, 0, MWs))) / (1536. * MHs * (MHs - 4 * MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * (16 * (sqr(MHs)) * (trip(MWs) * MWs) * (trip(MZs)) - 24 * (sqr(MHs)) * (trip(MWs)) * (trip(MZs) * MZs) - 64 * MHs * (trip(MWs) * MWs) * (trip(MZs) * MZs) + 12 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs) * sqr(MZs)) + 96 * MHs * (trip(MWs)) * (trip(MZs) * sqr(MZs)) - 4 * (sqr(MHs)) * MWs * (trip(MZs) * trip(MZs)) - 48 * MHs * (sqr(MWs)) * (trip(MZs) * trip(MZs)) + 16 * MHs * MWs * (trip(MZs) * trip(MZs) * MZs) + 32 * (sqr(MHs)) * (trip(MWs) * MWs) * (sqr(MZs)) * s - 48 * (sqr(MHs)) * (trip(MWs)) * (trip(MZs)) * s - 128 * MHs * (trip(MWs) * MWs) * (trip(MZs)) * s + 24 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs) * MZs) * s + 192 * MHs * (trip(MWs)) * (trip(MZs) * MZs) * s - 8 * (sqr(MHs)) * MWs * (trip(MZs) * sqr(MZs)) * s - 96 * MHs * (sqr(MWs)) * (trip(MZs) * sqr(MZs)) * s + 32 * MHs * MWs * (trip(MZs) * trip(MZs)) * s + 16 * (sqr(MHs)) * (trip(MWs) * MWs) * MZs * (s * s) - 24 * (sqr(MHs)) * (trip(MWs)) * (sqr(MZs)) * (s * s) - 64 * MHs * (trip(MWs) * MWs) * (sqr(MZs)) * (s * s) + 12 * (sqr(MHs)) * (sqr(MWs)) * (trip(MZs)) * (s * s) + 96 * MHs * (trip(MWs)) * (trip(MZs)) * (s * s) - 4 * (sqr(MHs)) * MWs * (trip(MZs) * MZs) * (s * s) - 48 * MHs * (sqr(MWs)) * (trip(MZs) * MZs) * (s * s) + 16 * MHs * MWs * (trip(MZs) * sqr(MZs)) * (s * s)) * real(C0(s, 0, 0, 0, 0, MZs))) / (1536. * MHs * (MHs - 4 * MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * (-48 * (sqr(MHs)) * (trip(MWs) * trip(MWs)) * MZs + 48 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * (sqr(MZs)) + 192 * MHs * (trip(MWs) * trip(MWs)) * (sqr(MZs)) - 192 * MHs * (trip(MWs) * sqr(MWs)) * (trip(MZs)) - 96 * (sqr(MHs)) * (trip(MWs) * sqr(MWs)) * MZs * s + 96 * (sqr(MHs)) * (trip(MWs) * MWs) * (sqr(MZs)) * s + 384 * MHs * (trip(MWs) * sqr(MWs)) * (sqr(MZs)) * s - 384 * MHs * (trip(MWs) * MWs) * (trip(MZs)) * s) * real(C0(s, 0, 0, MWs, MWs, 0))) / (1536. * MHs * (MHs - 4 * MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s);
            break;
        case BQU:
            res = (trip(EL) * (-120 * (sqr(MHs)) * MTs * (MTs - MWs) * (trip(MWs) * sqr(MWs)) * s + 120 * (sqr(MHs)) * (MTs - MWs) * (trip(MWs) * trip(MWs)) * s + 18 * (sqr(MHs)) * (MTs * MTs) * (MTs - MWs) * (trip(MWs)) * MZs * s - 86 * (sqr(MHs)) * MTs * (MTs - MWs) * (trip(MWs) * MWs) * MZs * s + 56 * (sqr(MHs)) * (MTs - MWs) * (trip(MWs) * sqr(MWs)) * MZs * s + 480 * MHs * MTs * (MTs - MWs) * (trip(MWs) * sqr(MWs)) * MZs * s - 480 * MHs * (MTs - MWs) * (trip(MWs) * trip(MWs)) * MZs * s - trip(MHs) * MTs * (MTs - MWs) * (sqr(MWs)) * (sqr(MZs)) * s - 33 * (sqr(MHs)) * (MTs * MTs) * (MTs - MWs) * (sqr(MWs)) * (sqr(MZs)) * s + trip(MHs) * (MTs - MWs) * (trip(MWs)) * (sqr(MZs)) * s + 389 * (sqr(MHs)) * MTs * (MTs - MWs) * (trip(MWs)) * (sqr(MZs)) * s - 72 * MHs * (MTs * MTs) * (MTs - MWs) * (trip(MWs)) * (sqr(MZs)) * s - 350 * (sqr(MHs)) * (MTs - MWs) * (trip(MWs) * MWs) * (sqr(MZs)) * s + 344 * MHs * MTs * (MTs - MWs) * (trip(MWs) * MWs) * (sqr(MZs)) * s - 224 * MHs * (MTs - MWs) * (trip(MWs) * sqr(MWs)) * (sqr(MZs)) * s + trip(MHs) * MTs * (MTs - MWs) * MWs * (trip(MZs)) * s + 15 * (sqr(MHs)) * (MTs * MTs) * (MTs - MWs) * MWs * (trip(MZs)) * s - trip(MHs) * (MTs - MWs) * (sqr(MWs)) * (trip(MZs)) * s - 179 * (sqr(MHs)) * MTs * (MTs - MWs) * (sqr(MWs)) * (trip(MZs)) * s + 132 * MHs * (MTs * MTs) * (MTs - MWs) * (sqr(MWs)) * (trip(MZs)) * s + 170 * (sqr(MHs)) * (MTs - MWs) * (trip(MWs)) * (trip(MZs)) * s - 1556 * MHs * MTs * (MTs - MWs) * (trip(MWs)) * (trip(MZs)) * s + 1400 * MHs * (MTs - MWs) * (trip(MWs) * MWs) * (trip(MZs)) * s - 4 * (sqr(MHs)) * MTs * (MTs - MWs) * MWs * (trip(MZs) * MZs) * s - 60 * MHs * (MTs * MTs) * (MTs - MWs) * MWs * (trip(MZs) * MZs) * s + 4 * (sqr(MHs)) * (MTs - MWs) * (sqr(MWs)) * (trip(MZs) * MZs) * s + 720 * MHs * MTs * (MTs - MWs) * (sqr(MWs)) * (trip(MZs) * MZs) * s - 684 * MHs * (MTs - MWs) * (trip(MWs)) * (trip(MZs) * MZs) * s + 12 * MHs * MTs * (MTs - MWs) * MWs * (trip(MZs) * sqr(MZs)) * s - 12 * MHs * (MTs - MWs) * (sqr(MWs)) * (trip(MZs) * sqr(MZs)) * s)) / (1536. * MHs * ((MTs - MWs) * (MTs - MWs)) * (MHs - 4 * MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) - (trip(EL) * (MWs - MZs) * MZs * (trip(MHs) * (4 * MWs - MZs) + 24 * MHs * MWs * (sqr(MZs)) - 24 * MWs * (trip(MZs)) + sqr(MHs) * MZs * (-19 * MWs + 4 * MZs)) * A0fin(MHs)) / (1536. * MHs * (MHs - 4 * MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi)) + (trip(EL) * MWs * MZs * (-2 * (sqr(MWs)) + MWs * MZs + sqr(MZs)) * (2 * (trip(MTs)) + sqr(MTs) * s - 6 * MTs * MWs * (MWs + s) + 4 * (sqr(MWs)) * (MWs + 2 * s)) * A0fin(MTs)) / (768. * ((MTs - MWs) * (MTs - MWs)) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) + (trip(EL) * (4 * (trip(MTs)) * MWs * MZs * (2 * (sqr(MWs)) - MWs * MZs - sqr(MZs)) + sqr(MTs) * (120 * (trip(MWs) * MWs) - 68 * (trip(MWs)) * MZs - 78 * (sqr(MWs)) * (sqr(MZs)) - 2 * MWs * (MHs - 21 * MZs) * (sqr(MZs)) + trip(MZs) * (MHs + MZs)) * s + sqr(MWs) * (trip(MZs) * (MHs + MZs) * s + 2 * MWs * (sqr(MZs)) * (-MHs + 17 * MZs) * s - 4 * (trip(MWs)) * MZs * (2 * MZs + 13 * s) + 8 * (trip(MWs) * MWs) * (2 * MZs + 15 * s) - 2 * (sqr(MWs)) * (sqr(MZs)) * (4 * MZs + 43 * s)) - 2 * MTs * MWs * (trip(MZs) * (MHs + MZs) * s + MWs * (sqr(MZs)) * (-2 * MHs + 41 * MZs) * s + 12 * (trip(MWs) * MWs) * (MZs + 10 * s) - 6 * (trip(MWs)) * MZs * (MZs + 11 * s) - sqr(MWs) * (sqr(MZs)) * (6 * MZs + 79 * s))) * A0fin(MWs)) / (1536. * ((MTs - MWs) * (MTs - MWs)) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) + (trip(EL) * (sqr(MHs) * MWs * (4 * MWs - 3 * MZs) * MZs * s + 4 * MZs * (trip(MZs) * MZs * s - 8 * (trip(MWs) * MWs) * (2 * MZs + 3 * s) + 2 * MWs * (trip(MZs)) * (2 * MZs + 3 * s) + 12 * (trip(MWs)) * MZs * (2 * MZs + 7 * s) - 2 * (sqr(MWs)) * (sqr(MZs)) * (6 * MZs + 25 * s)) + MHs * (-(trip(MZs) * MZs * s) + MWs * (trip(MZs)) * (-4 * MZs + 3 * s) + 8 * (trip(MWs) * MWs) * (2 * MZs + 3 * s) - 12 * (trip(MWs)) * MZs * (2 * MZs + 7 * s) + sqr(MWs) * (sqr(MZs)) * (12 * MZs + 37 * s))) * A0fin(MZs)) / (1536. * (MHs - 4 * MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) + (trip(EL) * (sqr(MHs) - 4 * MHs * MWs + 12 * (sqr(MWs))) * (sqr(MZs)) * (-2 * MWs + MZs) * real(B0fin(MWs, MHs, MWs))) / (1536. * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi)) + (trip(EL) * (96 * (sqr(MHs)) * MTs * (MTs - MWs) * (trip(MWs) * MWs) * MZs * s - 96 * (sqr(MHs)) * (MTs - MWs) * (trip(MWs) * sqr(MWs)) * MZs * s + 88 * (sqr(MHs)) * MTs * (MTs - MWs) * (trip(MWs)) * (sqr(MZs)) * s - 88 * (sqr(MHs)) * (MTs - MWs) * (trip(MWs) * MWs) * (sqr(MZs)) * s - 384 * MHs * MTs * (MTs - MWs) * (trip(MWs) * MWs) * (sqr(MZs)) * s + 384 * MHs * (MTs - MWs) * (trip(MWs) * sqr(MWs)) * (sqr(MZs)) * s - 100 * (sqr(MHs)) * MTs * (MTs - MWs) * (sqr(MWs)) * (trip(MZs)) * s + 100 * (sqr(MHs)) * (MTs - MWs) * (trip(MWs)) * (trip(MZs)) * s - 352 * MHs * MTs * (MTs - MWs) * (trip(MWs)) * (trip(MZs)) * s + 352 * MHs * (MTs - MWs) * (trip(MWs) * MWs) * (trip(MZs)) * s + 14 * (sqr(MHs)) * MTs * (MTs - MWs) * MWs * (trip(MZs) * MZs) * s - 14 * (sqr(MHs)) * (MTs - MWs) * (sqr(MWs)) * (trip(MZs) * MZs) * s + 400 * MHs * MTs * (MTs - MWs) * (sqr(MWs)) * (trip(MZs) * MZs) * s - 400 * MHs * (MTs - MWs) * (trip(MWs)) * (trip(MZs) * MZs) * s + sqr(MHs) * MTs * (MTs - MWs) * (trip(MZs) * sqr(MZs)) * s - sqr(MHs) * (MTs - MWs) * MWs * (trip(MZs) * sqr(MZs)) * s - 56 * MHs * MTs * (MTs - MWs) * MWs * (trip(MZs) * sqr(MZs)) * s + 56 * MHs * (MTs - MWs) * (sqr(MWs)) * (trip(MZs) * sqr(MZs)) * s - 4 * MHs * MTs * (MTs - MWs) * (trip(MZs) * trip(MZs)) * s + 4 * MHs * (MTs - MWs) * MWs * (trip(MZs) * trip(MZs)) * s) * real(B0fin(MWs, MWs, MZs))) / (1536. * MHs * ((MTs - MWs) * (MTs - MWs)) * (MHs - 4 * MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) + (trip(EL) * (4 * (trip(MHs) * MHs) * MTs * (MTs - MWs) * (sqr(MWs)) * MZs * s - 4 * (trip(MHs) * MHs) * (MTs - MWs) * (trip(MWs)) * MZs * s - 3 * (trip(MHs) * MHs) * MTs * (MTs - MWs) * MWs * (sqr(MZs)) * s + 3 * (trip(MHs) * MHs) * (MTs - MWs) * (sqr(MWs)) * (sqr(MZs)) * s - 29 * (trip(MHs)) * MTs * (MTs - MWs) * (sqr(MWs)) * (sqr(MZs)) * s + 29 * (trip(MHs)) * (MTs - MWs) * (trip(MWs)) * (sqr(MZs)) * s + 21 * (trip(MHs)) * MTs * (MTs - MWs) * MWs * (trip(MZs)) * s - 21 * (trip(MHs)) * (MTs - MWs) * (sqr(MWs)) * (trip(MZs)) * s + 88 * (sqr(MHs)) * MTs * (MTs - MWs) * (sqr(MWs)) * (trip(MZs)) * s - 88 * (sqr(MHs)) * (MTs - MWs) * (trip(MWs)) * (trip(MZs)) * s - 60 * (sqr(MHs)) * MTs * (MTs - MWs) * MWs * (trip(MZs) * MZs) * s + 60 * (sqr(MHs)) * (MTs - MWs) * (sqr(MWs)) * (trip(MZs) * MZs) * s - 132 * MHs * MTs * (MTs - MWs) * (sqr(MWs)) * (trip(MZs) * MZs) * s + 132 * MHs * (MTs - MWs) * (trip(MWs)) * (trip(MZs) * MZs) * s + 84 * MHs * MTs * (MTs - MWs) * MWs * (trip(MZs) * sqr(MZs)) * s - 84 * MHs * (MTs - MWs) * (sqr(MWs)) * (trip(MZs) * sqr(MZs)) * s) * real(B0fin(MZs, MHs, MZs))) / (1536. * MHs * ((MTs - MWs) * (MTs - MWs)) * (MHs - 4 * MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) + (trip(EL) * (-120 * (sqr(MHs)) * MTs * (MTs - MWs) * (trip(MWs) * sqr(MWs)) * s + 120 * (sqr(MHs)) * (MTs - MWs) * (trip(MWs) * trip(MWs)) * s - 68 * (sqr(MHs)) * MTs * (MTs - MWs) * (trip(MWs) * MWs) * MZs * s + 68 * (sqr(MHs)) * (MTs - MWs) * (trip(MWs) * sqr(MWs)) * MZs * s + 480 * MHs * MTs * (MTs - MWs) * (trip(MWs) * sqr(MWs)) * MZs * s - 480 * MHs * (MTs - MWs) * (trip(MWs) * trip(MWs)) * MZs * s + 106 * (sqr(MHs)) * MTs * (MTs - MWs) * (trip(MWs)) * (sqr(MZs)) * s - 106 * (sqr(MHs)) * (MTs - MWs) * (trip(MWs) * MWs) * (sqr(MZs)) * s + 272 * MHs * MTs * (MTs - MWs) * (trip(MWs) * MWs) * (sqr(MZs)) * s - 272 * MHs * (MTs - MWs) * (trip(MWs) * sqr(MWs)) * (sqr(MZs)) * s - 17 * (sqr(MHs)) * MTs * (MTs - MWs) * (sqr(MWs)) * (trip(MZs)) * s + 17 * (sqr(MHs)) * (MTs - MWs) * (trip(MWs)) * (trip(MZs)) * s - 424 * MHs * MTs * (MTs - MWs) * (trip(MWs)) * (trip(MZs)) * s + 424 * MHs * (MTs - MWs) * (trip(MWs) * MWs) * (trip(MZs)) * s + 68 * MHs * MTs * (MTs - MWs) * (sqr(MWs)) * (trip(MZs) * MZs) * s - 68 * MHs * (MTs - MWs) * (trip(MWs)) * (trip(MZs) * MZs) * s) * real(B0fin(MZs, MWs, MWs))) / (1536. * MHs * ((MTs - MWs) * (MTs - MWs)) * (MHs - 4 * MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) + (trip(EL) * (-16 * (sqr(MHs)) * MTs * (MTs - MWs) * (trip(MWs) * MWs) * (sqr(MZs)) + 16 * (sqr(MHs)) * (MTs - MWs) * (trip(MWs) * sqr(MWs)) * (sqr(MZs)) + 24 * (sqr(MHs)) * MTs * (MTs - MWs) * (trip(MWs)) * (trip(MZs)) - 24 * (sqr(MHs)) * (MTs - MWs) * (trip(MWs) * MWs) * (trip(MZs)) + 64 * MHs * MTs * (MTs - MWs) * (trip(MWs) * MWs) * (trip(MZs)) - 64 * MHs * (MTs - MWs) * (trip(MWs) * sqr(MWs)) * (trip(MZs)) - 12 * (sqr(MHs)) * MTs * (MTs - MWs) * (sqr(MWs)) * (trip(MZs) * MZs) + 12 * (sqr(MHs)) * (MTs - MWs) * (trip(MWs)) * (trip(MZs) * MZs) - 96 * MHs * MTs * (MTs - MWs) * (trip(MWs)) * (trip(MZs) * MZs) + 96 * MHs * (MTs - MWs) * (trip(MWs) * MWs) * (trip(MZs) * MZs) + 4 * (sqr(MHs)) * MTs * (MTs - MWs) * MWs * (trip(MZs) * sqr(MZs)) - 4 * (sqr(MHs)) * (MTs - MWs) * (sqr(MWs)) * (trip(MZs) * sqr(MZs)) + 48 * MHs * MTs * (MTs - MWs) * (sqr(MWs)) * (trip(MZs) * sqr(MZs)) - 48 * MHs * (MTs - MWs) * (trip(MWs)) * (trip(MZs) * sqr(MZs)) - 16 * MHs * MTs * (MTs - MWs) * MWs * (trip(MZs) * trip(MZs)) + 16 * MHs * (MTs - MWs) * (sqr(MWs)) * (trip(MZs) * trip(MZs)) - 24 * (sqr(MHs)) * MTs * (MTs - MWs) * (trip(MWs) * MWs) * MZs * s + 24 * (sqr(MHs)) * (MTs - MWs) * (trip(MWs) * sqr(MWs)) * MZs * s + 36 * (sqr(MHs)) * MTs * (MTs - MWs) * (trip(MWs)) * (sqr(MZs)) * s - 36 * (sqr(MHs)) * (MTs - MWs) * (trip(MWs) * MWs) * (sqr(MZs)) * s + 96 * MHs * MTs * (MTs - MWs) * (trip(MWs) * MWs) * (sqr(MZs)) * s - 96 * MHs * (MTs - MWs) * (trip(MWs) * sqr(MWs)) * (sqr(MZs)) * s - 18 * (sqr(MHs)) * MTs * (MTs - MWs) * (sqr(MWs)) * (trip(MZs)) * s + 18 * (sqr(MHs)) * (MTs - MWs) * (trip(MWs)) * (trip(MZs)) * s - 144 * MHs * MTs * (MTs - MWs) * (trip(MWs)) * (trip(MZs)) * s + 144 * MHs * (MTs - MWs) * (trip(MWs) * MWs) * (trip(MZs)) * s + 6 * (sqr(MHs)) * MTs * (MTs - MWs) * MWs * (trip(MZs) * MZs) * s - 6 * (sqr(MHs)) * (MTs - MWs) * (sqr(MWs)) * (trip(MZs) * MZs) * s + 72 * MHs * MTs * (MTs - MWs) * (sqr(MWs)) * (trip(MZs) * MZs) * s - 72 * MHs * (MTs - MWs) * (trip(MWs)) * (trip(MZs) * MZs) * s - 24 * MHs * MTs * (MTs - MWs) * MWs * (trip(MZs) * sqr(MZs)) * s + 24 * MHs * (MTs - MWs) * (sqr(MWs)) * (trip(MZs) * sqr(MZs)) * s) * real(B0fin(s, 0, 0))) / (1536. * MHs * ((MTs - MWs) * (MTs - MWs)) * (MHs - 4 * MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) + (trip(EL) * (-16 * (sqr(MHs)) * (trip(MTs)) * (MTs - MWs) * (trip(MWs)) * MZs + 48 * (sqr(MHs)) * MTs * (MTs - MWs) * (trip(MWs) * sqr(MWs)) * MZs - 32 * (sqr(MHs)) * (MTs - MWs) * (trip(MWs) * trip(MWs)) * MZs + 32 * (sqr(MHs)) * (trip(MTs)) * (MTs - MWs) * (sqr(MWs)) * (sqr(MZs)) - 24 * (sqr(MHs)) * (MTs * MTs) * (MTs - MWs) * (trip(MWs)) * (sqr(MZs)) + 64 * MHs * (trip(MTs)) * (MTs - MWs) * (trip(MWs)) * (sqr(MZs)) - 48 * (sqr(MHs)) * MTs * (MTs - MWs) * (trip(MWs) * MWs) * (sqr(MZs)) + 40 * (sqr(MHs)) * (MTs - MWs) * (trip(MWs) * sqr(MWs)) * (sqr(MZs)) - 192 * MHs * MTs * (MTs - MWs) * (trip(MWs) * sqr(MWs)) * (sqr(MZs)) + 128 * MHs * (MTs - MWs) * (trip(MWs) * trip(MWs)) * (sqr(MZs)) - 16 * (sqr(MHs)) * (trip(MTs)) * (MTs - MWs) * MWs * (trip(MZs)) + 24 * (sqr(MHs)) * (MTs * MTs) * (MTs - MWs) * (sqr(MWs)) * (trip(MZs)) - 128 * MHs * (trip(MTs)) * (MTs - MWs) * (sqr(MWs)) * (trip(MZs)) + 96 * MHs * (MTs * MTs) * (MTs - MWs) * (trip(MWs)) * (trip(MZs)) - 8 * (sqr(MHs)) * (MTs - MWs) * (trip(MWs) * MWs) * (trip(MZs)) + 192 * MHs * MTs * (MTs - MWs) * (trip(MWs) * MWs) * (trip(MZs)) - 160 * MHs * (MTs - MWs) * (trip(MWs) * sqr(MWs)) * (trip(MZs)) + 64 * MHs * (trip(MTs)) * (MTs - MWs) * MWs * (trip(MZs) * MZs) - 96 * MHs * (MTs * MTs) * (MTs - MWs) * (sqr(MWs)) * (trip(MZs) * MZs) + 32 * MHs * (MTs - MWs) * (trip(MWs) * MWs) * (trip(MZs) * MZs) - 8 * (sqr(MHs)) * (MTs * MTs) * (MTs - MWs) * (trip(MWs)) * MZs * s + 56 * (sqr(MHs)) * MTs * (MTs - MWs) * (trip(MWs) * MWs) * MZs * s - 48 * (sqr(MHs)) * (MTs - MWs) * (trip(MWs) * sqr(MWs)) * MZs * s + 16 * (sqr(MHs)) * (MTs * MTs) * (MTs - MWs) * (sqr(MWs)) * (sqr(MZs)) * s - 76 * (sqr(MHs)) * MTs * (MTs - MWs) * (trip(MWs)) * (sqr(MZs)) * s + 32 * MHs * (MTs * MTs) * (MTs - MWs) * (trip(MWs)) * (sqr(MZs)) * s + 60 * (sqr(MHs)) * (MTs - MWs) * (trip(MWs) * MWs) * (sqr(MZs)) * s - 224 * MHs * MTs * (MTs - MWs) * (trip(MWs) * MWs) * (sqr(MZs)) * s + 192 * MHs * (MTs - MWs) * (trip(MWs) * sqr(MWs)) * (sqr(MZs)) * s - 8 * (sqr(MHs)) * (MTs * MTs) * (MTs - MWs) * MWs * (trip(MZs)) * s + 20 * (sqr(MHs)) * MTs * (MTs - MWs) * (sqr(MWs)) * (trip(MZs)) * s - 64 * MHs * (MTs * MTs) * (MTs - MWs) * (sqr(MWs)) * (trip(MZs)) * s - 12 * (sqr(MHs)) * (MTs - MWs) * (trip(MWs)) * (trip(MZs)) * s + 304 * MHs * MTs * (MTs - MWs) * (trip(MWs)) * (trip(MZs)) * s - 240 * MHs * (MTs - MWs) * (trip(MWs) * MWs) * (trip(MZs)) * s + 32 * MHs * (MTs * MTs) * (MTs - MWs) * MWs * (trip(MZs) * MZs) * s - 80 * MHs * MTs * (MTs - MWs) * (sqr(MWs)) * (trip(MZs) * MZs) * s + 48 * MHs * (MTs - MWs) * (trip(MWs)) * (trip(MZs) * MZs) * s) * real(B0fin(s, MTs, MTs))) / (1536. * MHs * ((MTs - MWs) * (MTs - MWs)) * (MHs - 4 * MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) + (trip(EL) * (24 * (sqr(MHs)) * (trip(MTs)) * (MTs - MWs) * (trip(MWs)) * MZs - 72 * (sqr(MHs)) * MTs * (MTs - MWs) * (trip(MWs) * sqr(MWs)) * MZs + 48 * (sqr(MHs)) * (MTs - MWs) * (trip(MWs) * trip(MWs)) * MZs - 36 * (sqr(MHs)) * (trip(MTs)) * (MTs - MWs) * (sqr(MWs)) * (sqr(MZs)) + 24 * (sqr(MHs)) * (MTs * MTs) * (MTs - MWs) * (trip(MWs)) * (sqr(MZs)) - 96 * MHs * (trip(MTs)) * (MTs - MWs) * (trip(MWs)) * (sqr(MZs)) + 60 * (sqr(MHs)) * MTs * (MTs - MWs) * (trip(MWs) * MWs) * (sqr(MZs)) - 48 * (sqr(MHs)) * (MTs - MWs) * (trip(MWs) * sqr(MWs)) * (sqr(MZs)) + 288 * MHs * MTs * (MTs - MWs) * (trip(MWs) * sqr(MWs)) * (sqr(MZs)) - 192 * MHs * (MTs - MWs) * (trip(MWs) * trip(MWs)) * (sqr(MZs)) + 12 * (sqr(MHs)) * (trip(MTs)) * (MTs - MWs) * MWs * (trip(MZs)) - 24 * (sqr(MHs)) * (MTs * MTs) * (MTs - MWs) * (sqr(MWs)) * (trip(MZs)) + 144 * MHs * (trip(MTs)) * (MTs - MWs) * (sqr(MWs)) * (trip(MZs)) + 12 * (sqr(MHs)) * MTs * (MTs - MWs) * (trip(MWs)) * (trip(MZs)) - 96 * MHs * (MTs * MTs) * (MTs - MWs) * (trip(MWs)) * (trip(MZs)) - 240 * MHs * MTs * (MTs - MWs) * (trip(MWs) * MWs) * (trip(MZs)) + 192 * MHs * (MTs - MWs) * (trip(MWs) * sqr(MWs)) * (trip(MZs)) - 48 * MHs * (trip(MTs)) * (MTs - MWs) * MWs * (trip(MZs) * MZs) + 96 * MHs * (MTs * MTs) * (MTs - MWs) * (sqr(MWs)) * (trip(MZs) * MZs) - 48 * MHs * MTs * (MTs - MWs) * (trip(MWs)) * (trip(MZs) * MZs) + 12 * (sqr(MHs)) * (MTs * MTs) * (MTs - MWs) * (trip(MWs)) * MZs * s - 36 * (sqr(MHs)) * MTs * (MTs - MWs) * (trip(MWs) * MWs) * MZs * s + 24 * (sqr(MHs)) * (MTs - MWs) * (trip(MWs) * sqr(MWs)) * MZs * s - 18 * (sqr(MHs)) * (MTs * MTs) * (MTs - MWs) * (sqr(MWs)) * (sqr(MZs)) * s + 42 * (sqr(MHs)) * MTs * (MTs - MWs) * (trip(MWs)) * (sqr(MZs)) * s - 48 * MHs * (MTs * MTs) * (MTs - MWs) * (trip(MWs)) * (sqr(MZs)) * s - 24 * (sqr(MHs)) * (MTs - MWs) * (trip(MWs) * MWs) * (sqr(MZs)) * s + 144 * MHs * MTs * (MTs - MWs) * (trip(MWs) * MWs) * (sqr(MZs)) * s - 96 * MHs * (MTs - MWs) * (trip(MWs) * sqr(MWs)) * (sqr(MZs)) * s + 6 * (sqr(MHs)) * (MTs * MTs) * (MTs - MWs) * MWs * (trip(MZs)) * s - 6 * (sqr(MHs)) * MTs * (MTs - MWs) * (sqr(MWs)) * (trip(MZs)) * s + 72 * MHs * (MTs * MTs) * (MTs - MWs) * (sqr(MWs)) * (trip(MZs)) * s - 168 * MHs * MTs * (MTs - MWs) * (trip(MWs)) * (trip(MZs)) * s + 96 * MHs * (MTs - MWs) * (trip(MWs) * MWs) * (trip(MZs)) * s - 24 * MHs * (MTs * MTs) * (MTs - MWs) * MWs * (trip(MZs) * MZs) * s + 24 * MHs * MTs * (MTs - MWs) * (sqr(MWs)) * (trip(MZs) * MZs) * s) * real(B0fin(s, MWs, MWs))) / (1536. * MHs * ((MTs - MWs) * (MTs - MWs)) * (MHs - 4 * MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) + (trip(EL) * (-16 * (sqr(MHs)) * MTs * (MTs - MWs) * (trip(MWs) * MWs) * (trip(MZs)) + 16 * (sqr(MHs)) * (MTs - MWs) * (trip(MWs) * sqr(MWs)) * (trip(MZs)) + 24 * (sqr(MHs)) * MTs * (MTs - MWs) * (trip(MWs)) * (trip(MZs) * MZs) - 24 * (sqr(MHs)) * (MTs - MWs) * (trip(MWs) * MWs) * (trip(MZs) * MZs) + 64 * MHs * MTs * (MTs - MWs) * (trip(MWs) * MWs) * (trip(MZs) * MZs) - 64 * MHs * (MTs - MWs) * (trip(MWs) * sqr(MWs)) * (trip(MZs) * MZs) - 12 * (sqr(MHs)) * MTs * (MTs - MWs) * (sqr(MWs)) * (trip(MZs) * sqr(MZs)) + 12 * (sqr(MHs)) * (MTs - MWs) * (trip(MWs)) * (trip(MZs) * sqr(MZs)) - 96 * MHs * MTs * (MTs - MWs) * (trip(MWs)) * (trip(MZs) * sqr(MZs)) + 96 * MHs * (MTs - MWs) * (trip(MWs) * MWs) * (trip(MZs) * sqr(MZs)) + 4 * (sqr(MHs)) * MTs * (MTs - MWs) * MWs * (trip(MZs) * trip(MZs)) - 4 * (sqr(MHs)) * (MTs - MWs) * (sqr(MWs)) * (trip(MZs) * trip(MZs)) + 48 * MHs * MTs * (MTs - MWs) * (sqr(MWs)) * (trip(MZs) * trip(MZs)) - 48 * MHs * (MTs - MWs) * (trip(MWs)) * (trip(MZs) * trip(MZs)) - 16 * MHs * MTs * (MTs - MWs) * MWs * (trip(MZs) * trip(MZs) * MZs) + 16 * MHs * (MTs - MWs) * (sqr(MWs)) * (trip(MZs) * trip(MZs) * MZs) - 32 * (sqr(MHs)) * MTs * (MTs - MWs) * (trip(MWs) * MWs) * (sqr(MZs)) * s + 32 * (sqr(MHs)) * (MTs - MWs) * (trip(MWs) * sqr(MWs)) * (sqr(MZs)) * s + 48 * (sqr(MHs)) * MTs * (MTs - MWs) * (trip(MWs)) * (trip(MZs)) * s - 48 * (sqr(MHs)) * (MTs - MWs) * (trip(MWs) * MWs) * (trip(MZs)) * s + 128 * MHs * MTs * (MTs - MWs) * (trip(MWs) * MWs) * (trip(MZs)) * s - 128 * MHs * (MTs - MWs) * (trip(MWs) * sqr(MWs)) * (trip(MZs)) * s - 24 * (sqr(MHs)) * MTs * (MTs - MWs) * (sqr(MWs)) * (trip(MZs) * MZs) * s + 24 * (sqr(MHs)) * (MTs - MWs) * (trip(MWs)) * (trip(MZs) * MZs) * s - 192 * MHs * MTs * (MTs - MWs) * (trip(MWs)) * (trip(MZs) * MZs) * s + 192 * MHs * (MTs - MWs) * (trip(MWs) * MWs) * (trip(MZs) * MZs) * s + 8 * (sqr(MHs)) * MTs * (MTs - MWs) * MWs * (trip(MZs) * sqr(MZs)) * s - 8 * (sqr(MHs)) * (MTs - MWs) * (sqr(MWs)) * (trip(MZs) * sqr(MZs)) * s + 96 * MHs * MTs * (MTs - MWs) * (sqr(MWs)) * (trip(MZs) * sqr(MZs)) * s - 96 * MHs * (MTs - MWs) * (trip(MWs)) * (trip(MZs) * sqr(MZs)) * s - 32 * MHs * MTs * (MTs - MWs) * MWs * (trip(MZs) * trip(MZs)) * s + 32 * MHs * (MTs - MWs) * (sqr(MWs)) * (trip(MZs) * trip(MZs)) * s - 16 * (sqr(MHs)) * MTs * (MTs - MWs) * (trip(MWs) * MWs) * MZs * (s * s) + 16 * (sqr(MHs)) * (MTs - MWs) * (trip(MWs) * sqr(MWs)) * MZs * (s * s) + 24 * (sqr(MHs)) * MTs * (MTs - MWs) * (trip(MWs)) * (sqr(MZs)) * (s * s) - 24 * (sqr(MHs)) * (MTs - MWs) * (trip(MWs) * MWs) * (sqr(MZs)) * (s * s) + 64 * MHs * MTs * (MTs - MWs) * (trip(MWs) * MWs) * (sqr(MZs)) * (s * s) - 64 * MHs * (MTs - MWs) * (trip(MWs) * sqr(MWs)) * (sqr(MZs)) * (s * s) - 12 * (sqr(MHs)) * MTs * (MTs - MWs) * (sqr(MWs)) * (trip(MZs)) * (s * s) + 12 * (sqr(MHs)) * (MTs - MWs) * (trip(MWs)) * (trip(MZs)) * (s * s) - 96 * MHs * MTs * (MTs - MWs) * (trip(MWs)) * (trip(MZs)) * (s * s) + 96 * MHs * (MTs - MWs) * (trip(MWs) * MWs) * (trip(MZs)) * (s * s) + 4 * (sqr(MHs)) * MTs * (MTs - MWs) * MWs * (trip(MZs) * MZs) * (s * s) - 4 * (sqr(MHs)) * (MTs - MWs) * (sqr(MWs)) * (trip(MZs) * MZs) * (s * s) + 48 * MHs * MTs * (MTs - MWs) * (sqr(MWs)) * (trip(MZs) * MZs) * (s * s) - 48 * MHs * (MTs - MWs) * (trip(MWs)) * (trip(MZs) * MZs) * (s * s) - 16 * MHs * MTs * (MTs - MWs) * MWs * (trip(MZs) * sqr(MZs)) * (s * s) + 16 * MHs * (MTs - MWs) * (sqr(MWs)) * (trip(MZs) * sqr(MZs)) * (s * s)) * real(C0(s, 0, 0, 0, 0, MZs))) / (1536. * MHs * ((MTs - MWs) * (MTs - MWs)) * (MHs - 4 * MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) + (trip(EL) * (16 * (sqr(MHs)) * (trip(MTs) * MTs) * (MTs - MWs) * (trip(MWs)) * MZs - 16 * (sqr(MHs)) * (trip(MTs)) * (MTs - MWs) * (trip(MWs) * MWs) * MZs - 48 * (sqr(MHs)) * (MTs * MTs) * (MTs - MWs) * (trip(MWs) * sqr(MWs)) * MZs + 80 * (sqr(MHs)) * MTs * (MTs - MWs) * (trip(MWs) * trip(MWs)) * MZs - 32 * (sqr(MHs)) * (MTs - MWs) * (trip(MWs) * trip(MWs) * MWs) * MZs - 32 * (sqr(MHs)) * (trip(MTs) * MTs) * (MTs - MWs) * (sqr(MWs)) * (sqr(MZs)) + 56 * (sqr(MHs)) * (trip(MTs)) * (MTs - MWs) * (trip(MWs)) * (sqr(MZs)) - 64 * MHs * (trip(MTs) * MTs) * (MTs - MWs) * (trip(MWs)) * (sqr(MZs)) + 24 * (sqr(MHs)) * (MTs * MTs) * (MTs - MWs) * (trip(MWs) * MWs) * (sqr(MZs)) + 64 * MHs * (trip(MTs)) * (MTs - MWs) * (trip(MWs) * MWs) * (sqr(MZs)) - 88 * (sqr(MHs)) * MTs * (MTs - MWs) * (trip(MWs) * sqr(MWs)) * (sqr(MZs)) + 192 * MHs * (MTs * MTs) * (MTs - MWs) * (trip(MWs) * sqr(MWs)) * (sqr(MZs)) + 40 * (sqr(MHs)) * (MTs - MWs) * (trip(MWs) * trip(MWs)) * (sqr(MZs)) - 320 * MHs * MTs * (MTs - MWs) * (trip(MWs) * trip(MWs)) * (sqr(MZs)) + 128 * MHs * (MTs - MWs) * (trip(MWs) * trip(MWs) * MWs) * (sqr(MZs)) + 16 * (sqr(MHs)) * (trip(MTs) * MTs) * (MTs - MWs) * MWs * (trip(MZs)) - 40 * (sqr(MHs)) * (trip(MTs)) * (MTs - MWs) * (sqr(MWs)) * (trip(MZs)) + 128 * MHs * (trip(MTs) * MTs) * (MTs - MWs) * (sqr(MWs)) * (trip(MZs)) + 24 * (sqr(MHs)) * (MTs * MTs) * (MTs - MWs) * (trip(MWs)) * (trip(MZs)) - 224 * MHs * (trip(MTs)) * (MTs - MWs) * (trip(MWs)) * (trip(MZs)) + 8 * (sqr(MHs)) * MTs * (MTs - MWs) * (trip(MWs) * MWs) * (trip(MZs)) - 96 * MHs * (MTs * MTs) * (MTs - MWs) * (trip(MWs) * MWs) * (trip(MZs)) - 8 * (sqr(MHs)) * (MTs - MWs) * (trip(MWs) * sqr(MWs)) * (trip(MZs)) + 352 * MHs * MTs * (MTs - MWs) * (trip(MWs) * sqr(MWs)) * (trip(MZs)) - 160 * MHs * (MTs - MWs) * (trip(MWs) * trip(MWs)) * (trip(MZs)) - 64 * MHs * (trip(MTs) * MTs) * (MTs - MWs) * MWs * (trip(MZs) * MZs) + 160 * MHs * (trip(MTs)) * (MTs - MWs) * (sqr(MWs)) * (trip(MZs) * MZs) - 96 * MHs * (MTs * MTs) * (MTs - MWs) * (trip(MWs)) * (trip(MZs) * MZs) - 32 * MHs * MTs * (MTs - MWs) * (trip(MWs) * MWs) * (trip(MZs) * MZs) + 32 * MHs * (MTs - MWs) * (trip(MWs) * sqr(MWs)) * (trip(MZs) * MZs) + 16 * (sqr(MHs)) * (trip(MTs)) * (MTs - MWs) * (trip(MWs)) * MZs * s - 48 * (sqr(MHs)) * (MTs * MTs) * (MTs - MWs) * (trip(MWs) * MWs) * MZs * s + 96 * (sqr(MHs)) * MTs * (MTs - MWs) * (trip(MWs) * sqr(MWs)) * MZs * s - 64 * (sqr(MHs)) * (MTs - MWs) * (trip(MWs) * trip(MWs)) * MZs * s - 20 * (sqr(MHs)) * (trip(MTs)) * (MTs - MWs) * (sqr(MWs)) * (sqr(MZs)) * s + 36 * (sqr(MHs)) * (MTs * MTs) * (MTs - MWs) * (trip(MWs)) * (sqr(MZs)) * s - 64 * MHs * (trip(MTs)) * (MTs - MWs) * (trip(MWs)) * (sqr(MZs)) * s - 96 * (sqr(MHs)) * MTs * (MTs - MWs) * (trip(MWs) * MWs) * (sqr(MZs)) * s + 192 * MHs * (MTs * MTs) * (MTs - MWs) * (trip(MWs) * MWs) * (sqr(MZs)) * s + 80 * (sqr(MHs)) * (MTs - MWs) * (trip(MWs) * sqr(MWs)) * (sqr(MZs)) * s - 384 * MHs * MTs * (MTs - MWs) * (trip(MWs) * sqr(MWs)) * (sqr(MZs)) * s + 256 * MHs * (MTs - MWs) * (trip(MWs) * trip(MWs)) * (sqr(MZs)) * s + 4 * (sqr(MHs)) * (trip(MTs)) * (MTs - MWs) * MWs * (trip(MZs)) * s + 12 * (sqr(MHs)) * (MTs * MTs) * (MTs - MWs) * (sqr(MWs)) * (trip(MZs)) * s + 80 * MHs * (trip(MTs)) * (MTs - MWs) * (sqr(MWs)) * (trip(MZs)) * s - 144 * MHs * (MTs * MTs) * (MTs - MWs) * (trip(MWs)) * (trip(MZs)) * s - 16 * (sqr(MHs)) * (MTs - MWs) * (trip(MWs) * MWs) * (trip(MZs)) * s + 384 * MHs * MTs * (MTs - MWs) * (trip(MWs) * MWs) * (trip(MZs)) * s - 320 * MHs * (MTs - MWs) * (trip(MWs) * sqr(MWs)) * (trip(MZs)) * s - 16 * MHs * (trip(MTs)) * (MTs - MWs) * MWs * (trip(MZs) * MZs) * s - 48 * MHs * (MTs * MTs) * (MTs - MWs) * (sqr(MWs)) * (trip(MZs) * MZs) * s + 64 * MHs * (MTs - MWs) * (trip(MWs) * MWs) * (trip(MZs) * MZs) * s + 32 * (sqr(MHs)) * MTs * (MTs - MWs) * (trip(MWs) * MWs) * MZs * (s * s) - 32 * (sqr(MHs)) * (MTs - MWs) * (trip(MWs) * sqr(MWs)) * MZs * (s * s) - 40 * (sqr(MHs)) * MTs * (MTs - MWs) * (trip(MWs)) * (sqr(MZs)) * (s * s) + 40 * (sqr(MHs)) * (MTs - MWs) * (trip(MWs) * MWs) * (sqr(MZs)) * (s * s) - 128 * MHs * MTs * (MTs - MWs) * (trip(MWs) * MWs) * (sqr(MZs)) * (s * s) + 128 * MHs * (MTs - MWs) * (trip(MWs) * sqr(MWs)) * (sqr(MZs)) * (s * s) + 8 * (sqr(MHs)) * MTs * (MTs - MWs) * (sqr(MWs)) * (trip(MZs)) * (s * s) - 8 * (sqr(MHs)) * (MTs - MWs) * (trip(MWs)) * (trip(MZs)) * (s * s) + 160 * MHs * MTs * (MTs - MWs) * (trip(MWs)) * (trip(MZs)) * (s * s) - 160 * MHs * (MTs - MWs) * (trip(MWs) * MWs) * (trip(MZs)) * (s * s) - 32 * MHs * MTs * (MTs - MWs) * (sqr(MWs)) * (trip(MZs) * MZs) * (s * s) + 32 * MHs * (MTs - MWs) * (trip(MWs)) * (trip(MZs) * MZs) * (s * s)) * real(C0(s, 0, 0, MTs, MTs, MWs))) / (1536. * MHs * ((MTs - MWs) * (MTs - MWs)) * (MHs - 4 * MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s) + (trip(EL) * (24 * (sqr(MHs)) * (trip(MTs) * MTs) * (MTs - MWs) * (trip(MWs)) * MZs - 24 * (sqr(MHs)) * (trip(MTs)) * (MTs - MWs) * (trip(MWs) * MWs) * MZs - 72 * (sqr(MHs)) * (MTs * MTs) * (MTs - MWs) * (trip(MWs) * sqr(MWs)) * MZs + 120 * (sqr(MHs)) * MTs * (MTs - MWs) * (trip(MWs) * trip(MWs)) * MZs - 48 * (sqr(MHs)) * (MTs - MWs) * (trip(MWs) * trip(MWs) * MWs) * MZs - 36 * (sqr(MHs)) * (trip(MTs) * MTs) * (MTs - MWs) * (sqr(MWs)) * (sqr(MZs)) + 60 * (sqr(MHs)) * (trip(MTs)) * (MTs - MWs) * (trip(MWs)) * (sqr(MZs)) - 96 * MHs * (trip(MTs) * MTs) * (MTs - MWs) * (trip(MWs)) * (sqr(MZs)) + 36 * (sqr(MHs)) * (MTs * MTs) * (MTs - MWs) * (trip(MWs) * MWs) * (sqr(MZs)) + 96 * MHs * (trip(MTs)) * (MTs - MWs) * (trip(MWs) * MWs) * (sqr(MZs)) - 108 * (sqr(MHs)) * MTs * (MTs - MWs) * (trip(MWs) * sqr(MWs)) * (sqr(MZs)) + 288 * MHs * (MTs * MTs) * (MTs - MWs) * (trip(MWs) * sqr(MWs)) * (sqr(MZs)) + 48 * (sqr(MHs)) * (MTs - MWs) * (trip(MWs) * trip(MWs)) * (sqr(MZs)) - 480 * MHs * MTs * (MTs - MWs) * (trip(MWs) * trip(MWs)) * (sqr(MZs)) + 192 * MHs * (MTs - MWs) * (trip(MWs) * trip(MWs) * MWs) * (sqr(MZs)) + 12 * (sqr(MHs)) * (trip(MTs) * MTs) * (MTs - MWs) * MWs * (trip(MZs)) - 36 * (sqr(MHs)) * (trip(MTs)) * (MTs - MWs) * (sqr(MWs)) * (trip(MZs)) + 144 * MHs * (trip(MTs) * MTs) * (MTs - MWs) * (sqr(MWs)) * (trip(MZs)) + 36 * (sqr(MHs)) * (MTs * MTs) * (MTs - MWs) * (trip(MWs)) * (trip(MZs)) - 240 * MHs * (trip(MTs)) * (MTs - MWs) * (trip(MWs)) * (trip(MZs)) - 12 * (sqr(MHs)) * MTs * (MTs - MWs) * (trip(MWs) * MWs) * (trip(MZs)) - 144 * MHs * (MTs * MTs) * (MTs - MWs) * (trip(MWs) * MWs) * (trip(MZs)) + 432 * MHs * MTs * (MTs - MWs) * (trip(MWs) * sqr(MWs)) * (trip(MZs)) - 192 * MHs * (MTs - MWs) * (trip(MWs) * trip(MWs)) * (trip(MZs)) - 48 * MHs * (trip(MTs) * MTs) * (MTs - MWs) * MWs * (trip(MZs) * MZs) + 144 * MHs * (trip(MTs)) * (MTs - MWs) * (sqr(MWs)) * (trip(MZs) * MZs) - 144 * MHs * (MTs * MTs) * (MTs - MWs) * (trip(MWs)) * (trip(MZs) * MZs) + 48 * MHs * MTs * (MTs - MWs) * (trip(MWs) * MWs) * (trip(MZs) * MZs) + 24 * (sqr(MHs)) * (trip(MTs)) * (MTs - MWs) * (trip(MWs)) * MZs * s - 72 * (sqr(MHs)) * (MTs * MTs) * (MTs - MWs) * (trip(MWs) * MWs) * MZs * s + 144 * (sqr(MHs)) * MTs * (MTs - MWs) * (trip(MWs) * sqr(MWs)) * MZs * s - 96 * (sqr(MHs)) * (MTs - MWs) * (trip(MWs) * trip(MWs)) * MZs * s - 36 * (sqr(MHs)) * (trip(MTs)) * (MTs - MWs) * (sqr(MWs)) * (sqr(MZs)) * s + 132 * (sqr(MHs)) * (MTs * MTs) * (MTs - MWs) * (trip(MWs)) * (sqr(MZs)) * s - 96 * MHs * (trip(MTs)) * (MTs - MWs) * (trip(MWs)) * (sqr(MZs)) * s - 192 * (sqr(MHs)) * MTs * (MTs - MWs) * (trip(MWs) * MWs) * (sqr(MZs)) * s + 288 * MHs * (MTs * MTs) * (MTs - MWs) * (trip(MWs) * MWs) * (sqr(MZs)) * s + 96 * (sqr(MHs)) * (MTs - MWs) * (trip(MWs) * sqr(MWs)) * (sqr(MZs)) * s - 576 * MHs * MTs * (MTs - MWs) * (trip(MWs) * sqr(MWs)) * (sqr(MZs)) * s + 384 * MHs * (MTs - MWs) * (trip(MWs) * trip(MWs)) * (sqr(MZs)) * s + 12 * (sqr(MHs)) * (trip(MTs)) * (MTs - MWs) * MWs * (trip(MZs)) * s - 60 * (sqr(MHs)) * (MTs * MTs) * (MTs - MWs) * (sqr(MWs)) * (trip(MZs)) * s + 144 * MHs * (trip(MTs)) * (MTs - MWs) * (sqr(MWs)) * (trip(MZs)) * s + 48 * (sqr(MHs)) * MTs * (MTs - MWs) * (trip(MWs)) * (trip(MZs)) * s - 528 * MHs * (MTs * MTs) * (MTs - MWs) * (trip(MWs)) * (trip(MZs)) * s + 768 * MHs * MTs * (MTs - MWs) * (trip(MWs) * MWs) * (trip(MZs)) * s - 384 * MHs * (MTs - MWs) * (trip(MWs) * sqr(MWs)) * (trip(MZs)) * s - 48 * MHs * (trip(MTs)) * (MTs - MWs) * MWs * (trip(MZs) * MZs) * s + 240 * MHs * (MTs * MTs) * (MTs - MWs) * (sqr(MWs)) * (trip(MZs) * MZs) * s - 192 * MHs * MTs * (MTs - MWs) * (trip(MWs)) * (trip(MZs) * MZs) * s) * real(C0(s, 0, 0, MWs, MWs, MTs))) / (1536. * MHs * ((MTs - MWs) * (MTs - MWs)) * (MHs - 4 * MZs) * pow(MWs * (-MWs + MZs), 2.5) * (Pi * Pi) * s);
            break;
        }
        break;
    }
    return (res);
}
// imag. part of bosonic 1-loop Z-vertex factor for k^2 = s
double iz1b(int type, int form, const inval &input, double s)
{
    double MZs = sqr(input.get(MZ)),
           MWs = sqr(input.get(MW)),
           MHs = sqr(input.get(MH)),
           MTs = sqr(input.get(MT)),
           MBs = sqr(input.get(MB)),
           EL = sqrt(4 * Pi * input.get(al)),
           AL = input.get(al),
           res;
    switch (form)
    {
    case VEC:
        switch (type)
        {
        case LEP:
            res = (trip(EL) * (16 * (sqr(MWs) * MWs) * (2 * MZs + 3 * s) - 9 * (sqr(MZs) * MZs) * (2 * MZs + 3 * s) + 12 * MWs * (sqr(MZs)) * (5 * MZs + 7 * s) - 4 * (sqr(MWs)) * MZs * (19 * MZs + 27 * s)) * imag(B0fin(s, 0, 0))) /
                      (256. * pow(MWs * (-MWs + MZs), 1.5) * (Pi * Pi) * s) -
                  (trip(EL) * MWs * (-48 * (sqr(MWs) * MWs) + sqr(MWs) * (26 * MZs - 36 * s) + 2 * (sqr(MZs)) * s + MWs * MZs * (16 * MZs + 31 * s)) * imag(B0fin(s, MWs, MWs))) / (192. * pow(MWs * (-MWs + MZs), 1.5) * (Pi * Pi) * s) - (trip(EL) * MWs * (sqr(MZs)) * ((MWs + s) * (MWs + s)) * imag(C0(s, 0, 0, 0, 0, MWs))) / (64. * pow(MWs * (-MWs + MZs), 1.5) * (Pi * Pi) * s) +
                  (trip(EL) * (16 * (sqr(MWs) * MWs) - 36 * (sqr(MWs)) * MZs + 30 * MWs * (sqr(MZs)) - 9 * (sqr(MZs) * MZs)) *
                   ((MZs + s) * (MZs + s)) * imag(C0(s, 0, 0, 0, 0, MZs))) /
                      (128. * pow(MWs * (-MWs + MZs), 1.5) * (Pi * Pi) * s) -
                  (trip(EL) * (sqr(MWs) * MWs) * MZs * (MWs + 2 * s) * imag(C0(s, 0, 0, MWs, MWs, 0))) /
                      (32. * pow(MWs * (-MWs + MZs), 1.5) * (Pi * Pi) * s);
            break;
        case NEU:
            res = -(trip(EL) * MZs * (-8 * (sqr(MWs) * MWs) + 4 * (sqr(MWs)) * (MZs - 3 * s) + 6 * MWs * MZs * s + sqr(MZs) * (2 * MZs + 3 * s)) *
                    imag(B0fin(s, 0, 0))) /
                      (256. * pow(MWs * (-MWs + MZs), 1.5) * (Pi * Pi) * s) -
                  (trip(EL) * (sqr(MWs)) * MZs * (2 * MWs + s) * imag(B0fin(s, MWs, MWs))) /
                      (64. * pow(MWs * (-MWs + MZs), 1.5) * (Pi * Pi) * s) +
                  (trip(EL) * MWs * (2 * MWs - MZs) * MZs * ((MWs + s) * (MWs + s)) * imag(C0(s, 0, 0, 0, 0, MWs))) /
                      (64. * pow(MWs * (-MWs + MZs), 1.5) * (Pi * Pi) * s) -
                  (trip(EL) * MZs * (2 * (sqr(MZs) * sqr(MZs)) + 4 * (sqr(MZs) * MZs) * s + 2 * (sqr(MZs)) * (s * s)) *
                   imag(C0(s, 0, 0, 0, 0, MZs))) /
                      (256. * pow(MWs * (-MWs + MZs), 1.5) * (Pi * Pi) * s) -
                  (trip(EL) * MZs * (-8 * (trip(MWs) * MWs) - 16 * (sqr(MWs) * MWs) * s) * imag(C0(s, 0, 0, MWs, MWs, 0))) /
                      (256. * pow(MWs * (-MWs + MZs), 1.5) * (Pi * Pi) * s);
            break;
        case UQU:
            res = (trip(EL) * (65 * (sqr(MZs) * MZs) * (2 * MZs + 3 * s) - 8 * (sqr(MWs) * MWs) * (23 * MZs + 48 * s) + 12 * (sqr(MWs)) * MZs * (43 * MZs + 69 * s) - 6 * MWs * (sqr(MZs)) * (68 * MZs + 93 * s)) * imag(B0fin(s, 0, 0))) /
                      (6912. * pow(MWs * (-MWs + MZs), 1.5) * (Pi * Pi) * s) -
                  (trip(EL) * MWs * (96 * (sqr(MWs) * MWs) - 4 * (sqr(MZs)) * s - MWs * MZs * (32 * MZs + 59 * s) + sqr(MWs) * (-46 * MZs + 72 * s)) * imag(B0fin(s, MWs, MWs))) / (576. * pow(MWs * (-MWs + MZs), 1.5) * (Pi * Pi) * s) + (trip(EL) * MWs * MZs * (2 * MWs + MZs) * ((MWs + s) * (MWs + s)) * imag(C0(s, 0, 0, 0, 0, MWs))) / (192. * pow(MWs * (-MWs + MZs), 1.5) * (Pi * Pi) * s) +
                  (trip(EL) * (-256 * (sqr(MWs) * MWs) * (sqr(MZs)) + 480 * (sqr(MWs)) * (sqr(MZs) * MZs) - 408 * MWs * (sqr(MZs) * sqr(MZs)) + 130 * (sqr(MZs) * sqr(MZs) * MZs) - 512 * (sqr(MWs) * MWs) * MZs * s + 960 * (sqr(MWs)) * (sqr(MZs)) * s - 816 * MWs * (sqr(MZs) * MZs) * s + 260 * (sqr(MZs) * sqr(MZs)) * s - 256 * (sqr(MWs) * MWs) * (s * s) + 480 * (sqr(MWs)) * MZs * (s * s) - 408 * MWs * (sqr(MZs)) * (s * s) + 130 * (sqr(MZs) * MZs) * (s * s)) * imag(C0(s, 0, 0, 0, 0, MZs))) /
                      (6912. * pow(MWs * (-MWs + MZs), 1.5) * (Pi * Pi) * s) +
                  (trip(EL) * (216 * (trip(MWs) * MWs) * MZs + 432 * (sqr(MWs) * MWs) * MZs * s) * imag(C0(s, 0, 0, MWs, MWs, 0))) /
                      (6912. * pow(MWs * (-MWs + MZs), 1.5) * (Pi * Pi) * s);
            break;
        case DQU:

            // res = -(trip(EL) * (4 * MWs - MZs) * (4 * (sqr(MWs)) * (7 * MZs - 3 * s) - 7 * (sqr(MZs)) * (2 * MZs + 3 * s) + 4 * MWs * MZs * (MZs + 15 * s)) * imag(B0fin(s, 0, 0))) / (6912. * pow(MWs * (-MWs + MZs), 1.5) * (Pi * Pi) * s) + (trip(EL) * MWs * (48 * (sqr(MWs) * MWs) - 2 * (sqr(MZs)) * s - MWs * MZs * (16 * MZs + 25 * s) + sqr(MWs) * (-14 * MZs + 36 * s)) * imag(B0fin(s, MWs, MWs))) / (576. * pow(MWs * (-MWs + MZs), 1.5) * (Pi * Pi) * s) - (trip(EL) * MWs * (4 * MWs - MZs) * MZs * ((MWs + s) * (MWs + s)) * imag(C0(s, 0, 0, 0, 0, MWs))) / (192. * pow(MWs * (-MWs + MZs), 1.5) * (Pi * Pi) * s) - (trip(EL) * (-32 * (sqr(MWs) * MWs) * (sqr(MZs)) + 24 * (sqr(MWs)) * (sqr(MZs) * MZs) - 60 * MWs * (sqr(MZs) * sqr(MZs)) + 14 * (sqr(MZs) * sqr(MZs) * MZs) - 64 * (sqr(MWs) * MWs) * MZs * s + 48 * (sqr(MWs)) * (sqr(MZs)) * s - 120 * MWs * (sqr(MZs) * MZs) * s + 28 * (sqr(MZs) * sqr(MZs)) * s - 32 * (sqr(MWs) * MWs) * (s * s) + 24 * (sqr(MWs)) * MZs * (s * s) - 60 * MWs * (sqr(MZs)) * (s * s) + 14 * (sqr(MZs) * MZs) * (s * s)) * imag(C0(s, 0, 0, 0, 0, MZs))) / (6912. * pow(MWs * (-MWs + MZs), 1.5) * (Pi * Pi) * s) - (trip(EL) * (216 * (trip(MWs) * MWs) * MZs + 432 * (sqr(MWs) * MWs) * MZs * s) * imag(C0(s, 0, 0, MWs, MWs, 0))) / (6912. * pow(MWs * (-MWs + MZs), 1.5) * (Pi * Pi) * s);
            res = -(pow(AL, 1.5) * ((4 * MWs - MZs) * (4 * (MWs * MWs) * (7 * MZs - 3 * s) - 7 * (MZs * MZs) * (2 * MZs + 3 * s) + 4 * MWs * MZs * (MZs + 15 * s)) * imag(B0fin(s, 0, 0)) + 2 * (-6 * MWs * (48 * (MWs * MWs * MWs) - 2 * (MZs * MZs) * s - MWs * MZs * (16 * MZs + 25 * s) + MWs * MWs * (-14 * MZs + 36 * s)) * imag(B0fin(s, MWs, MWs)) + 18 * MWs * (4 * MWs - MZs) * MZs * ((MWs + s) * (MWs + s)) * imag(C0(s, 0, 0, 0, 0, MWs)) - 16 * (MWs * MWs * MWs) * (MZs * MZs) * imag(C0(s, 0, 0, 0, 0, MZs)) + 12 * (MWs * MWs) * (MZs * MZs * MZs) * imag(C0(s, 0, 0, 0, 0, MZs)) - 30 * MWs * (MZs * MZs * MZs * MZs) * imag(C0(s, 0, 0, 0, 0, MZs)) + 7 * (MZs * MZs * MZs * MZs * MZs) * imag(C0(s, 0, 0, 0, 0, MZs)) - 32 * (MWs * MWs * MWs) * MZs * s * imag(C0(s, 0, 0, 0, 0, MZs)) + 24 * (MWs * MWs) * (MZs * MZs) * s * imag(C0(s, 0, 0, 0, 0, MZs)) - 60 * MWs * (MZs * MZs * MZs) * s * imag(C0(s, 0, 0, 0, 0, MZs)) + 14 * (MZs * MZs * MZs * MZs) * s * imag(C0(s, 0, 0, 0, 0, MZs)) - 16 * (MWs * MWs * MWs) * (s * s) * imag(C0(s, 0, 0, 0, 0, MZs)) + 12 * (MWs * MWs) * MZs * (s * s) * imag(C0(s, 0, 0, 0, 0, MZs)) - 30 * MWs * (MZs * MZs) * (s * s) * imag(C0(s, 0, 0, 0, 0, MZs)) + 7 * (MZs * MZs * MZs) * (s * s) * imag(C0(s, 0, 0, 0, 0, MZs)) + 108 * (MWs * MWs * MWs * MWs) * MZs * imag(C0(s, 0, 0, MWs, MWs, 0)) + 216 * (MWs * MWs * MWs) * MZs * s * imag(C0(s, 0, 0, MWs, MWs, 0))))) / (864. * pow(MWs * (-MWs + MZs), 1.5) * sqrt(Pi) * s);

            break;
        case BQU:
            res = (trip(EL) * (16 * (sqr(MWs) * MWs) - 12 * (sqr(MWs)) * MZs + 30 * MWs * (sqr(MZs)) - 7 * (sqr(MZs) * MZs)) *
                   (2 * MZs + 3 * s) * imag(B0fin(s, 0, 0))) /
                      (6912. * pow(MWs * (-MWs + MZs), 1.5) * (Pi * Pi) * s) +
                  (trip(EL) * MZs * (4 * (MTs * MTs) * (MWs - MZs) - MWs * (4 * MWs - MZs) * (2 * MWs + 3 * s) + 2 * MTs * (2 * (sqr(MWs)) - MZs * s + MWs * (MZs + s))) * imag(B0fin(s, MTs, MTs))) /
                      (384. * pow(MWs * (-MWs + MZs), 1.5) * (Pi * Pi) * s) +
                  (trip(EL) * (576 * (trip(MWs) * MWs) - 108 * (MTs * MTs) * MWs * MZs - 108 * MTs * (sqr(MWs)) * MZs - 168 * (sqr(MWs) * MWs) * MZs + 54 * (MTs * MTs) * (sqr(MZs)) - 54 * MTs * MWs * (sqr(MZs)) - 192 * (sqr(MWs)) * (sqr(MZs)) + 432 * (sqr(MWs) * MWs) * s - 54 * MTs * MWs * MZs * s - 300 * (sqr(MWs)) * MZs * s + 27 * MTs * (sqr(MZs)) * s - 24 * MWs * (sqr(MZs)) * s) * imag(B0fin(s, MWs, MWs))) /
                      (6912. * pow(MWs * (-MWs + MZs), 1.5) * (Pi * Pi) * s) +
                  (trip(EL) * (32 * (sqr(MWs) * MWs) * (sqr(MZs)) - 24 * (sqr(MWs)) * (sqr(MZs) * MZs) + 60 * MWs * (sqr(MZs) * sqr(MZs)) - 14 * (sqr(MZs) * sqr(MZs) * MZs) + 64 * (sqr(MWs) * MWs) * MZs * s - 48 * (sqr(MWs)) * (sqr(MZs)) * s + 120 * MWs * (sqr(MZs) * MZs) * s - 28 * (sqr(MZs) * sqr(MZs)) * s + 32 * (sqr(MWs) * MWs) * (s * s) - 24 * (sqr(MWs)) * MZs * (s * s) + 60 * MWs * (sqr(MZs)) * (s * s) - 14 * (sqr(MZs) * MZs) * (s * s)) * imag(C0(s, 0, 0, 0, 0, MZs))) /
                      (6912. * pow(MWs * (-MWs + MZs), 1.5) * (Pi * Pi) * s) +
                  (trip(EL) * (-72 * (MTs * MTs * MTs) * MWs * MZs + 216 * MTs * (sqr(MWs) * MWs) * MZs - 144 * (trip(MWs) * MWs) * MZs + 72 * (MTs * MTs * MTs) * (sqr(MZs)) - 108 * (MTs * MTs) * MWs * (sqr(MZs)) + 36 * (sqr(MWs) * MWs) * (sqr(MZs)) - 72 * (MTs * MTs) * MWs * MZs * s + 144 * MTs * (sqr(MWs)) * MZs * s - 288 * (sqr(MWs) * MWs) * MZs * s + 18 * (MTs * MTs) * (sqr(MZs)) * s + 72 * MTs * MWs * (sqr(MZs)) * s + 72 * (sqr(MWs)) * (sqr(MZs)) * s - 144 * (sqr(MWs)) * MZs * (s * s) + 36 * MWs * (sqr(MZs)) * (s * s)) * imag(C0(s, 0, 0, MTs, MTs, MWs))) /
                      (6912. * pow(MWs * (-MWs + MZs), 1.5) * (Pi * Pi) * s) +
                  (trip(EL) * (-108 * (MTs * MTs * MTs) * MWs * MZs + 324 * MTs * (sqr(MWs) * MWs) * MZs - 216 * (trip(MWs) * MWs) * MZs + 54 * (MTs * MTs * MTs) * (sqr(MZs)) - 108 * (MTs * MTs) * MWs * (sqr(MZs)) + 54 * MTs * (sqr(MWs)) * (sqr(MZs)) - 108 * (MTs * MTs) * MWs * MZs * s + 216 * MTs * (sqr(MWs)) * MZs * s - 432 * (sqr(MWs) * MWs) * MZs * s + 54 * (MTs * MTs) * (sqr(MZs)) * s - 216 * MTs * MWs * (sqr(MZs)) * s) *
                   imag(C0(s, 0, 0, MWs, MWs, MTs))) /
                      (6912. * pow(MWs * (-MWs + MZs), 1.5) * (Pi * Pi) * s);
            break;
        }
        break;
    case AXV:
        switch (type)
        {
        case LEP:
            res = (trip(EL) * MZs * (7 * (sqr(MZs)) * (2 * MZs + 3 * s) - 12 * MWs * MZs * (3 * MZs + 5 * s) + 4 * (sqr(MWs)) * (5 * MZs + 9 * s)) *
                   imag(B0fin(s, 0, 0))) /
                      (256. * pow(MWs * (-MWs + MZs), 1.5) * (Pi * Pi) * s) +
                  (trip(EL) * (sqr(MWs)) * MZs * (2 * MWs + s) * imag(B0fin(s, MWs, MWs))) /
                      (64. * pow(MWs * (-MWs + MZs), 1.5) * (Pi * Pi) * s) -
                  (trip(EL) * MWs * (sqr(MZs)) * ((MWs + s) * (MWs + s)) * imag(C0(s, 0, 0, 0, 0, MWs))) /
                      (64. * pow(MWs * (-MWs + MZs), 1.5) * (Pi * Pi) * s) +
                  (trip(EL) * MZs * (24 * (sqr(MWs)) * (sqr(MZs)) - 36 * MWs * (sqr(MZs) * MZs) + 14 * (sqr(MZs) * sqr(MZs)) + 48 * (sqr(MWs)) * MZs * s - 72 * MWs * (sqr(MZs)) * s + 28 * (sqr(MZs) * MZs) * s + 24 * (sqr(MWs)) * (s * s) - 36 * MWs * MZs * (s * s) + 14 * (sqr(MZs)) * (s * s)) * imag(C0(s, 0, 0, 0, 0, MZs))) /
                      (256. * pow(MWs * (-MWs + MZs), 1.5) * (Pi * Pi) * s) +
                  (trip(EL) * MZs * (-8 * (trip(MWs) * MWs) - 16 * (sqr(MWs) * MWs) * s) * imag(C0(s, 0, 0, MWs, MWs, 0))) /
                      (256. * pow(MWs * (-MWs + MZs), 1.5) * (Pi * Pi) * s);
            break;
        case NEU:
            res = -(trip(EL) * MZs * (-8 * (sqr(MWs) * MWs) + 4 * (sqr(MWs)) * (MZs - 3 * s) + 6 * MWs * MZs * s + sqr(MZs) * (2 * MZs + 3 * s)) *
                    imag(B0fin(s, 0, 0))) /
                      (256. * pow(MWs * (-MWs + MZs), 1.5) * (Pi * Pi) * s) -
                  (trip(EL) * (sqr(MWs)) * MZs * (2 * MWs + s) * imag(B0fin(s, MWs, MWs))) /
                      (64. * pow(MWs * (-MWs + MZs), 1.5) * (Pi * Pi) * s) +
                  (trip(EL) * MWs * (2 * MWs - MZs) * MZs * ((MWs + s) * (MWs + s)) * imag(C0(s, 0, 0, 0, 0, MWs))) /
                      (64. * pow(MWs * (-MWs + MZs), 1.5) * (Pi * Pi) * s) -
                  (trip(EL) * MZs * (2 * (sqr(MZs) * sqr(MZs)) + 4 * (sqr(MZs) * MZs) * s + 2 * (sqr(MZs)) * (s * s)) *
                   imag(C0(s, 0, 0, 0, 0, MZs))) /
                      (256. * pow(MWs * (-MWs + MZs), 1.5) * (Pi * Pi) * s) -
                  (trip(EL) * MZs * (-8 * (trip(MWs) * MWs) - 16 * (sqr(MWs) * MWs) * s) * imag(C0(s, 0, 0, MWs, MWs, 0))) /
                      (256. * pow(MWs * (-MWs + MZs), 1.5) * (Pi * Pi) * s);
            break;
        case UQU:
            res = (trip(EL) * MZs * (8 * (sqr(MWs) * MWs) - 7 * (sqr(MZs)) * (2 * MZs + 3 * s) - 4 * (sqr(MWs)) * (7 * MZs + 9 * s) + 2 * MWs * MZs * (20 * MZs + 33 * s)) * imag(B0fin(s, 0, 0))) / (768. * pow(MWs * (-MWs + MZs), 1.5) * (Pi * Pi) * s) -
                  (trip(EL) * (sqr(MWs)) * MZs * (2 * MWs + s) * imag(B0fin(s, MWs, MWs))) /
                      (64. * pow(MWs * (-MWs + MZs), 1.5) * (Pi * Pi) * s) +
                  (trip(EL) * MWs * MZs * (2 * MWs + MZs) * ((MWs + s) * (MWs + s)) * imag(C0(s, 0, 0, 0, 0, MWs))) /
                      (192. * pow(MWs * (-MWs + MZs), 1.5) * (Pi * Pi) * s) +
                  (trip(EL) * MZs * (-32 * (sqr(MWs)) * (sqr(MZs)) + 40 * MWs * (sqr(MZs) * MZs) - 14 * (sqr(MZs) * sqr(MZs)) - 64 * (sqr(MWs)) * MZs * s + 80 * MWs * (sqr(MZs)) * s - 28 * (sqr(MZs) * MZs) * s - 32 * (sqr(MWs)) * (s * s) + 40 * MWs * MZs * (s * s) - 14 * (sqr(MZs)) * (s * s)) * imag(C0(s, 0, 0, 0, 0, MZs))) /
                      (768. * pow(MWs * (-MWs + MZs), 1.5) * (Pi * Pi) * s) +
                  (trip(EL) * MZs * (24 * (trip(MWs) * MWs) + 48 * (sqr(MWs) * MWs) * s) * imag(C0(s, 0, 0, MWs, MWs, 0))) /
                      (768. * pow(MWs * (-MWs + MZs), 1.5) * (Pi * Pi) * s);
            break;
        case DQU:
            res = (trip(EL) * MZs * (-16 * (sqr(MWs) * MWs) - 4 * MWs * (sqr(MZs)) + 12 * (sqr(MWs)) * (MZs - s) + sqr(MZs) * (2 * MZs + 3 * s)) * imag(B0fin(s, 0, 0))) / (768. * pow(MWs * (-MWs + MZs), 1.5) * (Pi * Pi) * s) +
                  (trip(EL) * (sqr(MWs)) * MZs * (2 * MWs + s) * imag(B0fin(s, MWs, MWs))) /
                      (64. * pow(MWs * (-MWs + MZs), 1.5) * (Pi * Pi) * s) -
                  (trip(EL) * MWs * (4 * MWs - MZs) * MZs * ((MWs + s) * (MWs + s)) * imag(C0(s, 0, 0, 0, 0, MWs))) /
                      (192. * pow(MWs * (-MWs + MZs), 1.5) * (Pi * Pi) * s) +
                  (trip(EL) * MZs * (8 * (sqr(MWs)) * (sqr(MZs)) - 4 * MWs * (sqr(MZs) * MZs) + 2 * (sqr(MZs) * sqr(MZs)) + 16 * (sqr(MWs)) * MZs * s - 8 * MWs * (sqr(MZs)) * s + 4 * (sqr(MZs) * MZs) * s + 8 * (sqr(MWs)) * (s * s) - 4 * MWs * MZs * (s * s) + 2 * (sqr(MZs)) * (s * s)) * imag(C0(s, 0, 0, 0, 0, MZs))) /
                      (768. * pow(MWs * (-MWs + MZs), 1.5) * (Pi * Pi) * s) +
                  (trip(EL) * MZs * (-24 * (trip(MWs) * MWs) - 48 * (sqr(MWs) * MWs) * s) * imag(C0(s, 0, 0, MWs, MWs, 0))) /
                      (768. * pow(MWs * (-MWs + MZs), 1.5) * (Pi * Pi) * s);
            break;
        case BQU:
            res = (trip(EL) * MZs * (4 * (sqr(MWs)) - 2 * MWs * MZs + sqr(MZs)) * (2 * MZs + 3 * s) * imag(B0fin(s, 0, 0))) /
                      (768. * pow(MWs * (-MWs + MZs), 1.5) * (Pi * Pi) * s) +
                  (trip(EL) * MZs * (4 * (MTs * MTs) * (MWs - MZs) - MWs * (4 * MWs - MZs) * (2 * MWs + 3 * s) + 2 * MTs * (2 * (sqr(MWs)) - MZs * s + MWs * (MZs + s))) * imag(B0fin(s, MTs, MTs))) /
                      (384. * pow(MWs * (-MWs + MZs), 1.5) * (Pi * Pi) * s) +
                  (trip(EL) * MZs * (-12 * (MTs * MTs) * MWs - 12 * MTs * (sqr(MWs)) + 24 * (sqr(MWs) * MWs) + 6 * (MTs * MTs) * MZs - 6 * MTs * MWs * MZs - 6 * MTs * MWs * s + 12 * (sqr(MWs)) * s + 3 * MTs * MZs * s) * imag(B0fin(s, MWs, MWs))) /
                      (768. * pow(MWs * (-MWs + MZs), 1.5) * (Pi * Pi) * s) +
                  (trip(EL) * MZs * (8 * (sqr(MWs)) * (sqr(MZs)) - 4 * MWs * (sqr(MZs) * MZs) + 2 * (sqr(MZs) * sqr(MZs)) + 16 * (sqr(MWs)) * MZs * s - 8 * MWs * (sqr(MZs)) * s + 4 * (sqr(MZs) * MZs) * s + 8 * (sqr(MWs)) * (s * s) - 4 * MWs * MZs * (s * s) + 2 * (sqr(MZs)) * (s * s)) * imag(C0(s, 0, 0, 0, 0, MZs))) /
                      (768. * pow(MWs * (-MWs + MZs), 1.5) * (Pi * Pi) * s) +
                  (trip(EL) * MZs * (-8 * (MTs * MTs * MTs) * MWs + 24 * MTs * (sqr(MWs) * MWs) - 16 * (trip(MWs) * MWs) + 8 * (MTs * MTs * MTs) * MZs - 12 * (MTs * MTs) * MWs * MZs + 4 * (sqr(MWs) * MWs) * MZs - 8 * (MTs * MTs) * MWs * s + 16 * MTs * (sqr(MWs)) * s - 32 * (sqr(MWs) * MWs) * s + 2 * (MTs * MTs) * MZs * s + 8 * MTs * MWs * MZs * s + 8 * (sqr(MWs)) * MZs * s - 16 * (sqr(MWs)) * (s * s) + 4 * MWs * MZs * (s * s)) * imag(C0(s, 0, 0, MTs, MTs, MWs))) /
                      (768. * pow(MWs * (-MWs + MZs), 1.5) * (Pi * Pi) * s) +
                  (trip(EL) * MZs * (-12 * (MTs * MTs * MTs) * MWs + 36 * MTs * (sqr(MWs) * MWs) - 24 * (trip(MWs) * MWs) + 6 * (MTs * MTs * MTs) * MZs - 12 * (MTs * MTs) * MWs * MZs + 6 * MTs * (sqr(MWs)) * MZs - 12 * (MTs * MTs) * MWs * s + 24 * MTs * (sqr(MWs)) * s - 48 * (sqr(MWs) * MWs) * s + 6 * (MTs * MTs) * MZs * s - 24 * MTs * MWs * MZs * s) *
                   imag(C0(s, 0, 0, MWs, MWs, MTs))) /
                      (768. * pow(MWs * (-MWs + MZs), 1.5) * (Pi * Pi) * s);
            break;
        }
        break;
    }
    return (res);
}
extern const double Qf[5];
extern const double I3f[5];

#include "box1.in"

Cplx Bs1(int it, int ot, int if1, int of1, double s, double cost, const inval &input, int AA, int AZ)
{

    double AL = input.get(al),
           ALs = sqr(input.get(al)),
           MZs = sqr(input.get(MZ)),
           MWs = sqr(input.get(MW)),
           MTs = sqr(input.get(MT)),
           CW = sqrt(MWs / MZs),
           CWs = MWs / MZs,
           SWs = 1 - CWs,
           SW = sqrt(1 - CW * CW),
           t = s * (cost - 1) / 2,
           u = -s * (1 + cost) / 2;

    Cplx res;
    switch (ot)
    {
    case LEP:

        switch (if1)
        {
        case VEC:
            switch (of1)
            {
            case VEC:
                res = (AA * ALs * (t * t - u * u) * B0fin(s, 0, 0)) / (s * t * u) - (ALs * AZ * (-(s * t) + MZs * (1 - 4 * SWs + 8 * (SWs * SWs)) * t + 4 * MZs * (1 - 2 * SWs) * SWs * u + 4 * SWs * (-1 + 2 * SWs) * (t * t - u * u)) * B0fin(s, 0, MZs)) / (4. * CWs * (MZs - s) * SWs * t * u) + (ALs * B0fin(s, MWs, MWs)) / (4. * (1 + cost) * s * (SWs * SWs)) - (ALs * ((1 - 8 * SWs + 24 * (SWs * SWs) - 32 * (SWs * SWs * SWs) + 32 * (SWs * SWs * SWs * SWs)) * t - 8 * ((1 - 2 * SWs) * (1 - 2 * SWs)) * (SWs * SWs) * u) * B0fin(s, MZs, MZs)) / (32. * (CWs * CWs) * (SWs * SWs) * t * u) - (ALs * B0fin(((-1 + cost) * s) / 2., 0, 0)) / (4. * (1 + cost) * s * (SWs * SWs)) + (ALs * (1 + 8 * (-1 + AZ * CWs) * SWs - 8 * (-3 + 4 * AZ * CWs - 4 * AA * (CWs * CWs)) * (SWs * SWs) + 32 * (-1 + 2 * AZ * CWs) * (SWs * SWs * SWs) + 32 * (SWs * SWs * SWs * SWs)) * B0fin(t, 0, 0)) / (32. * (CWs * CWs) * (SWs * SWs) * u) - (ALs * (4 * AA * (CWs * CWs) + (1 - 2 * SWs) * (1 - 2 * SWs) + 4 * AZ * CWs * (-1 + 2 * SWs)) * B0fin(u, 0, 0)) / (4. * (CWs * CWs) * t) + (ALs * (-4 * MWs + s + cost * cost * s) * C0(0, s, 0, 0, MWs, MWs)) / (4. * ((1 + cost) * (1 + cost)) * s * (SWs * SWs)) + (ALs * ((1 - 8 * SWs + 24 * (SWs * SWs) - 32 * (SWs * SWs * SWs) + 32 * (SWs * SWs * SWs * SWs)) * (t * t * t * t) - (1 - 4 * SWs) * (1 - 4 * SWs) * (t * t) * (u * u) - 8 * ((1 - 2 * SWs) * (1 - 2 * SWs)) * (SWs * SWs) * (u * u * u * u) - 2 * MZs * s * ((1 - 8 * SWs + 24 * (SWs * SWs) - 32 * (SWs * SWs * SWs) + 32 * (SWs * SWs * SWs * SWs)) * (t * t) - 8 * ((1 - 2 * SWs) * (1 - 2 * SWs)) * (SWs * SWs) * (u * u))) * C0(0, s, 0, 0, MZs, MZs)) / (32. * (CWs * CWs) * (SWs * SWs) * (t * t) * (u * u)) - (ALs * (-1 + cost) * (2 * MWs + cost * s) * C0(((-1 + cost) * s) / 2., 0, 0, 0, 0, MWs)) / (4. * ((1 + cost) * (1 + cost)) * s * (SWs * SWs)) + (ALs * t * (-((1 - 8 * SWs + 24 * (SWs * SWs) - 32 * (SWs * SWs * SWs) + 32 * (SWs * SWs * SWs * SWs)) * (2 * MZs + t - u)) - (4 * AZ * CWs * SWs * (1 - 4 * SWs + 8 * (SWs * SWs)) * (MZs * MZs + 2 * MZs * t + t * t - u * u)) / (MZs - s)) * C0(t, 0, 0, 0, 0, MZs)) / (32. * (CWs * CWs) * (SWs * SWs) * (u * u)) + (u * ((AL - 2 * AL * SWs) * (AL - 2 * AL * SWs) * (2 * MZs - t + u) + (2 * ALs * AZ * CWs * (-1 + 2 * SWs) * (MZs * MZs - t * t + 2 * MZs * u + u * u)) / (MZs - s)) * C0(u, 0, 0, 0, 0, MZs)) / (4. * (CWs * CWs) * (t * t)) + (AA * ALs * (t * t * t * t - u * u * u * u) * (clog2(-s) * clog2(-s))) / (2. * s * (t * t) * (u * u)) - (ALs * AZ * ((1 - 4 * SWs + 8 * (SWs * SWs)) * (t * t * t * t) - t * t * (u * u) + 4 * (1 - 2 * SWs) * SWs * (u * u * u * u) + MZs * MZs * ((1 - 4 * SWs + 8 * (SWs * SWs)) * (t * t) + 4 * (1 - 2 * SWs) * SWs * (u * u)) + 2 * MZs * ((1 - 4 * SWs + 8 * (SWs * SWs)) * (t * t * t) + 4 * (1 - 2 * SWs) * SWs * (u * u * u))) * clog2(MZs - s) * clog2(1 - s / MZs)) / (4. * CWs * (MZs - s) * SWs * (t * t) * (u * u)) - (ALs * (4 * (-3 + cost) * (MWs * MWs) + 4 * ((-1 + cost) * (-1 + cost)) * MWs * s + (-1 + cost - cost * cost + cost * cost * cost) * (s * s)) * D0(((-1 + cost) * s) / 2., 0, s, 0, 0, 0, 0, 0, MWs, MWs)) / (16. * ((1 + cost) * (1 + cost)) * s * (SWs * SWs)) + (ALs * (-4 * ((1 - 2 * SWs) * (1 - 2 * SWs)) * t - (4 * (SWs * SWs) * (t * ((2 * MZs + t) * (2 * MZs + t)) + 2 * (MZs * MZs) * u + t * (u * u))) / (u * u) - ((1 - 2 * SWs) * (1 - 2 * SWs) * (1 - 2 * SWs) * (1 - 2 * SWs) * (4 * MZs * (t * t) + 2 * (MZs * MZs) * (2 * t + u) + t * (t * t + u * u))) / (4. * (SWs * SWs) * (u * u))) * D0(t, 0, s, 0, 0, 0, 0, 0, MZs, MZs)) / (16. * (CWs * CWs)) + (ALs * ((1 - 8 * SWs + 28 * (SWs * SWs) - 48 * (SWs * SWs * SWs) + 48 * (SWs * SWs * SWs * SWs)) * (t * t) * u + 16 * MZs * ((1 - 2 * SWs) * (1 - 2 * SWs)) * (SWs * SWs) * (u * u) + 4 * ((1 - 2 * SWs) * (1 - 2 * SWs)) * (SWs * SWs) * (u * u * u) + 8 * (MZs * MZs) * ((1 - 2 * SWs) * (1 - 2 * SWs)) * (SWs * SWs) * (t + 2 * u)) * D0(u, 0, s, 0, 0, 0, 0, 0, MZs, MZs)) / (32. * (CWs * CWs) * (SWs * SWs) * (t * t)) - (ALs * AZ * ((1 - 4 * SWs + 8 * (SWs * SWs)) * (t * t * t * t) - t * t * (u * u) + 4 * (1 - 2 * SWs) * SWs * (u * u * u * u) + MZs * MZs * ((1 - 4 * SWs + 8 * (SWs * SWs)) * (t * t) + 4 * (1 - 2 * SWs) * SWs * (u * u)) + 2 * MZs * ((1 - 4 * SWs + 8 * (SWs * SWs)) * (t * t * t) + 4 * (1 - 2 * SWs) * SWs * (u * u * u))) * li2(-(s / (MZs - s)))) / (2. * CWs * (MZs - s) * SWs * (t * t) * (u * u)) - (ALs * AZ * (MZs * MZs * (1 - 4 * SWs + 8 * (SWs * SWs)) + 2 * MZs * (1 - 4 * SWs + 8 * (SWs * SWs)) * t + (1 - 4 * SWs + 8 * (SWs * SWs)) * (t * t) + (1 - 12 * SWs + 24 * (SWs * SWs)) * (u * u)) * li2((MZs + t) / t)) / (8. * CWs * (MZs - s) * SWs * (u * u)) + (ALs * AZ * (2 * (MZs * MZs) * SWs * (-1 + 2 * SWs) + (1 - 6 * SWs + 12 * (SWs * SWs)) * (t * t) + 4 * MZs * SWs * (-1 + 2 * SWs) * u + 2 * SWs * (-1 + 2 * SWs) * (u * u)) * li2((MZs + u) / u)) / (4. * CWs * (MZs - s) * SWs * (t * t)) - (ALs * AZ * ((1 - 4 * SWs + 8 * (SWs * SWs)) * (t * t * t * t) - t * t * (u * u) + 4 * (1 - 2 * SWs) * SWs * (u * u * u * u) + MZs * MZs * ((1 - 4 * SWs + 8 * (SWs * SWs)) * (t * t) + 4 * (1 - 2 * SWs) * SWs * (u * u)) + 2 * MZs * ((1 - 4 * SWs + 8 * (SWs * SWs)) * (t * t * t) + 4 * (1 - 2 * SWs) * SWs * (u * u * u))) * li2c(s / MZs)) / (4. * CWs * (MZs - s) * SWs * (t * t) * (u * u)) + (AA * ALs * clog2(-s) * (-((t * t * t * t + 3 * (t * t) * (u * u)) * log(-t)) + u * u * (3 * (t * t) + u * u) * log(-u))) / (s * (t * t) * (u * u)) + (ALs * AZ * clog2(1 - s / MZs) * (t * t * (MZs * MZs * (1 - 4 * SWs + 8 * (SWs * SWs)) + 2 * MZs * (1 - 4 * SWs + 8 * (SWs * SWs)) * t + (1 - 4 * SWs + 8 * (SWs * SWs)) * (t * t) + (1 - 12 * SWs + 24 * (SWs * SWs)) * (u * u)) * log(-t) - 2 * (u * u) * (2 * (MZs * MZs) * SWs * (-1 + 2 * SWs) + (1 - 6 * SWs + 12 * (SWs * SWs)) * (t * t) + 4 * MZs * SWs * (-1 + 2 * SWs) * u + 2 * SWs * (-1 + 2 * SWs) * (u * u)) * log(-u))) / (4. * CWs * (MZs - s) * SWs * (t * t) * (u * u)) + (ALs * (24 * AA * CWs * (Pi * Pi) * (MZs - s) * SWs * (t * t * t * t) - 24 * AA * CWs * (Pi * Pi) * (MZs - s) * SWs * (u * u * u * u) - AZ * (Pi * Pi) * s * ((1 - 4 * SWs + 8 * (SWs * SWs)) * (t * t * t * t) - t * t * (u * u) + 4 * (1 - 2 * SWs) * SWs * (u * u * u * u) + MZs * MZs * ((1 - 4 * SWs + 8 * (SWs * SWs)) * (t * t) + 4 * (1 - 2 * SWs) * SWs * (u * u)) + 2 * MZs * ((1 - 4 * SWs + 8 * (SWs * SWs)) * (t * t * t) + 4 * (1 - 2 * SWs) * SWs * (u * u * u))) - 3 * AZ * s * ((1 - 4 * SWs + 8 * (SWs * SWs)) * (t * t * t * t) - t * t * (u * u) + 4 * (1 - 2 * SWs) * SWs * (u * u * u * u) + MZs * MZs * ((1 - 4 * SWs + 8 * (SWs * SWs)) * (t * t) + 4 * (1 - 2 * SWs) * SWs * (u * u)) + 2 * MZs * ((1 - 4 * SWs + 8 * (SWs * SWs)) * (t * t * t) + 4 * (1 - 2 * SWs) * SWs * (u * u * u))) * (log(MZs) * log(MZs)) + 24 * AA * CWs * (MZs - s) * SWs * (t * t * t * t) * (log(-t) * log(-t)) - 24 * AA * CWs * (MZs - s) * SWs * (t * t) * (u * u) * (log(-t) * log(-t)) - 3 * AZ * s * (1 - 4 * SWs + 8 * (SWs * SWs)) * (t * t) * (MZs * MZs + 2 * MZs * t + t * t - u * u) * (log(-t) * log(-t)) + 24 * AA * CWs * (MZs - s) * SWs * (t * t) * (u * u) * (log(-u) * log(-u)) - 24 * AA * CWs * (MZs - s) * SWs * (u * u * u * u) * (log(-u) * log(-u)) + 12 * AZ * s * SWs * (-1 + 2 * SWs) * (u * u) * (MZs * MZs - t * t + 2 * MZs * u + u * u) * (log(-u) * log(-u)) + 6 * AZ * s * log(MZs) * (t * t * (MZs * MZs * (1 - 4 * SWs + 8 * (SWs * SWs)) + 2 * MZs * (1 - 4 * SWs + 8 * (SWs * SWs)) * t + (1 - 4 * SWs + 8 * (SWs * SWs)) * (t * t) + (1 - 12 * SWs + 24 * (SWs * SWs)) * (u * u)) * log(-t) - 2 * (u * u) * (2 * (MZs * MZs) * SWs * (-1 + 2 * SWs) + (1 - 6 * SWs + 12 * (SWs * SWs)) * (t * t) + 4 * MZs * SWs * (-1 + 2 * SWs) * u + 2 * SWs * (-1 + 2 * SWs) * (u * u)) * log(-u)) - 6 * AZ * s * ((1 - 4 * SWs) * (1 - 4 * SWs)) * (t * t) * (u * u) * log(-t) * (-1 + log(t * u)) + 6 * AZ * s * ((1 - 4 * SWs) * (1 - 4 * SWs)) * (t * t) * (u * u) * log(-u) * (-1 + log(t * u)))) / (48. * CWs * (MZs - s) * s * SWs * (t * t) * (u * u)) + (2 * AA * ALs * clog1(t) * (-1 + log(t * u))) / s - (2 * AA * ALs * clog1(u) * (-1 + log(t * u))) / s;
                break;
            case AXV:
                res = (ALs * AZ * (-1 + 4 * SWs) * B0fin(s, 0, MZs)) / (4. * CWs * SWs * u) + (ALs * B0fin(s, MWs, MWs)) / (4. * (1 + cost) * s * (SWs * SWs)) + (ALs * (-1 + 4 * SWs) * (1 - 4 * SWs + 8 * (SWs * SWs)) * B0fin(s, MZs, MZs)) / (32. * (CWs * CWs) * (SWs * SWs) * u) - (ALs * B0fin(((-1 + cost) * s) / 2., 0, 0)) / (4. * (1 + cost) * s * (SWs * SWs)) - (ALs * (-1 + 4 * SWs) * (1 + (-4 + 8 * AZ * CWs) * SWs + 8 * (SWs * SWs)) * B0fin(t, 0, 0)) / (32. * (CWs * CWs) * (SWs * SWs) * u) + (ALs * (-4 * MWs + s + cost * cost * s) * C0(0, s, 0, 0, MWs, MWs)) / (4. * ((1 + cost) * (1 + cost)) * s * (SWs * SWs)) + (ALs * (-1 + 8 * SWs - 24 * (SWs * SWs) + 32 * (SWs * SWs * SWs)) * (2 * MZs * s - t * t + u * u) * C0(0, s, 0, 0, MZs, MZs)) / (32. * (CWs * CWs) * (SWs * SWs) * (u * u)) - (ALs * (-1 + cost) * (2 * MWs + cost * s) * C0(((-1 + cost) * s) / 2., 0, 0, 0, 0, MWs)) / (4. * ((1 + cost) * (1 + cost)) * s * (SWs * SWs)) + (ALs * (-1 + 4 * SWs) * t * (2 * (MZs * MZs) * (1 + 2 * (-2 + AZ * CWs) * SWs + 8 * (SWs * SWs)) + MZs * (-2 * s * (1 - 4 * SWs + 8 * (SWs * SWs)) + (1 - 4 * SWs + 8 * AZ * CWs * SWs + 8 * (SWs * SWs)) * t + (-1 + 4 * SWs - 8 * (SWs * SWs)) * u) + (t - u) * (s * (-1 + 4 * SWs - 8 * (SWs * SWs)) + 4 * AZ * CWs * SWs * (t + u))) * C0(t, 0, 0, 0, 0, MZs)) / (32. * (CWs * CWs) * (MZs - s) * (SWs * SWs) * (u * u)) + (ALs * AZ * (-1 + 4 * SWs) * (MZs * MZs + 2 * MZs * t + t * t - u * u) * clog2(MZs - s) * clog2(1 - s / MZs)) / (4. * CWs * (MZs - s) * SWs * (u * u)) + (ALs * (-4 * (-3 + cost) * (MWs * MWs) - 4 * ((-1 + cost) * (-1 + cost)) * MWs * s - (-1 + cost) * (1 + cost * cost) * (s * s)) * D0(((-1 + cost) * s) / 2., 0, s, 0, 0, 0, 0, 0, MWs, MWs)) / (16. * ((1 + cost) * (1 + cost)) * s * (SWs * SWs)) + (ALs * (-1 + 8 * SWs - 24 * (SWs * SWs) + 32 * (SWs * SWs * SWs)) * (4 * MZs * (t * t) + 2 * (MZs * MZs) * (2 * t + u) + t * (t * t + u * u)) * D0(t, 0, s, 0, 0, 0, 0, 0, MZs, MZs)) / (64. * (CWs * CWs) * (SWs * SWs) * (u * u)) - (ALs * (-1 + 8 * SWs - 24 * (SWs * SWs) + 32 * (SWs * SWs * SWs)) * u * D0(u, 0, s, 0, 0, 0, 0, 0, MZs, MZs)) / (32. * (CWs * CWs) * (SWs * SWs)) + (ALs * AZ * (-1 + 4 * SWs) * (MZs * MZs + 2 * MZs * t + t * t - u * u) * li2(-(s / (MZs - s)))) / (2. * CWs * (MZs - s) * SWs * (u * u)) + (ALs * AZ * (-1 + 4 * SWs) * (MZs * MZs + 2 * MZs * t + t * t + u * u) * li2((MZs + t) / t)) / (8. * CWs * (MZs - s) * SWs * (u * u)) + ((ALs * AZ - 4 * ALs * AZ * SWs) * li2((MZs + u) / u)) / (4 * CWs * MZs * SWs - 4 * CWs * s * SWs) + (ALs * AZ * (-1 + 4 * SWs) * (MZs * MZs + 2 * MZs * t + t * t - u * u) * li2c(s / MZs)) / (4. * CWs * (MZs - s) * SWs * (u * u)) - (ALs * AZ * (-1 + 4 * SWs) * clog2(1 - s / MZs) * ((MZs * MZs + 2 * MZs * t + t * t + u * u) * log(-t) - 2 * (u * u) * log(-u))) / (4. * CWs * (MZs - s) * SWs * (u * u)) + (ALs * AZ * (-1 + 4 * SWs) * (MZs * MZs * (Pi * Pi) + 2 * MZs * (Pi * Pi) * t + Pi * Pi * (t * t) - Pi * Pi * (u * u) + 3 * (MZs * MZs + 2 * MZs * t + t * t - u * u) * (log(MZs) * log(MZs)) + 3 * (MZs * MZs + 2 * MZs * t + t * t - u * u) * (log(-t) * log(-t)) + 6 * (u * u) * log(-u) - 6 * log(MZs) * ((MZs * MZs + 2 * MZs * t + t * t + u * u) * log(-t) - 2 * (u * u) * log(-u)) + 6 * (u * u) * log(-t) * (-1 + log(t * u)) - 6 * (u * u) * log(-u) * log(t * u))) / (48. * CWs * (MZs - s) * SWs * (u * u));
                break;
            }
            break;
        case AXV:
            switch (of1)
            {
            case VEC:
                res = (ALs * AZ * (-1 + 4 * SWs) * B0fin(s, 0, MZs)) / (4. * CWs * SWs * u) + (ALs * B0fin(s, MWs, MWs)) / (4. * (1 + cost) * s * (SWs * SWs)) + (ALs * (-1 + 4 * SWs) * (1 - 4 * SWs + 8 * (SWs * SWs)) * B0fin(s, MZs, MZs)) / (32. * (CWs * CWs) * (SWs * SWs) * u) - (ALs * B0fin(((-1 + cost) * s) / 2., 0, 0)) / (4. * (1 + cost) * s * (SWs * SWs)) - (ALs * (-1 + 4 * SWs) * (1 + (-4 + 8 * AZ * CWs) * SWs + 8 * (SWs * SWs)) * B0fin(t, 0, 0)) / (32. * (CWs * CWs) * (SWs * SWs) * u) + (ALs * (-4 * MWs + s + cost * cost * s) * C0(0, s, 0, 0, MWs, MWs)) / (4. * ((1 + cost) * (1 + cost)) * s * (SWs * SWs)) + (ALs * (-1 + 8 * SWs - 24 * (SWs * SWs) + 32 * (SWs * SWs * SWs)) * (2 * MZs * s - t * t + u * u) * C0(0, s, 0, 0, MZs, MZs)) / (32. * (CWs * CWs) * (SWs * SWs) * (u * u)) - (ALs * (-1 + cost) * (2 * MWs + cost * s) * C0(((-1 + cost) * s) / 2., 0, 0, 0, 0, MWs)) / (4. * ((1 + cost) * (1 + cost)) * s * (SWs * SWs)) + (ALs * (-1 + 4 * SWs) * t * (2 * (MZs * MZs) * (1 + 2 * (-2 + AZ * CWs) * SWs + 8 * (SWs * SWs)) + MZs * (-2 * s * (1 - 4 * SWs + 8 * (SWs * SWs)) + (1 - 4 * SWs + 8 * AZ * CWs * SWs + 8 * (SWs * SWs)) * t + (-1 + 4 * SWs - 8 * (SWs * SWs)) * u) + (t - u) * (s * (-1 + 4 * SWs - 8 * (SWs * SWs)) + 4 * AZ * CWs * SWs * (t + u))) * C0(t, 0, 0, 0, 0, MZs)) / (32. * (CWs * CWs) * (MZs - s) * (SWs * SWs) * (u * u)) + (ALs * AZ * (-1 + 4 * SWs) * (MZs * MZs + 2 * MZs * t + t * t - u * u) * clog2(MZs - s) * clog2(1 - s / MZs)) / (4. * CWs * (MZs - s) * SWs * (u * u)) + (ALs * (-4 * (-3 + cost) * (MWs * MWs) - 4 * ((-1 + cost) * (-1 + cost)) * MWs * s - (-1 + cost) * (1 + cost * cost) * (s * s)) * D0(((-1 + cost) * s) / 2., 0, s, 0, 0, 0, 0, 0, MWs, MWs)) / (16. * ((1 + cost) * (1 + cost)) * s * (SWs * SWs)) + (ALs * (-1 + 8 * SWs - 24 * (SWs * SWs) + 32 * (SWs * SWs * SWs)) * (4 * MZs * (t * t) + 2 * (MZs * MZs) * (2 * t + u) + t * (t * t + u * u)) * D0(t, 0, s, 0, 0, 0, 0, 0, MZs, MZs)) / (64. * (CWs * CWs) * (SWs * SWs) * (u * u)) - (ALs * (-1 + 8 * SWs - 24 * (SWs * SWs) + 32 * (SWs * SWs * SWs)) * u * D0(u, 0, s, 0, 0, 0, 0, 0, MZs, MZs)) / (32. * (CWs * CWs) * (SWs * SWs)) + (ALs * AZ * (-1 + 4 * SWs) * (MZs * MZs + 2 * MZs * t + t * t - u * u) * li2(-(s / (MZs - s)))) / (2. * CWs * (MZs - s) * SWs * (u * u)) + (ALs * AZ * (-1 + 4 * SWs) * (MZs * MZs + 2 * MZs * t + t * t + u * u) * li2((MZs + t) / t)) / (8. * CWs * (MZs - s) * SWs * (u * u)) + ((ALs * AZ - 4 * ALs * AZ * SWs) * li2((MZs + u) / u)) / (4 * CWs * MZs * SWs - 4 * CWs * s * SWs) + (ALs * AZ * (-1 + 4 * SWs) * (MZs * MZs + 2 * MZs * t + t * t - u * u) * li2c(s / MZs)) / (4. * CWs * (MZs - s) * SWs * (u * u)) - (ALs * AZ * (-1 + 4 * SWs) * clog2(1 - s / MZs) * ((MZs * MZs + 2 * MZs * t + t * t + u * u) * log(-t) - 2 * (u * u) * log(-u))) / (4. * CWs * (MZs - s) * SWs * (u * u)) + (ALs * AZ * (-1 + 4 * SWs) * (MZs * MZs * (Pi * Pi) + 2 * MZs * (Pi * Pi) * t + Pi * Pi * (t * t) - Pi * Pi * (u * u) + 3 * (MZs * MZs + 2 * MZs * t + t * t - u * u) * (log(MZs) * log(MZs)) + 3 * (MZs * MZs + 2 * MZs * t + t * t - u * u) * (log(-t) * log(-t)) + 6 * (u * u) * log(-u) - 6 * log(MZs) * ((MZs * MZs + 2 * MZs * t + t * t + u * u) * log(-t) - 2 * (u * u) * log(-u)) + 6 * (u * u) * log(-t) * (-1 + log(t * u)) - 6 * (u * u) * log(-u) * log(t * u))) / (48. * CWs * (MZs - s) * SWs * (u * u));
                break;
            case AXV:

                res = (AA * ALs * s * B0fin(s, 0, 0)) / (t * u) - (ALs * AZ * (4 * s * (1 - 2 * SWs) * SWs + t) * B0fin(s, 0, MZs)) / (4. * CWs * SWs * t * u) + (ALs * B0fin(s, MWs, MWs)) / (4. * (1 + cost) * s * (SWs * SWs)) - (ALs * ((1 - 8 * SWs + 24 * (SWs * SWs) - 32 * (SWs * SWs * SWs) + 32 * (SWs * SWs * SWs * SWs)) * t + 8 * ((1 - 2 * SWs) * (1 - 2 * SWs)) * (SWs * SWs) * u) * B0fin(s, MZs, MZs)) / (32. * (CWs * CWs) * (SWs * SWs) * t * u) - (ALs * B0fin(((-1 + cost) * s) / 2., 0, 0)) / (4. * (1 + cost) * s * (SWs * SWs)) + (ALs * (1 + 8 * (-1 + AZ * CWs) * SWs - 8 * (-3 + 4 * AZ * CWs - 4 * AA * (CWs * CWs)) * (SWs * SWs) + 32 * (-1 + 2 * AZ * CWs) * (SWs * SWs * SWs) + 32 * (SWs * SWs * SWs * SWs)) * B0fin(t, 0, 0)) / (32. * (CWs * CWs) * (SWs * SWs) * u) + (ALs * (4 * AA * (CWs * CWs) + (1 - 2 * SWs) * (1 - 2 * SWs) + 4 * AZ * CWs * (-1 + 2 * SWs)) * B0fin(u, 0, 0)) / (4. * (CWs * CWs) * t) + (ALs * (-4 * MWs + s + cost * cost * s) * C0(0, s, 0, 0, MWs, MWs)) / (4. * ((1 + cost) * (1 + cost)) * s * (SWs * SWs)) + (ALs * ((1 - 8 * SWs + 24 * (SWs * SWs) - 32 * (SWs * SWs * SWs) + 32 * (SWs * SWs * SWs * SWs)) * (t * t * t * t) - (1 - 4 * SWs + 8 * (SWs * SWs)) * (1 - 4 * SWs + 8 * (SWs * SWs)) * (t * t) * (u * u) + 8 * ((1 - 2 * SWs) * (1 - 2 * SWs)) * (SWs * SWs) * (u * u * u * u) - 2 * MZs * s * ((1 - 8 * SWs + 24 * (SWs * SWs) - 32 * (SWs * SWs * SWs) + 32 * (SWs * SWs * SWs * SWs)) * (t * t) + 8 * ((1 - 2 * SWs) * (1 - 2 * SWs)) * (SWs * SWs) * (u * u))) * C0(0, s, 0, 0, MZs, MZs)) / (32. * (CWs * CWs) * (SWs * SWs) * (t * t) * (u * u)) - (ALs * (-1 + cost) * (2 * MWs + cost * s) * C0(((-1 + cost) * s) / 2., 0, 0, 0, 0, MWs)) / (4. * ((1 + cost) * (1 + cost)) * s * (SWs * SWs)) + (ALs * t * (-((1 - 8 * SWs + 24 * (SWs * SWs) - 32 * (SWs * SWs * SWs) + 32 * (SWs * SWs * SWs * SWs)) * (2 * MZs + t - u)) - (4 * AZ * CWs * SWs * (1 - 4 * SWs + 8 * (SWs * SWs)) * (MZs * MZs + 2 * MZs * t + t * t - u * u)) / (MZs - s)) * C0(t, 0, 0, 0, 0, MZs)) / (32. * (CWs * CWs) * (SWs * SWs) * (u * u)) + (u * ((AL - 2 * AL * SWs) * (AL - 2 * AL * SWs) * (-2 * MZs + t - u) - (2 * ALs * AZ * CWs * (-1 + 2 * SWs) * (MZs * MZs - t * t + 2 * MZs * u + u * u)) / (MZs - s)) * C0(u, 0, 0, 0, 0, MZs)) / (4. * (CWs * CWs) * (t * t)) + (AA * ALs * s * ((t - u) * (t - u)) * (clog2(-s) * clog2(-s))) / (2. * (t * t) * (u * u)) - (ALs * AZ * ((t * t - u * u) * ((1 - 4 * SWs + 8 * (SWs * SWs)) * (t * t) + 4 * (1 - 2 * SWs) * SWs * (u * u)) + MZs * MZs * ((1 - 4 * SWs + 8 * (SWs * SWs)) * (t * t) + 4 * SWs * (-1 + 2 * SWs) * (u * u)) + 2 * MZs * (t * t * t - 4 * s * SWs * (-1 + 2 * SWs) * (t * t - t * u + u * u))) * clog2(MZs - s) * clog2(1 - s / MZs)) / (4. * CWs * (MZs - s) * SWs * (t * t) * (u * u)) + (ALs * (-4 * (-3 + cost) * (MWs * MWs) - 4 * ((-1 + cost) * (-1 + cost)) * MWs * s - (-1 + cost) * (1 + cost * cost) * (s * s)) * D0(((-1 + cost) * s) / 2., 0, s, 0, 0, 0, 0, 0, MWs, MWs)) / (16. * ((1 + cost) * (1 + cost)) * s * (SWs * SWs)) + (ALs * (4 * ((1 - 2 * SWs) * (1 - 2 * SWs)) * t - (4 * (SWs * SWs) * (t * ((2 * MZs + t) * (2 * MZs + t)) + 2 * (MZs * MZs) * u + t * (u * u))) / (u * u) - ((1 - 2 * SWs) * (1 - 2 * SWs) * (1 - 2 * SWs) * (1 - 2 * SWs) * (4 * MZs * (t * t) + 2 * (MZs * MZs) * (2 * t + u) + t * (t * t + u * u))) / (4. * (SWs * SWs) * (u * u))) * D0(t, 0, s, 0, 0, 0, 0, 0, MZs, MZs)) / (16. * (CWs * CWs)) - (ALs * ((-1 + 8 * SWs - 20 * (SWs * SWs) + 16 * (SWs * SWs * SWs) - 16 * (SWs * SWs * SWs * SWs)) * (t * t) * u + 16 * MZs * ((1 - 2 * SWs) * (1 - 2 * SWs)) * (SWs * SWs) * (u * u) + 4 * ((1 - 2 * SWs) * (1 - 2 * SWs)) * (SWs * SWs) * (u * u * u) + 8 * (MZs * MZs) * ((1 - 2 * SWs) * (1 - 2 * SWs)) * (SWs * SWs) * (t + 2 * u)) * D0(u, 0, s, 0, 0, 0, 0, 0, MZs, MZs)) / (32. * (CWs * CWs) * (SWs * SWs) * (t * t)) - (ALs * AZ * ((t * t - u * u) * ((1 - 4 * SWs + 8 * (SWs * SWs)) * (t * t) + 4 * (1 - 2 * SWs) * SWs * (u * u)) + MZs * MZs * ((1 - 4 * SWs + 8 * (SWs * SWs)) * (t * t) + 4 * SWs * (-1 + 2 * SWs) * (u * u)) + 2 * MZs * (t * t * t - 4 * s * SWs * (-1 + 2 * SWs) * (t * t - t * u + u * u))) * li2(-(s / (MZs - s)))) / (2. * CWs * (MZs - s) * SWs * (t * t) * (u * u)) - (ALs * AZ * (MZs * MZs * (1 - 4 * SWs + 8 * (SWs * SWs)) + 2 * MZs * (1 - 4 * SWs + 8 * (SWs * SWs)) * t + (1 - 4 * SWs + 8 * (SWs * SWs)) * (t * t) + (1 + 4 * SWs - 8 * (SWs * SWs)) * (u * u)) * li2((MZs + t) / t)) / (8. * CWs * (MZs - s) * SWs * (u * u)) - (ALs * AZ * (2 * (MZs * MZs) * SWs * (-1 + 2 * SWs) + (-1 + 2 * SWs - 4 * (SWs * SWs)) * (t * t) + 4 * MZs * SWs * (-1 + 2 * SWs) * u + 2 * SWs * (-1 + 2 * SWs) * (u * u)) * li2((MZs + u) / u)) / (4. * CWs * (MZs - s) * SWs * (t * t)) - (ALs * AZ * ((t * t - u * u) * ((1 - 4 * SWs + 8 * (SWs * SWs)) * (t * t) + 4 * (1 - 2 * SWs) * SWs * (u * u)) + MZs * MZs * ((1 - 4 * SWs + 8 * (SWs * SWs)) * (t * t) + 4 * SWs * (-1 + 2 * SWs) * (u * u)) + 2 * MZs * (t * t * t - 4 * s * SWs * (-1 + 2 * SWs) * (t * t - t * u + u * u))) * li2c(s / MZs)) / (4. * CWs * (MZs - s) * SWs * (t * t) * (u * u)) + (AA * ALs * (t - u) * clog2(-s) * (t * t * log(-t) - u * u * log(-u))) / (t * t * (u * u)) + (ALs * AZ * clog2(1 - s / MZs) * (t * t * (MZs * MZs * (1 - 4 * SWs + 8 * (SWs * SWs)) + 2 * MZs * (1 - 4 * SWs + 8 * (SWs * SWs)) * t + (1 - 4 * SWs + 8 * (SWs * SWs)) * (t * t) + (1 + 4 * SWs - 8 * (SWs * SWs)) * (u * u)) * log(-t) + 2 * (u * u) * (2 * (MZs * MZs) * SWs * (-1 + 2 * SWs) + (-1 + 2 * SWs - 4 * (SWs * SWs)) * (t * t) + 4 * MZs * SWs * (-1 + 2 * SWs) * u + 2 * SWs * (-1 + 2 * SWs) * (u * u)) * log(-u))) / (4. * CWs * (MZs - s) * SWs * (t * t) * (u * u)) + (ALs * (24 * AA * CWs * (Pi * Pi) * (MZs - s) * s * SWs * (t * t) - 48 * AA * CWs * (Pi * Pi) * (MZs - s) * s * SWs * t * u + 24 * AA * CWs * (Pi * Pi) * (MZs - s) * s * SWs * (u * u) - AZ * (Pi * Pi) * ((t * t - u * u) * ((1 - 4 * SWs + 8 * (SWs * SWs)) * (t * t) + 4 * (1 - 2 * SWs) * SWs * (u * u)) + MZs * MZs * ((1 - 4 * SWs + 8 * (SWs * SWs)) * (t * t) + 4 * SWs * (-1 + 2 * SWs) * (u * u)) + 2 * MZs * (t * t * t - 4 * s * SWs * (-1 + 2 * SWs) * (t * t - t * u + u * u))) - 3 * AZ * ((t * t - u * u) * ((1 - 4 * SWs + 8 * (SWs * SWs)) * (t * t) + 4 * (1 - 2 * SWs) * SWs * (u * u)) + MZs * MZs * ((1 - 4 * SWs + 8 * (SWs * SWs)) * (t * t) + 4 * SWs * (-1 + 2 * SWs) * (u * u)) + 2 * MZs * (t * t * t - 4 * s * SWs * (-1 + 2 * SWs) * (t * t - t * u + u * u))) * (log(MZs) * log(MZs)) - 24 * AA * CWs * (MZs - s) * SWs * (t * t * t) * (log(-t) * log(-t)) + 24 * AA * CWs * (MZs - s) * SWs * (t * t) * u * (log(-t) * log(-t)) - 3 * AZ * (1 - 4 * SWs + 8 * (SWs * SWs)) * (t * t) * (MZs * MZs + 2 * MZs * t + t * t - u * u) * (log(-t) * log(-t)) + 24 * AA * CWs * (MZs - s) * SWs * t * (u * u) * (log(-u) * log(-u)) - 24 * AA * CWs * (MZs - s) * SWs * (u * u * u) * (log(-u) * log(-u)) + 12 * AZ * (1 - 2 * SWs) * SWs * (u * u) * (MZs * MZs - t * t + 2 * MZs * u + u * u) * (log(-u) * log(-u)) + 6 * AZ * log(MZs) * (t * t * (MZs * MZs * (1 - 4 * SWs + 8 * (SWs * SWs)) + 2 * MZs * (1 - 4 * SWs + 8 * (SWs * SWs)) * t + (1 - 4 * SWs + 8 * (SWs * SWs)) * (t * t) + (1 + 4 * SWs - 8 * (SWs * SWs)) * (u * u)) * log(-t) - 2 * (u * u) * (2 * (MZs * MZs) * (1 - 2 * SWs) * SWs + (1 - 2 * SWs + 4 * (SWs * SWs)) * (t * t) + 4 * MZs * (1 - 2 * SWs) * SWs * u + 2 * (1 - 2 * SWs) * SWs * (u * u)) * log(-u)) - 6 * AZ * (t * t) * (u * u) * log(-t) * (-1 + log(t * u)) + 6 * AZ * (t * t) * (u * u) * log(-u) * (-1 + log(t * u)))) / (48. * CWs * (MZs - s) * SWs * (t * t) * (u * u));
                break;
            }
            break;
        }
        break;
    case NEU:
    switch (if1)
        {
        case VEC:
            switch (of1)
            {
            case VEC:
                res = -(ALs*((1 - 2*SWs)*(1 - 2*SWs)*t - 4*(SWs*SWs)*u)*B0fin(s,MZs,MZs))/(32.*(CWs*CWs)*(SWs*SWs)*t*u) + (ALs*((1 - 2*SWs)*(1 - 2*SWs))*B0fin(t,0,0))/(32.*(CWs*CWs)*(SWs*SWs)*u) - (ALs*B0fin(u,0,0))/(8.*(CWs*CWs)*t) - (ALs*C0(0,s,0,0,MWs,MWs))/(4.*(SWs*SWs)) + (ALs*((1 - 2*SWs)*(1 - 2*SWs)*(t*t)*(-2*MZs*s + t*t) + (8*MZs*s*(SWs*SWs) + (-1 + 4*SWs)*(t*t))*(u*u) - 4*(SWs*SWs)*(u*u*u*u))*C0(0,s,0,0,MZs,MZs))/ (32.*(CWs*CWs)*(SWs*SWs)*(t*t)*(u*u)) - (ALs*((1 - 2*SWs)*(1 - 2*SWs))*t*(2*MZs + t - u)*C0(t,0,0,0,0,MZs))/(32.*(CWs*CWs)*(SWs*SWs)*(u*u)) + (ALs*u*(2*MZs - t + u)*C0(u,0,0,0,0,MZs))/(8.*(CWs*CWs)*(t*t)) - (ALs*(1 + cost)*s*D0(((-1 - cost)*s)/2.,0,s,0,0,0,0,0,MWs,MWs))/(16.*(SWs*SWs)) + (ALs*(-2*t - ((1 - 2*SWs)*(1 - 2*SWs)*(t*((2*MZs + t)*(2*MZs + t)) + 2*(MZs*MZs)*u + t*(u*u)))/(4.*(SWs*SWs)*(u*u)))*D0(t,0,s,0,0,0,0,0,MZs,MZs))/(16.*(CWs*CWs)) + (ALs*(((1 - 2*SWs)*(1 - 2*SWs)*u)/(2.*(SWs*SWs)) + (4*MZs*(u*u) + 2*(MZs*MZs)*(t + 2*u) + u*(t*t + u*u))/(t*t))*D0(u,0,s,0,0,0,0,0,MZs,MZs))/(16.*(CWs*CWs));
                        break;
            case AXV:
                res = -(ALs*((1 - 2*SWs)*(1 - 2*SWs)*t - 4*(SWs*SWs)*u)*B0fin(s,MZs,MZs))/(32.*(CWs*CWs)*(SWs*SWs)*t*u) + (ALs*((1 - 2*SWs)*(1 - 2*SWs))*B0fin(t,0,0))/(32.*(CWs*CWs)*(SWs*SWs)*u) - (ALs*B0fin(u,0,0))/(8.*(CWs*CWs)*t) - (ALs*C0(0,s,0,0,MWs,MWs))/(4.*(SWs*SWs)) + (ALs*((1 - 2*SWs)*(1 - 2*SWs)*(t*t)*(-2*MZs*s + t*t) + (8*MZs*s*(SWs*SWs) + (-1 + 4*SWs)*(t*t))*(u*u) - 4*(SWs*SWs)*(u*u*u*u))*C0(0,s,0,0,MZs,MZs))/ (32.*(CWs*CWs)*(SWs*SWs)*(t*t)*(u*u)) - (ALs*((1 - 2*SWs)*(1 - 2*SWs))*t*(2*MZs + t - u)*C0(t,0,0,0,0,MZs))/(32.*(CWs*CWs)*(SWs*SWs)*(u*u)) + (ALs*u*(2*MZs - t + u)*C0(u,0,0,0,0,MZs))/(8.*(CWs*CWs)*(t*t)) - (ALs*(1 + cost)*s*D0(((-1 - cost)*s)/2.,0,s,0,0,0,0,0,MWs,MWs))/(16.*(SWs*SWs)) + (ALs*(-2*t - ((1 - 2*SWs)*(1 - 2*SWs)*(t*((2*MZs + t)*(2*MZs + t)) + 2*(MZs*MZs)*u + t*(u*u)))/(4.*(SWs*SWs)*(u*u)))*D0(t,0,s,0,0,0,0,0,MZs,MZs))/(16.*(CWs*CWs)) + (ALs*((1 - 4*SWs + 6*(SWs*SWs))*(t*t)*u + 8*MZs*(SWs*SWs)*(u*u) + 2*(SWs*SWs)*(u*u*u) + 4*(MZs*MZs)*(SWs*SWs)*(t + 2*u))*D0(u,0,s,0,0,0,0,0,MZs,MZs))/(32.*(CWs*CWs)*(SWs*SWs)*(t*t));
               break;
            }
            break;
        case AXV:
            switch (of1)
            {
            case VEC:
                res = -(ALs*((1 - 2*SWs)*(1 - 2*SWs)*t + 4*(SWs*SWs)*u)*B0fin(s,MZs,MZs))/(32.*(CWs*CWs)*(SWs*SWs)*t*u) + (ALs*((1 - 2*SWs)*(1 - 2*SWs))*B0fin(t,0,0))/(32.*(CWs*CWs)*(SWs*SWs)*u) + (ALs*B0fin(u,0,0))/(8.*(CWs*CWs)*t) - (ALs*C0(0,s,0,0,MWs,MWs))/(4.*(SWs*SWs)) + (ALs*((1 - 2*SWs)*(1 - 2*SWs)*(t*t)*(-2*MZs*s + t*t) - (8*MZs*s*(SWs*SWs) + (1 - 4*SWs + 8*(SWs*SWs))*(t*t))*(u*u) + 4*(SWs*SWs)*(u*u*u*u))*C0(0,s,0,0,MZs,MZs))/ (32.*(CWs*CWs)*(SWs*SWs)*(t*t)*(u*u)) - (ALs*((1 - 2*SWs)*(1 - 2*SWs))*t*(2*MZs + t - u)*C0(t,0,0,0,0,MZs))/(32.*(CWs*CWs)*(SWs*SWs)*(u*u)) + (ALs*(-2*MZs + t - u)*u*C0(u,0,0,0,0,MZs))/(8.*(CWs*CWs)*(t*t)) - (ALs*(1 + cost)*s*D0(((-1 - cost)*s)/2.,0,s,0,0,0,0,0,MWs,MWs))/(16.*(SWs*SWs)) + (ALs*(2*t - ((1 - 2*SWs)*(1 - 2*SWs)*(t*((2*MZs + t)*(2*MZs + t)) + 2*(MZs*MZs)*u + t*(u*u)))/(4.*(SWs*SWs)*(u*u)))*D0(t,0,s,0,0,0,0,0,MZs,MZs))/(16.*(CWs*CWs)) - (ALs*((-1 + 4*SWs - 2*(SWs*SWs))*(t*t)*u + 8*MZs*(SWs*SWs)*(u*u) + 2*(SWs*SWs)*(u*u*u) + 4*(MZs*MZs)*(SWs*SWs)*(t + 2*u))*D0(u,0,s,0,0,0,0,0,MZs,MZs))/(32.*(CWs*CWs)*(SWs*SWs)*(t*t));
                                break;
            case AXV:
                res = -(ALs*((1 - 2*SWs)*(1 - 2*SWs)*t + 4*(SWs*SWs)*u)*B0fin(s,MZs,MZs))/(32.*(CWs*CWs)*(SWs*SWs)*t*u) + (ALs*((1 - 2*SWs)*(1 - 2*SWs))*B0fin(t,0,0))/(32.*(CWs*CWs)*(SWs*SWs)*u) + (ALs*B0fin(u,0,0))/(8.*(CWs*CWs)*t) - (ALs*C0(0,s,0,0,MWs,MWs))/(4.*(SWs*SWs)) + (ALs*((t - u)*(t + u)*((1 - 2*SWs)*(1 - 2*SWs)*(t*t) - 4*(SWs*SWs)*(u*u)) - 2*MZs*s*((1 - 2*SWs)*(1 - 2*SWs)*(t*t) + 4*(SWs*SWs)*(u*u)))*C0(0,s,0,0,MZs,MZs))/ (32.*(CWs*CWs)*(SWs*SWs)*(t*t)*(u*u)) - (ALs*((1 - 2*SWs)*(1 - 2*SWs))*t*(2*MZs + t - u)*C0(t,0,0,0,0,MZs))/(32.*(CWs*CWs)*(SWs*SWs)*(u*u)) + (ALs*(-2*MZs + t - u)*u*C0(u,0,0,0,0,MZs))/(8.*(CWs*CWs)*(t*t)) - (ALs*(1 + cost)*s*D0(((-1 - cost)*s)/2.,0,s,0,0,0,0,0,MWs,MWs))/(16.*(SWs*SWs)) + (ALs*(2*t - ((1 - 2*SWs)*(1 - 2*SWs)*(t*((2*MZs + t)*(2*MZs + t)) + 2*(MZs*MZs)*u + t*(u*u)))/(4.*(SWs*SWs)*(u*u)))*D0(t,0,s,0,0,0,0,0,MZs,MZs))/(16.*(CWs*CWs)) - (ALs*((-1 + 4*SWs - 2*(SWs*SWs))*(t*t)*u + 8*MZs*(SWs*SWs)*(u*u) + 2*(SWs*SWs)*(u*u*u) + 4*(MZs*MZs)*(SWs*SWs)*(t + 2*u))*D0(u,0,s,0,0,0,0,0,MZs,MZs))/(32.*(CWs*CWs)*(SWs*SWs)*(t*t));
                           break;
            }
            break;
        }
        break;
    case UQU:
        switch (if1)
        {
        case VEC:
            switch (of1)
            {
            case VEC:
                res = (4 * AA * ALs * (t * t - u * u) * B0fin(s, 0, 0)) / (9. * s * t * u) - (ALs * AZ * (-3 * s * t + MZs * (3 - 10 * SWs + 16 * (SWs * SWs)) * t + 2 * MZs * (5 - 8 * SWs) * SWs * u + 2 * SWs * (-5 + 8 * SWs) * (t * t - u * u)) * B0fin(s, 0, MZs)) / (18. * CWs * (MZs - s) * SWs * t * u) - (ALs * ((9 - 60 * SWs + 148 * (SWs * SWs) - 160 * (SWs * SWs * SWs) + 128 * (SWs * SWs * SWs * SWs)) * t - 4 * (SWs * SWs) * (13 - 40 * SWs + 32 * (SWs * SWs)) * u) * B0fin(s, MZs, MZs)) / (288. * (CWs * CWs) * (SWs * SWs) * t * u) + (ALs * (9 + 12 * (-5 + 4 * AZ * CWs) * SWs - 4 * (-37 + 40 * AZ * CWs - 32 * AA * (CWs * CWs)) * (SWs * SWs) + 32 * (-5 + 8 * AZ * CWs) * (SWs * SWs * SWs) + 128 * (SWs * SWs * SWs * SWs)) * B0fin(t, 0, 0)) / (288. * (CWs * CWs) * (SWs * SWs) * u) - (ALs * (13 + 32 * AA * (CWs * CWs) - 40 * SWs + 32 * (SWs * SWs) + 8 * AZ * CWs * (-5 + 8 * SWs)) * B0fin(u, 0, 0)) / (72. * (CWs * CWs) * t) - (ALs * C0(0, s, 0, 0, MWs, MWs)) / (4. * (SWs * SWs)) + (ALs * (-2 * MZs * s * (9 - 60 * SWs + 148 * (SWs * SWs) - 160 * (SWs * SWs * SWs) + 128 * (SWs * SWs * SWs * SWs)) * (t * t) + (9 - 60 * SWs + 148 * (SWs * SWs) - 160 * (SWs * SWs * SWs) + 128 * (SWs * SWs * SWs * SWs)) * (t * t * t * t) + 8 * MZs * s * (SWs * SWs) * (13 - 40 * SWs + 32 * (SWs * SWs)) * (u * u) - 3 * (3 - 20 * SWs + 32 * (SWs * SWs)) * (t * t) * (u * u) - 4 * (SWs * SWs) * (13 - 40 * SWs + 32 * (SWs * SWs)) * (u * u * u * u)) * C0(0, s, 0, 0, MZs, MZs)) / (288. * (CWs * CWs) * (SWs * SWs) * (t * t) * (u * u)) + (ALs * t * (-((9 - 60 * SWs + 148 * (SWs * SWs) - 160 * (SWs * SWs * SWs) + 128 * (SWs * SWs * SWs * SWs)) * (2 * MZs + t - u)) - (8 * AZ * CWs * SWs * (3 - 10 * SWs + 16 * (SWs * SWs)) * (MZs * MZs + 2 * MZs * t + t * t - u * u)) / (MZs - s)) * C0(t, 0, 0, 0, 0, MZs)) / (288. * (CWs * CWs) * (SWs * SWs) * (u * u)) + (ALs * u * ((13 - 40 * SWs + 32 * (SWs * SWs)) * (2 * MZs - t + u) + (4 * AZ * CWs * (-5 + 8 * SWs) * (MZs * MZs - t * t + 2 * MZs * u + u * u)) / (MZs - s)) * C0(u, 0, 0, 0, 0, MZs)) / (72. * (CWs * CWs) * (t * t)) + (2 * AA * ALs * (t * t * t * t - u * u * u * u) * (clog2(-s) * clog2(-s))) / (9. * s * (t * t) * (u * u)) - (ALs * AZ * ((3 - 10 * SWs + 16 * (SWs * SWs)) * (t * t * t * t) - 3 * (t * t) * (u * u) + 2 * (5 - 8 * SWs) * SWs * (u * u * u * u) + MZs * MZs * ((3 - 10 * SWs + 16 * (SWs * SWs)) * (t * t) + 2 * (5 - 8 * SWs) * SWs * (u * u)) + MZs * ((6 - 20 * SWs + 32 * (SWs * SWs)) * (t * t * t) + 4 * (5 - 8 * SWs) * SWs * (u * u * u))) * clog2(MZs - s) * clog2(1 - s / MZs)) / (18. * CWs * (MZs - s) * SWs * (t * t) * (u * u)) - (ALs * (1 + cost) * s * D0(((-1 - cost) * s) / 2., 0, s, 0, 0, 0, 0, 0, MWs, MWs)) / (16. * (SWs * SWs)) + (ALs * (-8 * ((3 - 4 * SWs) * (3 - 4 * SWs)) * t - 32 * ((1 - 2 * SWs) * (1 - 2 * SWs)) * t - (64 * (SWs * SWs) * (t * ((2 * MZs + t) * (2 * MZs + t)) + 2 * (MZs * MZs) * u + t * (u * u))) / (u * u) - ((3 - 10 * SWs + 8 * (SWs * SWs)) * (3 - 10 * SWs + 8 * (SWs * SWs)) * (t * ((2 * MZs + t) * (2 * MZs + t)) + 2 * (MZs * MZs) * u + t * (u * u))) / (SWs * SWs * (u * u))) * D0(t, 0, s, 0, 0, 0, 0, 0, MZs, MZs)) / (576. * (CWs * CWs)) + (ALs * (3 * (3 - 20 * SWs + 58 * (SWs * SWs) - 80 * (SWs * SWs * SWs) + 64 * (SWs * SWs * SWs * SWs)) * (t * t) * u + 8 * MZs * (SWs * SWs) * (13 - 40 * SWs + 32 * (SWs * SWs)) * (u * u) + 2 * (SWs * SWs) * (13 - 40 * SWs + 32 * (SWs * SWs)) * (u * u * u) + 4 * (MZs * MZs) * (SWs * SWs) * (13 - 40 * SWs + 32 * (SWs * SWs)) * (t + 2 * u)) * D0(u, 0, s, 0, 0, 0, 0, 0, MZs, MZs)) / (288. * (CWs * CWs) * (SWs * SWs) * (t * t)) - (ALs * AZ * ((3 - 10 * SWs + 16 * (SWs * SWs)) * (t * t * t * t) - 3 * (t * t) * (u * u) + 2 * (5 - 8 * SWs) * SWs * (u * u * u * u) + MZs * MZs * ((3 - 10 * SWs + 16 * (SWs * SWs)) * (t * t) + 2 * (5 - 8 * SWs) * SWs * (u * u)) + MZs * ((6 - 20 * SWs + 32 * (SWs * SWs)) * (t * t * t) + 4 * (5 - 8 * SWs) * SWs * (u * u * u))) * li2(-(s / (MZs - s)))) / (9. * CWs * (MZs - s) * SWs * (t * t) * (u * u)) - (ALs * AZ * (MZs * MZs * (3 - 10 * SWs + 16 * (SWs * SWs)) + 2 * MZs * (3 - 10 * SWs + 16 * (SWs * SWs)) * t + (3 - 10 * SWs + 16 * (SWs * SWs)) * (t * t) + 3 * (1 - 10 * SWs + 16 * (SWs * SWs)) * (u * u)) * li2((MZs + t) / t)) / (36. * CWs * (MZs - s) * SWs * (u * u)) + (ALs * AZ * (MZs * MZs * SWs * (-5 + 8 * SWs) + 3 * (1 - 5 * SWs + 8 * (SWs * SWs)) * (t * t) + 2 * MZs * SWs * (-5 + 8 * SWs) * u + SWs * (-5 + 8 * SWs) * (u * u)) * li2((MZs + u) / u)) / (18. * CWs * (MZs - s) * SWs * (t * t)) - (ALs * AZ * ((3 - 10 * SWs + 16 * (SWs * SWs)) * (t * t * t * t) - 3 * (t * t) * (u * u) + 2 * (5 - 8 * SWs) * SWs * (u * u * u * u) + MZs * MZs * ((3 - 10 * SWs + 16 * (SWs * SWs)) * (t * t) + 2 * (5 - 8 * SWs) * SWs * (u * u)) + MZs * ((6 - 20 * SWs + 32 * (SWs * SWs)) * (t * t * t) + 4 * (5 - 8 * SWs) * SWs * (u * u * u))) * li2c(s / MZs)) / (18. * CWs * (MZs - s) * SWs * (t * t) * (u * u)) - (4 * AA * ALs * clog2(-s) * ((t * t * t * t + 3 * (t * t) * (u * u)) * log(-t) - u * u * (3 * (t * t) + u * u) * log(-u))) / (9. * s * (t * t) * (u * u)) + (ALs * AZ * clog2(1 - s / MZs) * (t * t * (MZs * MZs * (3 - 10 * SWs + 16 * (SWs * SWs)) + 2 * MZs * (3 - 10 * SWs + 16 * (SWs * SWs)) * t + (3 - 10 * SWs + 16 * (SWs * SWs)) * (t * t) + 3 * (1 - 10 * SWs + 16 * (SWs * SWs)) * (u * u)) * log(-t) - 2 * (u * u) * (MZs * MZs * SWs * (-5 + 8 * SWs) + 3 * (1 - 5 * SWs + 8 * (SWs * SWs)) * (t * t) + 2 * MZs * SWs * (-5 + 8 * SWs) * u + SWs * (-5 + 8 * SWs) * (u * u)) * log(-u))) / (18. * CWs * (MZs - s) * SWs * (t * t) * (u * u)) + (ALs * (48 * AA * CWs * (Pi * Pi) * (MZs - s) * SWs * (t * t * t * t) - 48 * AA * CWs * (Pi * Pi) * (MZs - s) * SWs * (u * u * u * u) - AZ * (Pi * Pi) * s * ((3 - 10 * SWs + 16 * (SWs * SWs)) * (t * t * t * t) - 3 * (t * t) * (u * u) + 2 * (5 - 8 * SWs) * SWs * (u * u * u * u) + MZs * MZs * ((3 - 10 * SWs + 16 * (SWs * SWs)) * (t * t) + 2 * (5 - 8 * SWs) * SWs * (u * u)) + MZs * ((6 - 20 * SWs + 32 * (SWs * SWs)) * (t * t * t) + 4 * (5 - 8 * SWs) * SWs * (u * u * u))) - 3 * AZ * s * ((3 - 10 * SWs + 16 * (SWs * SWs)) * (t * t * t * t) - 3 * (t * t) * (u * u) + 2 * (5 - 8 * SWs) * SWs * (u * u * u * u) + MZs * MZs * ((3 - 10 * SWs + 16 * (SWs * SWs)) * (t * t) + 2 * (5 - 8 * SWs) * SWs * (u * u)) + MZs * ((6 - 20 * SWs + 32 * (SWs * SWs)) * (t * t * t) + 4 * (5 - 8 * SWs) * SWs * (u * u * u))) * (log(MZs) * log(MZs)) + 48 * AA * CWs * (MZs - s) * SWs * (t * t * t * t) * (log(-t) * log(-t)) - 48 * AA * CWs * (MZs - s) * SWs * (t * t) * (u * u) * (log(-t) * log(-t)) - 3 * AZ * s * (3 - 10 * SWs + 16 * (SWs * SWs)) * (t * t) * (MZs * MZs + 2 * MZs * t + t * t - u * u) * (log(-t) * log(-t)) + 48 * AA * CWs * (MZs - s) * SWs * (t * t) * (u * u) * (log(-u) * log(-u)) - 48 * AA * CWs * (MZs - s) * SWs * (u * u * u * u) * (log(-u) * log(-u)) + 6 * AZ * s * SWs * (-5 + 8 * SWs) * (u * u) * (MZs * MZs - t * t + 2 * MZs * u + u * u) * (log(-u) * log(-u)) + 6 * AZ * s * log(MZs) * (t * t * (MZs * MZs * (3 - 10 * SWs + 16 * (SWs * SWs)) + 2 * MZs * (3 - 10 * SWs + 16 * (SWs * SWs)) * t + (3 - 10 * SWs + 16 * (SWs * SWs)) * (t * t) + 3 * (1 - 10 * SWs + 16 * (SWs * SWs)) * (u * u)) * log(-t) - 2 * (u * u) * (MZs * MZs * SWs * (-5 + 8 * SWs) + 3 * (1 - 5 * SWs + 8 * (SWs * SWs)) * (t * t) + 2 * MZs * SWs * (-5 + 8 * SWs) * u + SWs * (-5 + 8 * SWs) * (u * u)) * log(-u)) - 6 * AZ * s * (3 - 20 * SWs + 32 * (SWs * SWs)) * (t * t) * (u * u) * log(-t) * (-1 + log(t * u)) + 6 * AZ * s * (3 - 20 * SWs + 32 * (SWs * SWs)) * (t * t) * (u * u) * log(-u) * (-1 + log(t * u)))) / (216. * CWs * (MZs - s) * s * SWs * (t * t) * (u * u)) + (8 * AA * ALs * clog1(t) * (-1 + log(t * u))) / (9. * s) - (8 * AA * ALs * clog1(u) * (-1 + log(t * u))) / (9. * s);
                break;
            case AXV:
                res = (ALs * AZ * ((-3 + 10 * SWs) * t - 2 * SWs * u) * B0fin(s, 0, MZs)) / (18. * CWs * SWs * t * u) + (ALs * ((-9 + 60 * SWs - 148 * (SWs * SWs) + 160 * (SWs * SWs * SWs)) * t + 4 * (5 - 8 * SWs) * (SWs * SWs) * u) * B0fin(s, MZs, MZs)) / (288. * (CWs * CWs) * (SWs * SWs) * t * u) - (ALs * (-3 + 10 * SWs) * (3 + 2 * (-5 + 8 * AZ * CWs) * SWs + 16 * (SWs * SWs)) * B0fin(t, 0, 0)) / (288. * (CWs * CWs) * (SWs * SWs) * u) + (ALs * (-5 + 8 * AZ * CWs + 8 * SWs) * B0fin(u, 0, 0)) / (72. * (CWs * CWs) * t) - (ALs * C0(0, s, 0, 0, MWs, MWs)) / (4. * (SWs * SWs)) + (ALs * (2 * MZs * s * ((-9 + 60 * SWs - 148 * (SWs * SWs) + 160 * (SWs * SWs * SWs)) * (t * t) + 4 * (5 - 8 * SWs) * (SWs * SWs) * (u * u)) - (t * t - u * u) * ((-9 + 60 * SWs - 148 * (SWs * SWs) + 160 * (SWs * SWs * SWs)) * (t * t) + 4 * (SWs * SWs) * (-5 + 8 * SWs) * (u * u))) * C0(0, s, 0, 0, MZs, MZs)) / (288. * (CWs * CWs) * (SWs * SWs) * (t * t) * (u * u)) + (ALs * (-3 + 10 * SWs) * t * ((3 - 10 * SWs + 16 * (SWs * SWs)) * (2 * MZs + t - u) + (8 * AZ * CWs * SWs * (MZs * MZs + 2 * MZs * t + t * t - u * u)) / (MZs - s)) * C0(t, 0, 0, 0, 0, MZs)) / (288. * (CWs * CWs) * (SWs * SWs) * (u * u)) + (ALs * u * ((-5 + 8 * SWs) * (-2 * MZs + t - u) - (4 * AZ * CWs * (MZs * MZs - t * t + 2 * MZs * u + u * u)) / (MZs - s)) * C0(u, 0, 0, 0, 0, MZs)) / (72. * (CWs * CWs) * (t * t)) + (ALs * AZ * (MZs * ((-3 + 10 * SWs) * (t * t) - 2 * SWs * (u * u)) + (t - u) * ((-3 + 10 * SWs) * (t * t) + 2 * SWs * (u * u))) * clog2(MZs - s) * clog2(1 - s / MZs)) / (18. * CWs * SWs * (t * t) * (u * u)) - (ALs * (1 + cost) * s * D0(((-1 - cost) * s) / 2., 0, s, 0, 0, 0, 0, 0, MWs, MWs)) / (16. * (SWs * SWs)) + (ALs * (-8 * ((3 - 4 * SWs) * (3 - 4 * SWs)) * t + 32 * ((1 - 2 * SWs) * (1 - 2 * SWs)) * t + (64 * (SWs * SWs) * (t * ((2 * MZs + t) * (2 * MZs + t)) + 2 * (MZs * MZs) * u + t * (u * u))) / (u * u) - ((3 - 10 * SWs + 8 * (SWs * SWs)) * (3 - 10 * SWs + 8 * (SWs * SWs)) * (t * ((2 * MZs + t) * (2 * MZs + t)) + 2 * (MZs * MZs) * u + t * (u * u))) / (SWs * SWs * (u * u))) * D0(t, 0, s, 0, 0, 0, 0, 0, MZs, MZs)) / (576. * (CWs * CWs)) - (ALs * ((-9 + 60 * SWs - 158 * (SWs * SWs) + 176 * (SWs * SWs * SWs)) * (t * t) * u + 8 * MZs * (SWs * SWs) * (-5 + 8 * SWs) * (u * u) + 2 * (SWs * SWs) * (-5 + 8 * SWs) * (u * u * u) + 4 * (MZs * MZs) * (SWs * SWs) * (-5 + 8 * SWs) * (t + 2 * u)) * D0(u, 0, s, 0, 0, 0, 0, 0, MZs, MZs)) / (288. * (CWs * CWs) * (SWs * SWs) * (t * t)) + (ALs * AZ * (MZs * ((-3 + 10 * SWs) * (t * t) - 2 * SWs * (u * u)) + (t - u) * ((-3 + 10 * SWs) * (t * t) + 2 * SWs * (u * u))) * li2(-(s / (MZs - s)))) / (9. * CWs * SWs * (t * t) * (u * u)) - (ALs * AZ * (MZs * MZs * (3 - 10 * SWs) + MZs * (6 - 20 * SWs) * t + (3 - 10 * SWs) * (t * t) + (3 - 14 * SWs) * (u * u)) * li2((MZs + t) / t)) / (36. * CWs * (MZs - s) * SWs * (u * u)) - (ALs * AZ * (MZs * MZs * SWs + (-3 + 11 * SWs) * (t * t) + 2 * MZs * SWs * u + SWs * (u * u)) * li2((MZs + u) / u)) / (18. * CWs * (MZs - s) * SWs * (t * t)) + (ALs * AZ * (MZs * ((-3 + 10 * SWs) * (t * t) - 2 * SWs * (u * u)) + (t - u) * ((-3 + 10 * SWs) * (t * t) + 2 * SWs * (u * u))) * li2c(s / MZs)) / (18. * CWs * SWs * (t * t) * (u * u)) + (ALs * AZ * clog2(1 - s / MZs) * (t * t * (MZs * MZs * (3 - 10 * SWs) + MZs * (6 - 20 * SWs) * t + (3 - 10 * SWs) * (t * t) + (3 - 14 * SWs) * (u * u)) * log(-t) + 2 * (u * u) * (MZs * MZs * SWs + (-3 + 11 * SWs) * (t * t) + 2 * MZs * SWs * u + SWs * (u * u)) * log(-u))) / (18. * CWs * (MZs - s) * SWs * (t * t) * (u * u)) - (ALs * AZ * (Pi * Pi * (MZs - s) * (MZs * ((3 - 10 * SWs) * (t * t) + 2 * SWs * (u * u)) - (t - u) * ((-3 + 10 * SWs) * (t * t) + 2 * SWs * (u * u))) + 3 * (MZs - s) * (MZs * ((3 - 10 * SWs) * (t * t) + 2 * SWs * (u * u)) - (t - u) * ((-3 + 10 * SWs) * (t * t) + 2 * SWs * (u * u))) * (log(MZs) * log(MZs)) - 3 * (-3 + 10 * SWs) * (t * t) * (MZs * MZs + 2 * MZs * t + t * t - u * u) * (log(-t) * log(-t)) + 6 * SWs * (u * u) * (MZs * MZs - t * t + 2 * MZs * u + u * u) * (log(-u) * log(-u)) + 6 * log(MZs) * (t * t * (MZs * MZs * (-3 + 10 * SWs) + 2 * MZs * (-3 + 10 * SWs) * t + (-3 + 10 * SWs) * (t * t) + (-3 + 14 * SWs) * (u * u)) * log(-t) - 2 * (u * u) * (MZs * MZs * SWs + (-3 + 11 * SWs) * (t * t) + 2 * MZs * SWs * u + SWs * (u * u)) * log(-u)) - 18 * (-1 + 4 * SWs) * (t * t) * (u * u) * log(-t) * (-1 + log(t * u)) + 18 * (-1 + 4 * SWs) * (t * t) * (u * u) * log(-u) * (-1 + log(t * u)))) / (216. * CWs * (MZs - s) * SWs * (t * t) * (u * u));
                break;
            }
            break;
        case AXV:
            switch (of1)
            {
            case VEC:
                res = (ALs * AZ * ((-3 + 10 * SWs) * t + 2 * SWs * u) * B0fin(s, 0, MZs)) / (18. * CWs * SWs * t * u) + (ALs * ((-9 + 60 * SWs - 148 * (SWs * SWs) + 160 * (SWs * SWs * SWs)) * t + 4 * (SWs * SWs) * (-5 + 8 * SWs) * u) * B0fin(s, MZs, MZs)) / (288. * (CWs * CWs) * (SWs * SWs) * t * u) - (ALs * (-3 + 10 * SWs) * (3 + 2 * (-5 + 8 * AZ * CWs) * SWs + 16 * (SWs * SWs)) * B0fin(t, 0, 0)) / (288. * (CWs * CWs) * (SWs * SWs) * u) - (ALs * (-5 + 8 * AZ * CWs + 8 * SWs) * B0fin(u, 0, 0)) / (72. * (CWs * CWs) * t) - (ALs * C0(0, s, 0, 0, MWs, MWs)) / (4. * (SWs * SWs)) + (ALs * (-((t * t - u * u) * ((-9 + 60 * SWs - 148 * (SWs * SWs) + 160 * (SWs * SWs * SWs)) * (t * t) + 4 * (5 - 8 * SWs) * (SWs * SWs) * (u * u))) + 2 * MZs * s * ((-9 + 60 * SWs - 148 * (SWs * SWs) + 160 * (SWs * SWs * SWs)) * (t * t) + 4 * (SWs * SWs) * (-5 + 8 * SWs) * (u * u))) * C0(0, s, 0, 0, MZs, MZs)) / (288. * (CWs * CWs) * (SWs * SWs) * (t * t) * (u * u)) + (ALs * (-3 + 10 * SWs) * t * ((3 - 10 * SWs + 16 * (SWs * SWs)) * (2 * MZs + t - u) + (8 * AZ * CWs * SWs * (MZs * MZs + 2 * MZs * t + t * t - u * u)) / (MZs - s)) * C0(t, 0, 0, 0, 0, MZs)) / (288. * (CWs * CWs) * (SWs * SWs) * (u * u)) + (ALs * u * ((-5 + 8 * SWs) * (2 * MZs - t + u) + (4 * AZ * CWs * (MZs * MZs - t * t + 2 * MZs * u + u * u)) / (MZs - s)) * C0(u, 0, 0, 0, 0, MZs)) / (72. * (CWs * CWs) * (t * t)) + (ALs * AZ * ((t - u) * ((-3 + 10 * SWs) * (t * t) - 2 * SWs * (u * u)) + MZs * ((-3 + 10 * SWs) * (t * t) + 2 * SWs * (u * u))) * clog2(MZs - s) * clog2(1 - s / MZs)) / (18. * CWs * SWs * (t * t) * (u * u)) - (ALs * (1 + cost) * s * D0(((-1 - cost) * s) / 2., 0, s, 0, 0, 0, 0, 0, MWs, MWs)) / (16. * (SWs * SWs)) + (ALs * (8 * ((3 - 4 * SWs) * (3 - 4 * SWs)) * t - 32 * ((1 - 2 * SWs) * (1 - 2 * SWs)) * t + (64 * (SWs * SWs) * (t * ((2 * MZs + t) * (2 * MZs + t)) + 2 * (MZs * MZs) * u + t * (u * u))) / (u * u) - ((3 - 10 * SWs + 8 * (SWs * SWs)) * (3 - 10 * SWs + 8 * (SWs * SWs)) * (t * ((2 * MZs + t) * (2 * MZs + t)) + 2 * (MZs * MZs) * u + t * (u * u))) / (SWs * SWs * (u * u))) * D0(t, 0, s, 0, 0, 0, 0, 0, MZs, MZs)) / (576. * (CWs * CWs)) + (ALs * (-3 * (-3 + 20 * SWs - 46 * (SWs * SWs) + 48 * (SWs * SWs * SWs)) * (t * t) * u + 8 * MZs * (SWs * SWs) * (-5 + 8 * SWs) * (u * u) + 2 * (SWs * SWs) * (-5 + 8 * SWs) * (u * u * u) + 4 * (MZs * MZs) * (SWs * SWs) * (-5 + 8 * SWs) * (t + 2 * u)) * D0(u, 0, s, 0, 0, 0, 0, 0, MZs, MZs)) / (288. * (CWs * CWs) * (SWs * SWs) * (t * t)) + (ALs * AZ * ((t - u) * ((-3 + 10 * SWs) * (t * t) - 2 * SWs * (u * u)) + MZs * ((-3 + 10 * SWs) * (t * t) + 2 * SWs * (u * u))) * li2(-(s / (MZs - s)))) / (9. * CWs * SWs * (t * t) * (u * u)) - (ALs * AZ * (MZs * MZs * (3 - 10 * SWs) + MZs * (6 - 20 * SWs) * t + (3 - 10 * SWs) * (t * t) + 3 * (1 - 2 * SWs) * (u * u)) * li2((MZs + t) / t)) / (36. * CWs * (MZs - s) * SWs * (u * u)) + (ALs * AZ * (MZs * MZs * SWs + (3 - 9 * SWs) * (t * t) + 2 * MZs * SWs * u + SWs * (u * u)) * li2((MZs + u) / u)) / (18. * CWs * (MZs - s) * SWs * (t * t)) + (ALs * AZ * ((t - u) * ((-3 + 10 * SWs) * (t * t) - 2 * SWs * (u * u)) + MZs * ((-3 + 10 * SWs) * (t * t) + 2 * SWs * (u * u))) * li2c(s / MZs)) / (18. * CWs * SWs * (t * t) * (u * u)) - (ALs * AZ * clog2(1 - s / MZs) * (t * t * (MZs * MZs * (-3 + 10 * SWs) + 2 * MZs * (-3 + 10 * SWs) * t + (-3 + 10 * SWs) * (t * t) + 3 * (-1 + 2 * SWs) * (u * u)) * log(-t) + 2 * (u * u) * (MZs * MZs * SWs + (3 - 9 * SWs) * (t * t) + 2 * MZs * SWs * u + SWs * (u * u)) * log(-u))) / (18. * CWs * (MZs - s) * SWs * (t * t) * (u * u)) + (ALs * AZ * (Pi * Pi * (MZs - s) * ((t - u) * ((-3 + 10 * SWs) * (t * t) - 2 * SWs * (u * u)) + MZs * ((-3 + 10 * SWs) * (t * t) + 2 * SWs * (u * u))) + 3 * (MZs - s) * ((t - u) * ((-3 + 10 * SWs) * (t * t) - 2 * SWs * (u * u)) + MZs * ((-3 + 10 * SWs) * (t * t) + 2 * SWs * (u * u))) * (log(MZs) * log(MZs)) + 3 * (-3 + 10 * SWs) * (t * t) * (MZs * MZs + 2 * MZs * t + t * t - u * u) * (log(-t) * log(-t)) + 6 * SWs * (u * u) * (MZs * MZs - t * t + 2 * MZs * u + u * u) * (log(-u) * log(-u)) - 6 * log(MZs) * (t * t * (MZs * MZs * (-3 + 10 * SWs) + 2 * MZs * (-3 + 10 * SWs) * t + (-3 + 10 * SWs) * (t * t) + 3 * (-1 + 2 * SWs) * (u * u)) * log(-t) + 2 * (u * u) * (MZs * MZs * SWs + (3 - 9 * SWs) * (t * t) + 2 * MZs * SWs * u + SWs * (u * u)) * log(-u)) + 6 * (-3 + 8 * SWs) * (t * t) * (u * u) * log(-t) * (-1 + log(t * u)) - 6 * (-3 + 8 * SWs) * (t * t) * (u * u) * log(-u) * (-1 + log(t * u)))) / (216. * CWs * (MZs - s) * SWs * (t * t) * (u * u));
                break;
            case AXV:
                res = (4 * AA * ALs * s * B0fin(s, 0, 0)) / (9. * t * u) + (ALs * AZ * (2 * s * SWs * (-5 + 8 * SWs) - 3 * t) * B0fin(s, 0, MZs)) / (18. * CWs * SWs * t * u) - (ALs * ((9 - 60 * SWs + 148 * (SWs * SWs) - 160 * (SWs * SWs * SWs) + 128 * (SWs * SWs * SWs * SWs)) * t + 4 * (SWs * SWs) * (13 - 40 * SWs + 32 * (SWs * SWs)) * u) * B0fin(s, MZs, MZs)) / (288. * (CWs * CWs) * (SWs * SWs) * t * u) + (ALs * (9 + 12 * (-5 + 4 * AZ * CWs) * SWs - 4 * (-37 + 40 * AZ * CWs - 32 * AA * (CWs * CWs)) * (SWs * SWs) + 32 * (-5 + 8 * AZ * CWs) * (SWs * SWs * SWs) + 128 * (SWs * SWs * SWs * SWs)) * B0fin(t, 0, 0)) / (288. * (CWs * CWs) * (SWs * SWs) * u) + (ALs * (13 + 32 * AA * (CWs * CWs) - 40 * SWs + 32 * (SWs * SWs) + 8 * AZ * CWs * (-5 + 8 * SWs)) * B0fin(u, 0, 0)) / (72. * (CWs * CWs) * t) - (ALs * C0(0, s, 0, 0, MWs, MWs)) / (4. * (SWs * SWs)) + (ALs * ((t * t - u * u) * ((9 - 60 * SWs + 148 * (SWs * SWs) - 160 * (SWs * SWs * SWs) + 128 * (SWs * SWs * SWs * SWs)) * (t * t) - 4 * (SWs * SWs) * (13 - 40 * SWs + 32 * (SWs * SWs)) * (u * u)) - 2 * MZs * s * ((9 - 60 * SWs + 148 * (SWs * SWs) - 160 * (SWs * SWs * SWs) + 128 * (SWs * SWs * SWs * SWs)) * (t * t) + 4 * (SWs * SWs) * (13 - 40 * SWs + 32 * (SWs * SWs)) * (u * u))) * C0(0, s, 0, 0, MZs, MZs)) / (288. * (CWs * CWs) * (SWs * SWs) * (t * t) * (u * u)) + (ALs * t * (-((9 - 60 * SWs + 148 * (SWs * SWs) - 160 * (SWs * SWs * SWs) + 128 * (SWs * SWs * SWs * SWs)) * (2 * MZs + t - u)) - (8 * AZ * CWs * SWs * (3 - 10 * SWs + 16 * (SWs * SWs)) * (MZs * MZs + 2 * MZs * t + t * t - u * u)) / (MZs - s)) * C0(t, 0, 0, 0, 0, MZs)) / (288. * (CWs * CWs) * (SWs * SWs) * (u * u)) + (ALs * u * ((13 - 40 * SWs + 32 * (SWs * SWs)) * (-2 * MZs + t - u) - (4 * AZ * CWs * (-5 + 8 * SWs) * (MZs * MZs - t * t + 2 * MZs * u + u * u)) / (MZs - s)) * C0(u, 0, 0, 0, 0, MZs)) / (72. * (CWs * CWs) * (t * t)) + (2 * AA * ALs * s * ((t - u) * (t - u)) * (clog2(-s) * clog2(-s))) / (9. * (t * t) * (u * u)) - (ALs * AZ * ((t * t - u * u) * ((3 - 10 * SWs + 16 * (SWs * SWs)) * (t * t) + 2 * (5 - 8 * SWs) * SWs * (u * u)) + MZs * MZs * ((3 - 10 * SWs + 16 * (SWs * SWs)) * (t * t) + 2 * SWs * (-5 + 8 * SWs) * (u * u)) + MZs * (6 * (t * t * t) - 4 * s * SWs * (-5 + 8 * SWs) * (t * t - t * u + u * u))) * clog2(MZs - s) * clog2(1 - s / MZs)) / (18. * CWs * (MZs - s) * SWs * (t * t) * (u * u)) - (ALs * (1 + cost) * s * D0(((-1 - cost) * s) / 2., 0, s, 0, 0, 0, 0, 0, MWs, MWs)) / (16. * (SWs * SWs)) + (ALs * (8 * ((3 - 4 * SWs) * (3 - 4 * SWs)) * t + 32 * ((1 - 2 * SWs) * (1 - 2 * SWs)) * t - (64 * (SWs * SWs) * (t * ((2 * MZs + t) * (2 * MZs + t)) + 2 * (MZs * MZs) * u + t * (u * u))) / (u * u) - ((3 - 10 * SWs + 8 * (SWs * SWs)) * (3 - 10 * SWs + 8 * (SWs * SWs)) * (t * ((2 * MZs + t) * (2 * MZs + t)) + 2 * (MZs * MZs) * u + t * (u * u))) / (SWs * SWs * (u * u))) * D0(t, 0, s, 0, 0, 0, 0, 0, MZs, MZs)) / (576. * (CWs * CWs)) - (ALs * ((-9 + 60 * SWs - 122 * (SWs * SWs) + 80 * (SWs * SWs * SWs) - 64 * (SWs * SWs * SWs * SWs)) * (t * t) * u + 8 * MZs * (SWs * SWs) * (13 - 40 * SWs + 32 * (SWs * SWs)) * (u * u) + 2 * (SWs * SWs) * (13 - 40 * SWs + 32 * (SWs * SWs)) * (u * u * u) + 4 * (MZs * MZs) * (SWs * SWs) * (13 - 40 * SWs + 32 * (SWs * SWs)) * (t + 2 * u)) * D0(u, 0, s, 0, 0, 0, 0, 0, MZs, MZs)) / (288. * (CWs * CWs) * (SWs * SWs) * (t * t)) - (ALs * AZ * ((t * t - u * u) * ((3 - 10 * SWs + 16 * (SWs * SWs)) * (t * t) + 2 * (5 - 8 * SWs) * SWs * (u * u)) + MZs * MZs * ((3 - 10 * SWs + 16 * (SWs * SWs)) * (t * t) + 2 * SWs * (-5 + 8 * SWs) * (u * u)) + MZs * (6 * (t * t * t) - 4 * s * SWs * (-5 + 8 * SWs) * (t * t - t * u + u * u))) * li2(-(s / (MZs - s)))) / (9. * CWs * (MZs - s) * SWs * (t * t) * (u * u)) - (ALs * AZ * (MZs * MZs * (3 - 10 * SWs + 16 * (SWs * SWs)) + 2 * MZs * (3 - 10 * SWs + 16 * (SWs * SWs)) * t + (3 - 10 * SWs + 16 * (SWs * SWs)) * (t * t) + (3 + 10 * SWs - 16 * (SWs * SWs)) * (u * u)) * li2((MZs + t) / t)) / (36. * CWs * (MZs - s) * SWs * (u * u)) - (ALs * AZ * (MZs * MZs * SWs * (-5 + 8 * SWs) + (-3 + 5 * SWs - 8 * (SWs * SWs)) * (t * t) + 2 * MZs * SWs * (-5 + 8 * SWs) * u + SWs * (-5 + 8 * SWs) * (u * u)) * li2((MZs + u) / u)) / (18. * CWs * (MZs - s) * SWs * (t * t)) - (ALs * AZ * ((t * t - u * u) * ((3 - 10 * SWs + 16 * (SWs * SWs)) * (t * t) + 2 * (5 - 8 * SWs) * SWs * (u * u)) + MZs * MZs * ((3 - 10 * SWs + 16 * (SWs * SWs)) * (t * t) + 2 * SWs * (-5 + 8 * SWs) * (u * u)) + MZs * (6 * (t * t * t) - 4 * s * SWs * (-5 + 8 * SWs) * (t * t - t * u + u * u))) * li2c(s / MZs)) / (18. * CWs * (MZs - s) * SWs * (t * t) * (u * u)) + (4 * AA * ALs * (t - u) * clog2(-s) * (t * t * log(-t) - u * u * log(-u))) / (9. * (t * t) * (u * u)) + (ALs * AZ * clog2(1 - s / MZs) * (t * t * (MZs * MZs * (3 - 10 * SWs + 16 * (SWs * SWs)) + 2 * MZs * (3 - 10 * SWs + 16 * (SWs * SWs)) * t + (3 - 10 * SWs + 16 * (SWs * SWs)) * (t * t) + (3 + 10 * SWs - 16 * (SWs * SWs)) * (u * u)) * log(-t) + 2 * (u * u) * (MZs * MZs * SWs * (-5 + 8 * SWs) + (-3 + 5 * SWs - 8 * (SWs * SWs)) * (t * t) + 2 * MZs * SWs * (-5 + 8 * SWs) * u + SWs * (-5 + 8 * SWs) * (u * u)) * log(-u))) / (18. * CWs * (MZs - s) * SWs * (t * t) * (u * u)) + (ALs * (48 * AA * CWs * (Pi * Pi) * (MZs - s) * s * SWs * (t * t) - 96 * AA * CWs * (Pi * Pi) * (MZs - s) * s * SWs * t * u + 48 * AA * CWs * (Pi * Pi) * (MZs - s) * s * SWs * (u * u) - AZ * (Pi * Pi) * ((t * t - u * u) * ((3 - 10 * SWs + 16 * (SWs * SWs)) * (t * t) + 2 * (5 - 8 * SWs) * SWs * (u * u)) + MZs * MZs * ((3 - 10 * SWs + 16 * (SWs * SWs)) * (t * t) + 2 * SWs * (-5 + 8 * SWs) * (u * u)) + MZs * (6 * (t * t * t) - 4 * s * SWs * (-5 + 8 * SWs) * (t * t - t * u + u * u))) - 3 * AZ * ((t * t - u * u) * ((3 - 10 * SWs + 16 * (SWs * SWs)) * (t * t) + 2 * (5 - 8 * SWs) * SWs * (u * u)) + MZs * MZs * ((3 - 10 * SWs + 16 * (SWs * SWs)) * (t * t) + 2 * SWs * (-5 + 8 * SWs) * (u * u)) + MZs * (6 * (t * t * t) - 4 * s * SWs * (-5 + 8 * SWs) * (t * t - t * u + u * u))) * (log(MZs) * log(MZs)) - 48 * AA * CWs * (MZs - s) * SWs * (t * t * t) * (log(-t) * log(-t)) + 48 * AA * CWs * (MZs - s) * SWs * (t * t) * u * (log(-t) * log(-t)) - 3 * AZ * (3 - 10 * SWs + 16 * (SWs * SWs)) * (t * t) * (MZs * MZs + 2 * MZs * t + t * t - u * u) * (log(-t) * log(-t)) + 48 * AA * CWs * (MZs - s) * SWs * t * (u * u) * (log(-u) * log(-u)) - 48 * AA * CWs * (MZs - s) * SWs * (u * u * u) * (log(-u) * log(-u)) + 6 * AZ * (5 - 8 * SWs) * SWs * (u * u) * (MZs * MZs - t * t + 2 * MZs * u + u * u) * (log(-u) * log(-u)) + 6 * AZ * log(MZs) * (t * t * (MZs * MZs * (3 - 10 * SWs + 16 * (SWs * SWs)) + 2 * MZs * (3 - 10 * SWs + 16 * (SWs * SWs)) * t + (3 - 10 * SWs + 16 * (SWs * SWs)) * (t * t) + (3 + 10 * SWs - 16 * (SWs * SWs)) * (u * u)) * log(-t) - 2 * (u * u) * (MZs * MZs * (5 - 8 * SWs) * SWs + (3 - 5 * SWs + 8 * (SWs * SWs)) * (t * t) - 2 * MZs * SWs * (-5 + 8 * SWs) * u + (5 - 8 * SWs) * SWs * (u * u)) * log(-u)) - 18 * AZ * (t * t) * (u * u) * log(-t) * (-1 + log(t * u)) + 18 * AZ * (t * t) * (u * u) * log(-u) * (-1 + log(t * u)))) / (216. * CWs * (MZs - s) * SWs * (t * t) * (u * u));
                break;
            }
            break;
        }
        break;
    case DQU:
        switch (if1)
        {
        case VEC:
            switch (of1)
            {
            case VEC:
                res = (AA * ALs * (t * t - u * u) * B0fin(s, 0, 0)) / (9. * s * t * u) + (ALs * AZ * (3 * s * t + MZs * (-3 + 8 * SWs - 8 * (SWs * SWs)) * t + 8 * MZs * (-1 + SWs) * SWs * u - 8 * (-1 + SWs) * SWs * (t * t - u * u)) * B0fin(s, 0, MZs)) / (36. * CWs * (MZs - s) * SWs * t * u) + (ALs * B0fin(s, MWs, MWs)) / (4. * (1 + cost) * s * (SWs * SWs)) - (ALs * ((9 - 48 * SWs + 88 * (SWs * SWs) - 64 * (SWs * SWs * SWs) + 32 * (SWs * SWs * SWs * SWs)) * t - 8 * (SWs * SWs) * (5 - 8 * SWs + 4 * (SWs * SWs)) * u) * B0fin(s, MZs, MZs)) / (288. * (CWs * CWs) * (SWs * SWs) * t * u) - (ALs * B0fin(((-1 + cost) * s) / 2., 0, 0)) / (4. * (1 + cost) * s * (SWs * SWs)) + (ALs * (9 + 24 * (-2 + AZ * CWs) * SWs + 8 * (11 - 8 * AZ * CWs + 4 * AA * (CWs * CWs)) * (SWs * SWs) + 64 * (-1 + AZ * CWs) * (SWs * SWs * SWs) + 32 * (SWs * SWs * SWs * SWs)) * B0fin(t, 0, 0)) / (288. * (CWs * CWs) * (SWs * SWs) * u) - (ALs * (5 + 4 * AA * (CWs * CWs) + 8 * AZ * CWs * (-1 + SWs) - 8 * SWs + 4 * (SWs * SWs)) * B0fin(u, 0, 0)) / (36. * (CWs * CWs) * t) + (ALs * (-4 * MWs + s + cost * cost * s) * C0(0, s, 0, 0, MWs, MWs)) / (4. * ((1 + cost) * (1 + cost)) * s * (SWs * SWs)) + (ALs * ((9 - 48 * SWs + 88 * (SWs * SWs) - 64 * (SWs * SWs * SWs) + 32 * (SWs * SWs * SWs * SWs)) * (t * t * t * t) - 3 * (3 - 16 * SWs + 16 * (SWs * SWs)) * (t * t) * (u * u) - 8 * (SWs * SWs) * (5 - 8 * SWs + 4 * (SWs * SWs)) * (u * u * u * u) - 2 * MZs * s * ((9 - 48 * SWs + 88 * (SWs * SWs) - 64 * (SWs * SWs * SWs) + 32 * (SWs * SWs * SWs * SWs)) * (t * t) - 8 * (SWs * SWs) * (5 - 8 * SWs + 4 * (SWs * SWs)) * (u * u))) * C0(0, s, 0, 0, MZs, MZs)) / (288. * (CWs * CWs) * (SWs * SWs) * (t * t) * (u * u)) - (ALs * (-1 + cost) * (2 * MWs + cost * s) * C0(((-1 + cost) * s) / 2., 0, 0, 0, 0, MWs)) / (4. * ((1 + cost) * (1 + cost)) * s * (SWs * SWs)) + (ALs * t * (-((9 - 48 * SWs + 88 * (SWs * SWs) - 64 * (SWs * SWs * SWs) + 32 * (SWs * SWs * SWs * SWs)) * (2 * MZs + t - u)) - (4 * AZ * CWs * SWs * (3 - 8 * SWs + 8 * (SWs * SWs)) * (MZs * MZs + 2 * MZs * t + t * t - u * u)) / (MZs - s)) * C0(t, 0, 0, 0, 0, MZs)) / (288. * (CWs * CWs) * (SWs * SWs) * (u * u)) + (ALs * u * ((5 - 8 * SWs + 4 * (SWs * SWs)) * (2 * MZs - t + u) + (4 * AZ * CWs * (-1 + SWs) * (MZs * MZs - t * t + 2 * MZs * u + u * u)) / (MZs - s)) * C0(u, 0, 0, 0, 0, MZs)) / (36. * (CWs * CWs) * (t * t)) - (ALs * AZ * ((3 - 8 * SWs + 8 * (SWs * SWs)) * (t * t * t * t) - 3 * (t * t) * (u * u) - 8 * (-1 + SWs) * SWs * (u * u * u * u) + MZs * MZs * ((3 - 8 * SWs + 8 * (SWs * SWs)) * (t * t) - 8 * (-1 + SWs) * SWs * (u * u)) + 2 * MZs * ((3 - 8 * SWs + 8 * (SWs * SWs)) * (t * t * t) - 8 * (-1 + SWs) * SWs * (u * u * u))) * clog2(MZs - s) * clog2(1 - s / MZs)) / (36. * CWs * (MZs - s) * SWs * (t * t) * (u * u)) + (AA * ALs * (t * t) * (clog2(s / t) * clog2(s / t))) / (18. * s * (u * u)) - (AA * ALs * (u * u) * (clog2(s / u) * clog2(s / u))) / (18. * s * (t * t)) - (ALs * (4 * (-3 + cost) * (MWs * MWs) + 4 * ((-1 + cost) * (-1 + cost)) * MWs * s + (-1 + cost - cost * cost + cost * cost * cost) * (s * s)) * D0(((-1 + cost) * s) / 2., 0, s, 0, 0, 0, 0, 0, MWs, MWs)) / (16. * ((1 + cost) * (1 + cost)) * s * (SWs * SWs)) + (ALs * (-8 * ((1 - 2 * SWs) * (1 - 2 * SWs)) * t - 8 * ((3 - 2 * SWs) * (3 - 2 * SWs)) * t - (16 * (SWs * SWs) * (t * ((2 * MZs + t) * (2 * MZs + t)) + 2 * (MZs * MZs) * u + t * (u * u))) / (u * u) - ((3 - 8 * SWs + 4 * (SWs * SWs)) * (3 - 8 * SWs + 4 * (SWs * SWs)) * (4 * MZs * (t * t) + 2 * (MZs * MZs) * (2 * t + u) + t * (t * t + u * u))) / (SWs * SWs * (u * u))) * D0(t, 0, s, 0, 0, 0, 0, 0, MZs, MZs)) / (576. * (CWs * CWs)) + (ALs * (3 * (3 - 16 * SWs + 36 * (SWs * SWs) - 32 * (SWs * SWs * SWs) + 16 * (SWs * SWs * SWs * SWs)) * (t * t) * u + 16 * MZs * (SWs * SWs) * (5 - 8 * SWs + 4 * (SWs * SWs)) * (u * u) + 4 * (SWs * SWs) * (5 - 8 * SWs + 4 * (SWs * SWs)) * (u * u * u) + 8 * (MZs * MZs) * (SWs * SWs) * (5 - 8 * SWs + 4 * (SWs * SWs)) * (t + 2 * u)) * D0(u, 0, s, 0, 0, 0, 0, 0, MZs, MZs)) / (288. * (CWs * CWs) * (SWs * SWs) * (t * t)) - (ALs * AZ * ((3 - 8 * SWs + 8 * (SWs * SWs)) * (t * t * t * t) - 3 * (t * t) * (u * u) - 8 * (-1 + SWs) * SWs * (u * u * u * u) + MZs * MZs * ((3 - 8 * SWs + 8 * (SWs * SWs)) * (t * t) - 8 * (-1 + SWs) * SWs * (u * u)) + 2 * MZs * ((3 - 8 * SWs + 8 * (SWs * SWs)) * (t * t * t) - 8 * (-1 + SWs) * SWs * (u * u * u))) * li2(-(s / (MZs - s)))) / (18. * CWs * (MZs - s) * SWs * (t * t) * (u * u)) - (ALs * AZ * (MZs * MZs * (3 - 8 * SWs + 8 * (SWs * SWs)) + 2 * MZs * (3 - 8 * SWs + 8 * (SWs * SWs)) * t + (3 - 8 * SWs + 8 * (SWs * SWs)) * (t * t) + 3 * (1 - 8 * SWs + 8 * (SWs * SWs)) * (u * u)) * li2((MZs + t) / t)) / (72. * CWs * (MZs - s) * SWs * (u * u)) + (ALs * AZ * (4 * (MZs * MZs) * (-1 + SWs) * SWs + 3 * ((1 - 2 * SWs) * (1 - 2 * SWs)) * (t * t) + 8 * MZs * (-1 + SWs) * SWs * u + 4 * (-1 + SWs) * SWs * (u * u)) * li2((MZs + u) / u)) / (36. * CWs * (MZs - s) * SWs * (t * t)) - (ALs * AZ * ((3 - 8 * SWs + 8 * (SWs * SWs)) * (t * t * t * t) - 3 * (t * t) * (u * u) - 8 * (-1 + SWs) * SWs * (u * u * u * u) + MZs * MZs * ((3 - 8 * SWs + 8 * (SWs * SWs)) * (t * t) - 8 * (-1 + SWs) * SWs * (u * u)) + 2 * MZs * ((3 - 8 * SWs + 8 * (SWs * SWs)) * (t * t * t) - 8 * (-1 + SWs) * SWs * (u * u * u))) * li2c(s / MZs)) / (36. * CWs * (MZs - s) * SWs * (t * t) * (u * u)) + (ALs * AZ * clog2(1 - s / MZs) * (t * t * (MZs * MZs * (3 - 8 * SWs + 8 * (SWs * SWs)) + 2 * MZs * (3 - 8 * SWs + 8 * (SWs * SWs)) * t + (3 - 8 * SWs + 8 * (SWs * SWs)) * (t * t) + 3 * (1 - 8 * SWs + 8 * (SWs * SWs)) * (u * u)) * log(-t) - 2 * (u * u) * (4 * (MZs * MZs) * (-1 + SWs) * SWs + 3 * ((1 - 2 * SWs) * (1 - 2 * SWs)) * (t * t) + 8 * MZs * (-1 + SWs) * SWs * u + 4 * (-1 + SWs) * SWs * (u * u)) * log(-u))) / (36. * CWs * (MZs - s) * SWs * (t * t) * (u * u)) + (ALs * (24 * AA * CWs * (Pi * Pi) * (MZs - s) * SWs * (t * t * t * t) - 24 * AA * CWs * (Pi * Pi) * (MZs - s) * SWs * (u * u * u * u) - AZ * (Pi * Pi) * s * ((3 - 8 * SWs + 8 * (SWs * SWs)) * (t * t * t * t) - 3 * (t * t) * (u * u) - 8 * (-1 + SWs) * SWs * (u * u * u * u) + MZs * MZs * ((3 - 8 * SWs + 8 * (SWs * SWs)) * (t * t) - 8 * (-1 + SWs) * SWs * (u * u)) + 2 * MZs * ((3 - 8 * SWs + 8 * (SWs * SWs)) * (t * t * t) - 8 * (-1 + SWs) * SWs * (u * u * u))) - 3 * AZ * s * ((3 - 8 * SWs + 8 * (SWs * SWs)) * (t * t * t * t) - 3 * (t * t) * (u * u) - 8 * (-1 + SWs) * SWs * (u * u * u * u) + MZs * MZs * ((3 - 8 * SWs + 8 * (SWs * SWs)) * (t * t) - 8 * (-1 + SWs) * SWs * (u * u)) + 2 * MZs * ((3 - 8 * SWs + 8 * (SWs * SWs)) * (t * t * t) - 8 * (-1 + SWs) * SWs * (u * u * u))) * (log(MZs) * log(MZs)) - 3 * AZ * s * (3 - 8 * SWs + 8 * (SWs * SWs)) * (t * t) * (MZs * MZs + 2 * MZs * t + t * t - u * u) * (log(-t) * log(-t)) + 24 * AZ * s * (-1 + SWs) * SWs * (u * u) * (MZs * MZs - t * t + 2 * MZs * u + u * u) * (log(-u) * log(-u)) + 6 * AZ * s * log(MZs) * (t * t * (MZs * MZs * (3 - 8 * SWs + 8 * (SWs * SWs)) + 2 * MZs * (3 - 8 * SWs + 8 * (SWs * SWs)) * t + (3 - 8 * SWs + 8 * (SWs * SWs)) * (t * t) + 3 * (1 - 8 * SWs + 8 * (SWs * SWs)) * (u * u)) * log(-t) - 2 * (u * u) * (4 * (MZs * MZs) * (-1 + SWs) * SWs + 3 * ((1 - 2 * SWs) * (1 - 2 * SWs)) * (t * t) + 8 * MZs * (-1 + SWs) * SWs * u + 4 * (-1 + SWs) * SWs * (u * u)) * log(-u)) - 6 * AZ * s * (3 - 16 * SWs + 16 * (SWs * SWs)) * (t * t) * (u * u) * log(-t) * (-1 + log(t * u)) + 6 * AZ * s * (3 - 16 * SWs + 16 * (SWs * SWs)) * (t * t) * (u * u) * log(-u) * (-1 + log(t * u)) + 24 * AA * CWs * (MZs - s) * SWs * (t * t) * (u * u) * log(t / u) * (-4 + 3 * log(t * u) - 6 * clog2(-s)))) / (432. * CWs * (MZs - s) * s * SWs * (t * t) * (u * u));
                break;
            case AXV:
                res = (ALs * AZ * ((-3 + 8 * SWs) * t - 4 * SWs * u) * B0fin(s, 0, MZs)) / (36. * CWs * SWs * t * u) + (ALs * B0fin(s, MWs, MWs)) / (4. * (1 + cost) * s * (SWs * SWs)) + (ALs * ((-9 + 48 * SWs - 88 * (SWs * SWs) + 64 * (SWs * SWs * SWs)) * t - 32 * (-1 + SWs) * (SWs * SWs) * u) * B0fin(s, MZs, MZs)) / (288. * (CWs * CWs) * (SWs * SWs) * t * u) - (ALs * B0fin(((-1 + cost) * s) / 2., 0, 0)) / (4. * (1 + cost) * s * (SWs * SWs)) - (ALs * (-3 + 8 * SWs) * (3 + 8 * (-1 + AZ * CWs) * SWs + 8 * (SWs * SWs)) * B0fin(t, 0, 0)) / (288. * (CWs * CWs) * (SWs * SWs) * u) + (ALs * (-1 + AZ * CWs + SWs) * B0fin(u, 0, 0)) / (9. * (CWs * CWs) * t) + (ALs * (-4 * MWs + s + cost * cost * s) * C0(0, s, 0, 0, MWs, MWs)) / (4. * ((1 + cost) * (1 + cost)) * s * (SWs * SWs)) + (ALs * (2 * MZs * s * ((-9 + 48 * SWs - 88 * (SWs * SWs) + 64 * (SWs * SWs * SWs)) * (t * t) - 32 * (-1 + SWs) * (SWs * SWs) * (u * u)) - (t * t - u * u) * ((-9 + 48 * SWs - 88 * (SWs * SWs) + 64 * (SWs * SWs * SWs)) * (t * t) + 32 * (-1 + SWs) * (SWs * SWs) * (u * u))) * C0(0, s, 0, 0, MZs, MZs)) / (288. * (CWs * CWs) * (SWs * SWs) * (t * t) * (u * u)) - (ALs * (-1 + cost) * (2 * MWs + cost * s) * C0(((-1 + cost) * s) / 2., 0, 0, 0, 0, MWs)) / (4. * ((1 + cost) * (1 + cost)) * s * (SWs * SWs)) + (ALs * (-3 + 8 * SWs) * t * ((3 - 8 * SWs + 8 * (SWs * SWs)) * (2 * MZs + t - u) + (4 * AZ * CWs * SWs * (MZs * MZs + 2 * MZs * t + t * t - u * u)) / (MZs - s)) * C0(t, 0, 0, 0, 0, MZs)) / (288. * (CWs * CWs) * (SWs * SWs) * (u * u)) + (ALs * u * (-2 * (-1 + SWs) * (2 * MZs - t + u) - (AZ * CWs * (MZs * MZs - t * t + 2 * MZs * u + u * u)) / (MZs - s)) * C0(u, 0, 0, 0, 0, MZs)) / (18. * (CWs * CWs) * (t * t)) + (ALs * AZ * (MZs * ((-3 + 8 * SWs) * (t * t) - 4 * SWs * (u * u)) + (t - u) * ((-3 + 8 * SWs) * (t * t) + 4 * SWs * (u * u))) * clog2(MZs - s) * clog2(1 - s / MZs)) / (36. * CWs * SWs * (t * t) * (u * u)) + (ALs * (-4 * (-3 + cost) * (MWs * MWs) - 4 * ((-1 + cost) * (-1 + cost)) * MWs * s - (-1 + cost) * (1 + cost * cost) * (s * s)) * D0(((-1 + cost) * s) / 2., 0, s, 0, 0, 0, 0, 0, MWs, MWs)) / (16. * ((1 + cost) * (1 + cost)) * s * (SWs * SWs)) + (ALs * (8 * ((1 - 2 * SWs) * (1 - 2 * SWs)) * t - 8 * ((3 - 2 * SWs) * (3 - 2 * SWs)) * t + (16 * (SWs * SWs) * (t * ((2 * MZs + t) * (2 * MZs + t)) + 2 * (MZs * MZs) * u + t * (u * u))) / (u * u) - ((3 - 8 * SWs + 4 * (SWs * SWs)) * (3 - 8 * SWs + 4 * (SWs * SWs)) * (4 * MZs * (t * t) + 2 * (MZs * MZs) * (2 * t + u) + t * (t * t + u * u))) / (SWs * SWs * (u * u))) * D0(t, 0, s, 0, 0, 0, 0, 0, MZs, MZs)) / (576. * (CWs * CWs)) - (ALs * ((-9 + 48 * SWs - 104 * (SWs * SWs) + 80 * (SWs * SWs * SWs)) * (t * t) * u + 64 * MZs * (-1 + SWs) * (SWs * SWs) * (u * u) + 16 * (-1 + SWs) * (SWs * SWs) * (u * u * u) + 32 * (MZs * MZs) * (-1 + SWs) * (SWs * SWs) * (t + 2 * u)) * D0(u, 0, s, 0, 0, 0, 0, 0, MZs, MZs)) / (288. * (CWs * CWs) * (SWs * SWs) * (t * t)) + (ALs * AZ * (MZs * ((-3 + 8 * SWs) * (t * t) - 4 * SWs * (u * u)) + (t - u) * ((-3 + 8 * SWs) * (t * t) + 4 * SWs * (u * u))) * li2(-(s / (MZs - s)))) / (18. * CWs * SWs * (t * t) * (u * u)) + (ALs * AZ * (MZs * MZs * (-3 + 8 * SWs) + 2 * MZs * (-3 + 8 * SWs) * t + (-3 + 8 * SWs) * (t * t) + (-3 + 16 * SWs) * (u * u)) * li2((MZs + t) / t)) / (72. * CWs * (MZs - s) * SWs * (u * u)) - (ALs * AZ * (2 * (MZs * MZs) * SWs + (-3 + 10 * SWs) * (t * t) + 4 * MZs * SWs * u + 2 * SWs * (u * u)) * li2((MZs + u) / u)) / (36. * CWs * (MZs - s) * SWs * (t * t)) + (ALs * AZ * (MZs * ((-3 + 8 * SWs) * (t * t) - 4 * SWs * (u * u)) + (t - u) * ((-3 + 8 * SWs) * (t * t) + 4 * SWs * (u * u))) * li2c(s / MZs)) / (36. * CWs * SWs * (t * t) * (u * u)) + (ALs * AZ * clog2(1 - s / MZs) * (t * t * (MZs * MZs * (3 - 8 * SWs) + 2 * MZs * (3 - 8 * SWs) * t + (3 - 8 * SWs) * (t * t) + (3 - 16 * SWs) * (u * u)) * log(-t) + 2 * (u * u) * (2 * (MZs * MZs) * SWs + (-3 + 10 * SWs) * (t * t) + 4 * MZs * SWs * u + 2 * SWs * (u * u)) * log(-u))) / (36. * CWs * (MZs - s) * SWs * (t * t) * (u * u)) - (ALs * AZ * (Pi * Pi * (MZs - s) * (MZs * ((3 - 8 * SWs) * (t * t) + 4 * SWs * (u * u)) - (t - u) * ((-3 + 8 * SWs) * (t * t) + 4 * SWs * (u * u))) + 3 * (MZs - s) * (MZs * ((3 - 8 * SWs) * (t * t) + 4 * SWs * (u * u)) - (t - u) * ((-3 + 8 * SWs) * (t * t) + 4 * SWs * (u * u))) * (log(MZs) * log(MZs)) - 3 * (-3 + 8 * SWs) * (t * t) * (MZs * MZs + 2 * MZs * t + t * t - u * u) * (log(-t) * log(-t)) + 12 * SWs * (u * u) * (MZs * MZs - t * t + 2 * MZs * u + u * u) * (log(-u) * log(-u)) + 6 * log(MZs) * (t * t * (MZs * MZs * (-3 + 8 * SWs) + 2 * MZs * (-3 + 8 * SWs) * t + (-3 + 8 * SWs) * (t * t) + (-3 + 16 * SWs) * (u * u)) * log(-t) - 2 * (u * u) * (2 * (MZs * MZs) * SWs + (-3 + 10 * SWs) * (t * t) + 4 * MZs * SWs * u + 2 * SWs * (u * u)) * log(-u)) - 18 * (-1 + 4 * SWs) * (t * t) * (u * u) * log(-t) * (-1 + log(t * u)) + 18 * (-1 + 4 * SWs) * (t * t) * (u * u) * log(-u) * (-1 + log(t * u)))) / (432. * CWs * (MZs - s) * SWs * (t * t) * (u * u));
                break;
            }
            break;
        case AXV:
            switch (of1)
            {
            case VEC:
                res = (ALs * AZ * ((-3 + 8 * SWs) * t + 4 * SWs * u) * B0fin(s, 0, MZs)) / (36. * CWs * SWs * t * u) + (ALs * B0fin(s, MWs, MWs)) / (4. * (1 + cost) * s * (SWs * SWs)) + (ALs * ((-9 + 48 * SWs - 88 * (SWs * SWs) + 64 * (SWs * SWs * SWs)) * t + 32 * (-1 + SWs) * (SWs * SWs) * u) * B0fin(s, MZs, MZs)) / (288. * (CWs * CWs) * (SWs * SWs) * t * u) - (ALs * B0fin(((-1 + cost) * s) / 2., 0, 0)) / (4. * (1 + cost) * s * (SWs * SWs)) - (ALs * (-3 + 8 * SWs) * (3 + 8 * (-1 + AZ * CWs) * SWs + 8 * (SWs * SWs)) * B0fin(t, 0, 0)) / (288. * (CWs * CWs) * (SWs * SWs) * u) - (ALs * (-1 + AZ * CWs + SWs) * B0fin(u, 0, 0)) / (9. * (CWs * CWs) * t) + (ALs * (-4 * MWs + s + cost * cost * s) * C0(0, s, 0, 0, MWs, MWs)) / (4. * ((1 + cost) * (1 + cost)) * s * (SWs * SWs)) + (ALs * (-((t * t - u * u) * ((-9 + 48 * SWs - 88 * (SWs * SWs) + 64 * (SWs * SWs * SWs)) * (t * t) - 32 * (-1 + SWs) * (SWs * SWs) * (u * u))) + 2 * MZs * s * ((-9 + 48 * SWs - 88 * (SWs * SWs) + 64 * (SWs * SWs * SWs)) * (t * t) + 32 * (-1 + SWs) * (SWs * SWs) * (u * u))) * C0(0, s, 0, 0, MZs, MZs)) / (288. * (CWs * CWs) * (SWs * SWs) * (t * t) * (u * u)) - (ALs * (-1 + cost) * (2 * MWs + cost * s) * C0(((-1 + cost) * s) / 2., 0, 0, 0, 0, MWs)) / (4. * ((1 + cost) * (1 + cost)) * s * (SWs * SWs)) + (ALs * (-3 + 8 * SWs) * t * ((3 - 8 * SWs + 8 * (SWs * SWs)) * (2 * MZs + t - u) + (4 * AZ * CWs * SWs * (MZs * MZs + 2 * MZs * t + t * t - u * u)) / (MZs - s)) * C0(t, 0, 0, 0, 0, MZs)) / (288. * (CWs * CWs) * (SWs * SWs) * (u * u)) + (ALs * u * (2 * (-1 + SWs) * (2 * MZs - t + u) + (AZ * CWs * (MZs * MZs - t * t + 2 * MZs * u + u * u)) / (MZs - s)) * C0(u, 0, 0, 0, 0, MZs)) / (18. * (CWs * CWs) * (t * t)) + (ALs * AZ * ((t - u) * ((-3 + 8 * SWs) * (t * t) - 4 * SWs * (u * u)) + MZs * ((-3 + 8 * SWs) * (t * t) + 4 * SWs * (u * u))) * clog2(MZs - s) * clog2(1 - s / MZs)) / (36. * CWs * SWs * (t * t) * (u * u)) + (ALs * (-4 * (-3 + cost) * (MWs * MWs) - 4 * ((-1 + cost) * (-1 + cost)) * MWs * s - (-1 + cost) * (1 + cost * cost) * (s * s)) * D0(((-1 + cost) * s) / 2., 0, s, 0, 0, 0, 0, 0, MWs, MWs)) / (16. * ((1 + cost) * (1 + cost)) * s * (SWs * SWs)) + (ALs * (4 * MZs * (-9 + 48 * SWs - 88 * (SWs * SWs) + 64 * (SWs * SWs * SWs)) * (t * t) + (-9 + 48 * SWs - 88 * (SWs * SWs) + 64 * (SWs * SWs * SWs)) * (t * t * t) - 3 * (3 - 16 * SWs + 8 * (SWs * SWs)) * t * (u * u) + 2 * (MZs * MZs) * (-9 + 48 * SWs - 88 * (SWs * SWs) + 64 * (SWs * SWs * SWs)) * (2 * t + u)) * D0(t, 0, s, 0, 0, 0, 0, 0, MZs, MZs)) / (576. * (CWs * CWs) * (SWs * SWs) * (u * u)) + (ALs * ((9 - 48 * SWs + 72 * (SWs * SWs) - 48 * (SWs * SWs * SWs)) * (t * t) * u + 64 * MZs * (-1 + SWs) * (SWs * SWs) * (u * u) + 16 * (-1 + SWs) * (SWs * SWs) * (u * u * u) + 32 * (MZs * MZs) * (-1 + SWs) * (SWs * SWs) * (t + 2 * u)) * D0(u, 0, s, 0, 0, 0, 0, 0, MZs, MZs)) / (288. * (CWs * CWs) * (SWs * SWs) * (t * t)) + (ALs * AZ * ((t - u) * ((-3 + 8 * SWs) * (t * t) - 4 * SWs * (u * u)) + MZs * ((-3 + 8 * SWs) * (t * t) + 4 * SWs * (u * u))) * li2(-(s / (MZs - s)))) / (18. * CWs * SWs * (t * t) * (u * u)) - (ALs * AZ * (MZs * MZs * (3 - 8 * SWs) + 2 * MZs * (3 - 8 * SWs) * t + (3 - 8 * SWs) * (t * t) + 3 * (u * u)) * li2((MZs + t) / t)) / (72. * CWs * (MZs - s) * SWs * (u * u)) + (ALs * AZ * (2 * (MZs * MZs) * SWs + (3 - 6 * SWs) * (t * t) + 4 * MZs * SWs * u + 2 * SWs * (u * u)) * li2((MZs + u) / u)) / (36. * CWs * (MZs - s) * SWs * (t * t)) + (ALs * AZ * ((t - u) * ((-3 + 8 * SWs) * (t * t) - 4 * SWs * (u * u)) + MZs * ((-3 + 8 * SWs) * (t * t) + 4 * SWs * (u * u))) * li2c(s / MZs)) / (36. * CWs * SWs * (t * t) * (u * u)) - (ALs * AZ * clog2(1 - s / MZs) * (t * t * (MZs * MZs * (-3 + 8 * SWs) + 2 * MZs * (-3 + 8 * SWs) * t + (-3 + 8 * SWs) * (t * t) - 3 * (u * u)) * log(-t) + 2 * (u * u) * (2 * (MZs * MZs) * SWs + (3 - 6 * SWs) * (t * t) + 4 * MZs * SWs * u + 2 * SWs * (u * u)) * log(-u))) / (36. * CWs * (MZs - s) * SWs * (t * t) * (u * u)) + (ALs * AZ * (Pi * Pi * (MZs - s) * ((t - u) * ((-3 + 8 * SWs) * (t * t) - 4 * SWs * (u * u)) + MZs * ((-3 + 8 * SWs) * (t * t) + 4 * SWs * (u * u))) + 3 * (MZs - s) * ((t - u) * ((-3 + 8 * SWs) * (t * t) - 4 * SWs * (u * u)) + MZs * ((-3 + 8 * SWs) * (t * t) + 4 * SWs * (u * u))) * (log(MZs) * log(MZs)) + 3 * (-3 + 8 * SWs) * (t * t) * (MZs * MZs + 2 * MZs * t + t * t - u * u) * (log(-t) * log(-t)) + 12 * SWs * (u * u) * (MZs * MZs - t * t + 2 * MZs * u + u * u) * (log(-u) * log(-u)) - 6 * log(MZs) * (t * t * (MZs * MZs * (-3 + 8 * SWs) + 2 * MZs * (-3 + 8 * SWs) * t + (-3 + 8 * SWs) * (t * t) - 3 * (u * u)) * log(-t) + 2 * (u * u) * (2 * (MZs * MZs) * SWs + (3 - 6 * SWs) * (t * t) + 4 * MZs * SWs * u + 2 * SWs * (u * u)) * log(-u)) + 6 * (-3 + 4 * SWs) * (t * t) * (u * u) * log(-t) * (-1 + log(t * u)) - 6 * (-3 + 4 * SWs) * (t * t) * (u * u) * log(-u) * (-1 + log(t * u)))) / (432. * CWs * (MZs - s) * SWs * (t * t) * (u * u));
                break;
            case AXV:
                res = (AA * ALs * s * B0fin(s, 0, 0)) / (9. * t * u) + (ALs * AZ * (8 * s * (-1 + SWs) * SWs - 3 * t) * B0fin(s, 0, MZs)) / (36. * CWs * SWs * t * u) + (ALs * B0fin(s, MWs, MWs)) / (4. * (1 + cost) * s * (SWs * SWs)) - (ALs * ((9 - 48 * SWs + 88 * (SWs * SWs) - 64 * (SWs * SWs * SWs) + 32 * (SWs * SWs * SWs * SWs)) * t + 8 * (SWs * SWs) * (5 - 8 * SWs + 4 * (SWs * SWs)) * u) * B0fin(s, MZs, MZs)) / (288. * (CWs * CWs) * (SWs * SWs) * t * u) - (ALs * B0fin(((-1 + cost) * s) / 2., 0, 0)) / (4. * (1 + cost) * s * (SWs * SWs)) + (ALs * (9 + 24 * (-2 + AZ * CWs) * SWs + 8 * (11 - 8 * AZ * CWs + 4 * AA * (CWs * CWs)) * (SWs * SWs) + 64 * (-1 + AZ * CWs) * (SWs * SWs * SWs) + 32 * (SWs * SWs * SWs * SWs)) * B0fin(t, 0, 0)) / (288. * (CWs * CWs) * (SWs * SWs) * u) + (ALs * (5 + 4 * AA * (CWs * CWs) + 8 * AZ * CWs * (-1 + SWs) - 8 * SWs + 4 * (SWs * SWs)) * B0fin(u, 0, 0)) / (36. * (CWs * CWs) * t) + (ALs * (-4 * MWs + s + cost * cost * s) * C0(0, s, 0, 0, MWs, MWs)) / (4. * ((1 + cost) * (1 + cost)) * s * (SWs * SWs)) + (ALs * ((t * t - u * u) * ((9 - 48 * SWs + 88 * (SWs * SWs) - 64 * (SWs * SWs * SWs) + 32 * (SWs * SWs * SWs * SWs)) * (t * t) - 8 * (SWs * SWs) * (5 - 8 * SWs + 4 * (SWs * SWs)) * (u * u)) - 2 * MZs * s * ((9 - 48 * SWs + 88 * (SWs * SWs) - 64 * (SWs * SWs * SWs) + 32 * (SWs * SWs * SWs * SWs)) * (t * t) + 8 * (SWs * SWs) * (5 - 8 * SWs + 4 * (SWs * SWs)) * (u * u))) * C0(0, s, 0, 0, MZs, MZs)) / (288. * (CWs * CWs) * (SWs * SWs) * (t * t) * (u * u)) - (ALs * (-1 + cost) * (2 * MWs + cost * s) * C0(((-1 + cost) * s) / 2., 0, 0, 0, 0, MWs)) / (4. * ((1 + cost) * (1 + cost)) * s * (SWs * SWs)) + (ALs * t * (-((9 - 48 * SWs + 88 * (SWs * SWs) - 64 * (SWs * SWs * SWs) + 32 * (SWs * SWs * SWs * SWs)) * (2 * MZs + t - u)) - (4 * AZ * CWs * SWs * (3 - 8 * SWs + 8 * (SWs * SWs)) * (MZs * MZs + 2 * MZs * t + t * t - u * u)) / (MZs - s)) * C0(t, 0, 0, 0, 0, MZs)) / (288. * (CWs * CWs) * (SWs * SWs) * (u * u)) + (ALs * u * ((5 - 8 * SWs + 4 * (SWs * SWs)) * (-2 * MZs + t - u) - (4 * AZ * CWs * (-1 + SWs) * (MZs * MZs - t * t + 2 * MZs * u + u * u)) / (MZs - s)) * C0(u, 0, 0, 0, 0, MZs)) / (36. * (CWs * CWs) * (t * t)) - (ALs * AZ * (6 * MZs * (t * t * t) - 16 * MZs * s * (-1 + SWs) * SWs * (t * t - t * u + u * u) + (t * t - u * u) * ((3 - 8 * SWs + 8 * (SWs * SWs)) * (t * t) - 8 * (-1 + SWs) * SWs * (u * u)) + MZs * MZs * ((3 - 8 * SWs + 8 * (SWs * SWs)) * (t * t) + 8 * (-1 + SWs) * SWs * (u * u))) * clog2(MZs - s) * clog2(1 - s / MZs)) / (36. * CWs * (MZs - s) * SWs * (t * t) * (u * u)) + (ALs * (-4 * (-3 + cost) * (MWs * MWs) - 4 * ((-1 + cost) * (-1 + cost)) * MWs * s - (-1 + cost) * (1 + cost * cost) * (s * s)) * D0(((-1 + cost) * s) / 2., 0, s, 0, 0, 0, 0, 0, MWs, MWs)) / (16. * ((1 + cost) * (1 + cost)) * s * (SWs * SWs)) + (ALs * (8 * ((1 - 2 * SWs) * (1 - 2 * SWs)) * t + 8 * ((3 - 2 * SWs) * (3 - 2 * SWs)) * t - (16 * (SWs * SWs) * (t * ((2 * MZs + t) * (2 * MZs + t)) + 2 * (MZs * MZs) * u + t * (u * u))) / (u * u) - ((3 - 8 * SWs + 4 * (SWs * SWs)) * (3 - 8 * SWs + 4 * (SWs * SWs)) * (4 * MZs * (t * t) + 2 * (MZs * MZs) * (2 * t + u) + t * (t * t + u * u))) / (SWs * SWs * (u * u))) * D0(t, 0, s, 0, 0, 0, 0, 0, MZs, MZs)) / (576. * (CWs * CWs)) - (ALs * ((-9 + 48 * SWs - 68 * (SWs * SWs) + 32 * (SWs * SWs * SWs) - 16 * (SWs * SWs * SWs * SWs)) * (t * t) * u + 16 * MZs * (SWs * SWs) * (5 - 8 * SWs + 4 * (SWs * SWs)) * (u * u) + 4 * (SWs * SWs) * (5 - 8 * SWs + 4 * (SWs * SWs)) * (u * u * u) + 8 * (MZs * MZs) * (SWs * SWs) * (5 - 8 * SWs + 4 * (SWs * SWs)) * (t + 2 * u)) * D0(u, 0, s, 0, 0, 0, 0, 0, MZs, MZs)) / (288. * (CWs * CWs) * (SWs * SWs) * (t * t)) - (ALs * AZ * (6 * MZs * (t * t * t) - 16 * MZs * s * (-1 + SWs) * SWs * (t * t - t * u + u * u) + (t * t - u * u) * ((3 - 8 * SWs + 8 * (SWs * SWs)) * (t * t) - 8 * (-1 + SWs) * SWs * (u * u)) + MZs * MZs * ((3 - 8 * SWs + 8 * (SWs * SWs)) * (t * t) + 8 * (-1 + SWs) * SWs * (u * u))) * li2(-(s / (MZs - s)))) / (18. * CWs * (MZs - s) * SWs * (t * t) * (u * u)) - (ALs * AZ * (MZs * MZs * (3 - 8 * SWs + 8 * (SWs * SWs)) + 2 * MZs * (3 - 8 * SWs + 8 * (SWs * SWs)) * t + (3 - 8 * SWs + 8 * (SWs * SWs)) * (t * t) + (3 + 8 * SWs - 8 * (SWs * SWs)) * (u * u)) * li2((MZs + t) / t)) / (72. * CWs * (MZs - s) * SWs * (u * u)) - (ALs * AZ * (4 * (MZs * MZs) * (-1 + SWs) * SWs + (-3 + 4 * SWs - 4 * (SWs * SWs)) * (t * t) + 8 * MZs * (-1 + SWs) * SWs * u + 4 * (-1 + SWs) * SWs * (u * u)) * li2((MZs + u) / u)) / (36. * CWs * (MZs - s) * SWs * (t * t)) - (ALs * AZ * (6 * MZs * (t * t * t) - 16 * MZs * s * (-1 + SWs) * SWs * (t * t - t * u + u * u) + (t * t - u * u) * ((3 - 8 * SWs + 8 * (SWs * SWs)) * (t * t) - 8 * (-1 + SWs) * SWs * (u * u)) + MZs * MZs * ((3 - 8 * SWs + 8 * (SWs * SWs)) * (t * t) + 8 * (-1 + SWs) * SWs * (u * u))) * li2c(s / MZs)) / (36. * CWs * (MZs - s) * SWs * (t * t) * (u * u)) + (ALs * AZ * clog2(1 - s / MZs) * (t * t * (MZs * MZs * (3 - 8 * SWs + 8 * (SWs * SWs)) + 2 * MZs * (3 - 8 * SWs + 8 * (SWs * SWs)) * t + (3 - 8 * SWs + 8 * (SWs * SWs)) * (t * t) + (3 + 8 * SWs - 8 * (SWs * SWs)) * (u * u)) * log(-t) + 2 * (u * u) * (4 * (MZs * MZs) * (-1 + SWs) * SWs + (-3 + 4 * SWs - 4 * (SWs * SWs)) * (t * t) + 8 * MZs * (-1 + SWs) * SWs * u + 4 * (-1 + SWs) * SWs * (u * u)) * log(-u))) / (36. * CWs * (MZs - s) * SWs * (t * t) * (u * u)) + (ALs * (24 * AA * CWs * (Pi * Pi) * (MZs - s) * s * SWs * (t * t) - 48 * AA * CWs * (Pi * Pi) * (MZs - s) * s * SWs * t * u + 24 * AA * CWs * (Pi * Pi) * (MZs - s) * s * SWs * (u * u) - AZ * (Pi * Pi) * (6 * MZs * (t * t * t) - 16 * MZs * s * (-1 + SWs) * SWs * (t * t - t * u + u * u) + (t * t - u * u) * ((3 - 8 * SWs + 8 * (SWs * SWs)) * (t * t) - 8 * (-1 + SWs) * SWs * (u * u)) + MZs * MZs * ((3 - 8 * SWs + 8 * (SWs * SWs)) * (t * t) + 8 * (-1 + SWs) * SWs * (u * u))) - 3 * AZ * (6 * MZs * (t * t * t) - 16 * MZs * s * (-1 + SWs) * SWs * (t * t - t * u + u * u) + (t * t - u * u) * ((3 - 8 * SWs + 8 * (SWs * SWs)) * (t * t) - 8 * (-1 + SWs) * SWs * (u * u)) + MZs * MZs * ((3 - 8 * SWs + 8 * (SWs * SWs)) * (t * t) + 8 * (-1 + SWs) * SWs * (u * u))) * (log(MZs) * log(MZs)) - 24 * AA * CWs * (MZs - s) * SWs * (t * t) * (t - u) * (log(-t) * log(-t)) - 3 * AZ * (3 - 8 * SWs + 8 * (SWs * SWs)) * (t * t) * (MZs * MZs + 2 * MZs * t + t * t - u * u) * (log(-t) * log(-t)) + 24 * AA * CWs * (MZs - s) * SWs * (t - u) * (u * u) * (log(-u) * log(-u)) - 24 * AZ * (-1 + SWs) * SWs * (u * u) * (MZs * MZs - t * t + 2 * MZs * u + u * u) * (log(-u) * log(-u)) + 6 * AZ * log(MZs) * (t * t * (MZs * MZs * (3 - 8 * SWs + 8 * (SWs * SWs)) + 2 * MZs * (3 - 8 * SWs + 8 * (SWs * SWs)) * t + (3 - 8 * SWs + 8 * (SWs * SWs)) * (t * t) + (3 + 8 * SWs - 8 * (SWs * SWs)) * (u * u)) * log(-t) + 2 * (u * u) * (4 * (MZs * MZs) * (-1 + SWs) * SWs + (-3 + 4 * SWs - 4 * (SWs * SWs)) * (t * t) + 8 * MZs * (-1 + SWs) * SWs * u + 4 * (-1 + SWs) * SWs * (u * u)) * log(-u)) - 18 * AZ * (t * t) * (u * u) * log(-t) * (-1 + log(t * u)) + 18 * AZ * (t * t) * (u * u) * log(-u) * (-1 + log(t * u)) + 48 * AA * CWs * (MZs - s) * SWs * (t - u) * (t * t * log(-t) - u * u * log(-u)) * clog2(-s) + 24 * AA * CWs * (MZs - s) * s * SWs * ((t - u) * (t - u)) * (clog2(-s) * clog2(-s)))) / (432. * CWs * (MZs - s) * SWs * (t * t) * (u * u));
                break;
            }
            break;
        }
        break;
    case BQU:
        switch (if1)
        {
        case VEC:
            switch (of1)
            {
            case VEC:
                res = (AA * ALs * (t * t - u * u) * B0fin(s, 0, 0)) / (9. * s * t * u) + (ALs * AZ * (3 * s * t + MZs * (-3 + 8 * SWs - 8 * (SWs * SWs)) * t + 8 * MZs * (-1 + SWs) * SWs * u - 8 * (-1 + SWs) * SWs * (t * t - u * u)) * B0fin(s, 0, MZs)) / (36. * CWs * (MZs - s) * SWs * t * u) + (ALs * B0fin(s, MWs, MWs)) / (4. * (1 + cost) * s * (SWs * SWs)) - (ALs * ((9 - 48 * SWs + 88 * (SWs * SWs) - 64 * (SWs * SWs * SWs) + 32 * (SWs * SWs * SWs * SWs)) * t - 8 * (SWs * SWs) * (5 - 8 * SWs + 4 * (SWs * SWs)) * u) * B0fin(s, MZs, MZs)) / (288. * (CWs * CWs) * (SWs * SWs) * t * u) - (ALs * B0fin(((-1 + cost) * s) / 2., 0, MTs)) / (4. * (1 + cost) * s * (SWs * SWs)) + (ALs * (9 + 24 * (-2 + AZ * CWs) * SWs + 8 * (11 - 8 * AZ * CWs + 4 * AA * (CWs * CWs)) * (SWs * SWs) + 64 * (-1 + AZ * CWs) * (SWs * SWs * SWs) + 32 * (SWs * SWs * SWs * SWs)) * B0fin(t, 0, 0)) / (288. * (CWs * CWs) * (SWs * SWs) * u) - (ALs * (5 + 4 * AA * (CWs * CWs) + 8 * AZ * CWs * (-1 + SWs) - 8 * SWs + 4 * (SWs * SWs)) * B0fin(u, 0, 0)) / (36. * (CWs * CWs) * t) + (ALs * (2 * MTs - 4 * MWs + s + cost * cost * s) * C0(0, 0, s, MWs, MTs, MWs)) / (8. * ((1 + cost) * (1 + cost)) * s * (SWs * SWs)) - (ALs * (-1 + cost) * (-MTs + 2 * MWs + cost * s) * C0(0, 0, ((-1 + cost) * s) / 2., 0, MWs, MTs)) / (8. * ((1 + cost) * (1 + cost)) * s * (SWs * SWs)) + (ALs * (2 * MTs - 4 * MWs + s + cost * cost * s) * C0(0, s, 0, 0, MWs, MWs)) / (8. * ((1 + cost) * (1 + cost)) * s * (SWs * SWs)) + (ALs * ((9 - 48 * SWs + 88 * (SWs * SWs) - 64 * (SWs * SWs * SWs) + 32 * (SWs * SWs * SWs * SWs)) * (t * t * t * t) - 3 * (3 - 16 * SWs + 16 * (SWs * SWs)) * (t * t) * (u * u) - 8 * (SWs * SWs) * (5 - 8 * SWs + 4 * (SWs * SWs)) * (u * u * u * u) - 2 * MZs * s * ((9 - 48 * SWs + 88 * (SWs * SWs) - 64 * (SWs * SWs * SWs) + 32 * (SWs * SWs * SWs * SWs)) * (t * t) - 8 * (SWs * SWs) * (5 - 8 * SWs + 4 * (SWs * SWs)) * (u * u))) * C0(0, s, 0, 0, MZs, MZs)) / (288. * (CWs * CWs) * (SWs * SWs) * (t * t) * (u * u)) - (ALs * (-1 + cost) * (-MTs + 2 * MWs + cost * s) * C0(0, ((-1 + cost) * s) / 2., 0, MWs, MTs, 0)) / (8. * ((1 + cost) * (1 + cost)) * s * (SWs * SWs)) + (ALs * t * (-((9 - 48 * SWs + 88 * (SWs * SWs) - 64 * (SWs * SWs * SWs) + 32 * (SWs * SWs * SWs * SWs)) * (2 * MZs + t - u)) - (4 * AZ * CWs * SWs * (3 - 8 * SWs + 8 * (SWs * SWs)) * (MZs * MZs + 2 * MZs * t + t * t - u * u)) / (MZs - s)) * C0(t, 0, 0, 0, 0, MZs)) / (288. * (CWs * CWs) * (SWs * SWs) * (u * u)) + (ALs * u * ((5 - 8 * SWs + 4 * (SWs * SWs)) * (2 * MZs - t + u) + (4 * AZ * CWs * (-1 + SWs) * (MZs * MZs - t * t + 2 * MZs * u + u * u)) / (MZs - s)) * C0(u, 0, 0, 0, 0, MZs)) / (36. * (CWs * CWs) * (t * t)) - (ALs * AZ * ((3 - 8 * SWs + 8 * (SWs * SWs)) * (t * t * t * t) - 3 * (t * t) * (u * u) - 8 * (-1 + SWs) * SWs * (u * u * u * u) + MZs * MZs * ((3 - 8 * SWs + 8 * (SWs * SWs)) * (t * t) - 8 * (-1 + SWs) * SWs * (u * u)) + 2 * MZs * ((3 - 8 * SWs + 8 * (SWs * SWs)) * (t * t * t) - 8 * (-1 + SWs) * SWs * (u * u * u))) * clog2(MZs - s) * clog2(1 - s / MZs)) / (36. * CWs * (MZs - s) * SWs * (t * t) * (u * u)) + (AA * ALs * (t * t) * (clog2(s / t) * clog2(s / t))) / (18. * s * (u * u)) - (AA * ALs * (u * u) * (clog2(s / u) * clog2(s / u))) / (18. * s * (t * t)) - (ALs * (-4 * (MTs * MTs) + 4 * (-3 + cost) * (MWs * MWs) + 4 * ((-1 + cost) * (-1 + cost)) * MWs * s + (-1 + cost - cost * cost + cost * cost * cost) * (s * s) - 2 * MTs * (2 * (-3 + cost) * MWs + (2 - cost + cost * cost) * s)) * D0(0, 0, 0, 0, s, ((-1 + cost) * s) / 2., MWs, MTs, MWs, 0)) / (16. * ((1 + cost) * (1 + cost)) * s * (SWs * SWs)) + (ALs * (-8 * ((1 - 2 * SWs) * (1 - 2 * SWs)) * t - 8 * ((3 - 2 * SWs) * (3 - 2 * SWs)) * t - (16 * (SWs * SWs) * (t * ((2 * MZs + t) * (2 * MZs + t)) + 2 * (MZs * MZs) * u + t * (u * u))) / (u * u) - ((3 - 8 * SWs + 4 * (SWs * SWs)) * (3 - 8 * SWs + 4 * (SWs * SWs)) * (4 * MZs * (t * t) + 2 * (MZs * MZs) * (2 * t + u) + t * (t * t + u * u))) / (SWs * SWs * (u * u))) * D0(t, 0, s, 0, 0, 0, 0, 0, MZs, MZs)) / (576. * (CWs * CWs)) + (ALs * (3 * (3 - 16 * SWs + 36 * (SWs * SWs) - 32 * (SWs * SWs * SWs) + 16 * (SWs * SWs * SWs * SWs)) * (t * t) * u + 16 * MZs * (SWs * SWs) * (5 - 8 * SWs + 4 * (SWs * SWs)) * (u * u) + 4 * (SWs * SWs) * (5 - 8 * SWs + 4 * (SWs * SWs)) * (u * u * u) + 8 * (MZs * MZs) * (SWs * SWs) * (5 - 8 * SWs + 4 * (SWs * SWs)) * (t + 2 * u)) * D0(u, 0, s, 0, 0, 0, 0, 0, MZs, MZs)) / (288. * (CWs * CWs) * (SWs * SWs) * (t * t)) - (ALs * AZ * ((3 - 8 * SWs + 8 * (SWs * SWs)) * (t * t * t * t) - 3 * (t * t) * (u * u) - 8 * (-1 + SWs) * SWs * (u * u * u * u) + MZs * MZs * ((3 - 8 * SWs + 8 * (SWs * SWs)) * (t * t) - 8 * (-1 + SWs) * SWs * (u * u)) + 2 * MZs * ((3 - 8 * SWs + 8 * (SWs * SWs)) * (t * t * t) - 8 * (-1 + SWs) * SWs * (u * u * u))) * li2(-(s / (MZs - s)))) / (18. * CWs * (MZs - s) * SWs * (t * t) * (u * u)) - (ALs * AZ * (MZs * MZs * (3 - 8 * SWs + 8 * (SWs * SWs)) + 2 * MZs * (3 - 8 * SWs + 8 * (SWs * SWs)) * t + (3 - 8 * SWs + 8 * (SWs * SWs)) * (t * t) + 3 * (1 - 8 * SWs + 8 * (SWs * SWs)) * (u * u)) * li2((MZs + t) / t)) / (72. * CWs * (MZs - s) * SWs * (u * u)) + (ALs * AZ * (4 * (MZs * MZs) * (-1 + SWs) * SWs + 3 * ((1 - 2 * SWs) * (1 - 2 * SWs)) * (t * t) + 8 * MZs * (-1 + SWs) * SWs * u + 4 * (-1 + SWs) * SWs * (u * u)) * li2((MZs + u) / u)) / (36. * CWs * (MZs - s) * SWs * (t * t)) - (ALs * AZ * ((3 - 8 * SWs + 8 * (SWs * SWs)) * (t * t * t * t) - 3 * (t * t) * (u * u) - 8 * (-1 + SWs) * SWs * (u * u * u * u) + MZs * MZs * ((3 - 8 * SWs + 8 * (SWs * SWs)) * (t * t) - 8 * (-1 + SWs) * SWs * (u * u)) + 2 * MZs * ((3 - 8 * SWs + 8 * (SWs * SWs)) * (t * t * t) - 8 * (-1 + SWs) * SWs * (u * u * u))) * li2c(s / MZs)) / (36. * CWs * (MZs - s) * SWs * (t * t) * (u * u)) - (AA * ALs * clog2(-s) * log(t / u)) / (3. * s) + (ALs * AZ * clog2(1 - s / MZs) * (t * t * (MZs * MZs * (3 - 8 * SWs + 8 * (SWs * SWs)) + 2 * MZs * (3 - 8 * SWs + 8 * (SWs * SWs)) * t + (3 - 8 * SWs + 8 * (SWs * SWs)) * (t * t) + 3 * (1 - 8 * SWs + 8 * (SWs * SWs)) * (u * u)) * log(-t) - 2 * (u * u) * (4 * (MZs * MZs) * (-1 + SWs) * SWs + 3 * ((1 - 2 * SWs) * (1 - 2 * SWs)) * (t * t) + 8 * MZs * (-1 + SWs) * SWs * u + 4 * (-1 + SWs) * SWs * (u * u)) * log(-u))) / (36. * CWs * (MZs - s) * SWs * (t * t) * (u * u)) + (ALs * (24 * AA * CWs * (Pi * Pi) * (MZs - s) * SWs * (t * t * t * t) - 24 * AA * CWs * (Pi * Pi) * (MZs - s) * SWs * (u * u * u * u) - AZ * (Pi * Pi) * s * ((3 - 8 * SWs + 8 * (SWs * SWs)) * (t * t * t * t) - 3 * (t * t) * (u * u) - 8 * (-1 + SWs) * SWs * (u * u * u * u) + MZs * MZs * ((3 - 8 * SWs + 8 * (SWs * SWs)) * (t * t) - 8 * (-1 + SWs) * SWs * (u * u)) + 2 * MZs * ((3 - 8 * SWs + 8 * (SWs * SWs)) * (t * t * t) - 8 * (-1 + SWs) * SWs * (u * u * u))) - 3 * AZ * s * ((3 - 8 * SWs + 8 * (SWs * SWs)) * (t * t * t * t) - 3 * (t * t) * (u * u) - 8 * (-1 + SWs) * SWs * (u * u * u * u) + MZs * MZs * ((3 - 8 * SWs + 8 * (SWs * SWs)) * (t * t) - 8 * (-1 + SWs) * SWs * (u * u)) + 2 * MZs * ((3 - 8 * SWs + 8 * (SWs * SWs)) * (t * t * t) - 8 * (-1 + SWs) * SWs * (u * u * u))) * (log(MZs) * log(MZs)) - 3 * AZ * s * (3 - 8 * SWs + 8 * (SWs * SWs)) * (t * t) * (MZs * MZs + 2 * MZs * t + t * t - u * u) * (log(-t) * log(-t)) - 96 * AA * CWs * (MZs - s) * SWs * (t * t) * (u * u) * log(t / u) + 24 * AZ * s * (-1 + SWs) * SWs * (u * u) * (MZs * MZs - t * t + 2 * MZs * u + u * u) * (log(-u) * log(-u)) + 6 * AZ * s * log(MZs) * (t * t * (MZs * MZs * (3 - 8 * SWs + 8 * (SWs * SWs)) + 2 * MZs * (3 - 8 * SWs + 8 * (SWs * SWs)) * t + (3 - 8 * SWs + 8 * (SWs * SWs)) * (t * t) + 3 * (1 - 8 * SWs + 8 * (SWs * SWs)) * (u * u)) * log(-t) - 2 * (u * u) * (4 * (MZs * MZs) * (-1 + SWs) * SWs + 3 * ((1 - 2 * SWs) * (1 - 2 * SWs)) * (t * t) + 8 * MZs * (-1 + SWs) * SWs * u + 4 * (-1 + SWs) * SWs * (u * u)) * log(-u)) - 6 * AZ * s * (3 - 16 * SWs + 16 * (SWs * SWs)) * (t * t) * (u * u) * log(-t) * (-1 + log(t * u)) + 6 * AZ * s * (3 - 16 * SWs + 16 * (SWs * SWs)) * (t * t) * (u * u) * log(-u) * (-1 + log(t * u)) + 72 * AA * CWs * (MZs - s) * SWs * (t * t) * (u * u) * log(t / u) * log(t * u))) / (432. * CWs * (MZs - s) * s * SWs * (t * t) * (u * u));
                break;
            case AXV:
                res = (ALs * AZ * ((-3 + 8 * SWs) * t - 4 * SWs * u) * B0fin(s, 0, MZs)) / (36. * CWs * SWs * t * u) + (ALs * B0fin(s, MWs, MWs)) / (4. * (1 + cost) * s * (SWs * SWs)) + (ALs * ((-9 + 48 * SWs - 88 * (SWs * SWs) + 64 * (SWs * SWs * SWs)) * t - 32 * (-1 + SWs) * (SWs * SWs) * u) * B0fin(s, MZs, MZs)) / (288. * (CWs * CWs) * (SWs * SWs) * t * u) - (ALs * B0fin(((-1 + cost) * s) / 2., 0, MTs)) / (4. * (1 + cost) * s * (SWs * SWs)) - (ALs * (-3 + 8 * SWs) * (3 + 8 * (-1 + AZ * CWs) * SWs + 8 * (SWs * SWs)) * B0fin(t, 0, 0)) / (288. * (CWs * CWs) * (SWs * SWs) * u) + (ALs * (-1 + AZ * CWs + SWs) * B0fin(u, 0, 0)) / (9. * (CWs * CWs) * t) + (ALs * (2 * MTs - 4 * MWs + s + cost * cost * s) * C0(0, 0, s, MWs, MTs, MWs)) / (8. * ((1 + cost) * (1 + cost)) * s * (SWs * SWs)) + (ALs * (-1 + cost) * (MTs - 2 * MWs - cost * s) * C0(0, 0, ((-1 + cost) * s) / 2., 0, MWs, MTs)) / (8. * ((1 + cost) * (1 + cost)) * s * (SWs * SWs)) + (ALs * (2 * MTs - 4 * MWs + s + cost * cost * s) * C0(0, s, 0, 0, MWs, MWs)) / (8. * ((1 + cost) * (1 + cost)) * s * (SWs * SWs)) + (ALs * (2 * MZs * s * ((-9 + 48 * SWs - 88 * (SWs * SWs) + 64 * (SWs * SWs * SWs)) * (t * t) - 32 * (-1 + SWs) * (SWs * SWs) * (u * u)) - (t * t - u * u) * ((-9 + 48 * SWs - 88 * (SWs * SWs) + 64 * (SWs * SWs * SWs)) * (t * t) + 32 * (-1 + SWs) * (SWs * SWs) * (u * u))) * C0(0, s, 0, 0, MZs, MZs)) / (288. * (CWs * CWs) * (SWs * SWs) * (t * t) * (u * u)) + (ALs * (-1 + cost) * (MTs - 2 * MWs - cost * s) * C0(0, ((-1 + cost) * s) / 2., 0, MWs, MTs, 0)) / (8. * ((1 + cost) * (1 + cost)) * s * (SWs * SWs)) + (ALs * (-3 + 8 * SWs) * t * ((3 - 8 * SWs + 8 * (SWs * SWs)) * (2 * MZs + t - u) + (4 * AZ * CWs * SWs * (MZs * MZs + 2 * MZs * t + t * t - u * u)) / (MZs - s)) * C0(t, 0, 0, 0, 0, MZs)) / (288. * (CWs * CWs) * (SWs * SWs) * (u * u)) + (ALs * u * (-2 * (-1 + SWs) * (2 * MZs - t + u) - (AZ * CWs * (MZs * MZs - t * t + 2 * MZs * u + u * u)) / (MZs - s)) * C0(u, 0, 0, 0, 0, MZs)) / (18. * (CWs * CWs) * (t * t)) + (ALs * AZ * (MZs * ((-3 + 8 * SWs) * (t * t) - 4 * SWs * (u * u)) + (t - u) * ((-3 + 8 * SWs) * (t * t) + 4 * SWs * (u * u))) * clog2(MZs - s) * clog2(1 - s / MZs)) / (36. * CWs * SWs * (t * t) * (u * u)) + (ALs * (4 * (MTs * MTs) + 4 * (-3 + cost) * MTs * MWs - 4 * (-3 + cost) * (MWs * MWs) + 2 * (2 + (-1 + cost) * cost) * MTs * s - 4 * ((-1 + cost) * (-1 + cost)) * MWs * s - (-1 + cost) * (1 + cost * cost) * (s * s)) * D0(0, 0, 0, 0, s, ((-1 + cost) * s) / 2., MWs, MTs, MWs, 0)) / (16. * ((1 + cost) * (1 + cost)) * s * (SWs * SWs)) + (ALs * (8 * ((1 - 2 * SWs) * (1 - 2 * SWs)) * t - 8 * ((3 - 2 * SWs) * (3 - 2 * SWs)) * t + (16 * (SWs * SWs) * (t * ((2 * MZs + t) * (2 * MZs + t)) + 2 * (MZs * MZs) * u + t * (u * u))) / (u * u) - ((3 - 8 * SWs + 4 * (SWs * SWs)) * (3 - 8 * SWs + 4 * (SWs * SWs)) * (4 * MZs * (t * t) + 2 * (MZs * MZs) * (2 * t + u) + t * (t * t + u * u))) / (SWs * SWs * (u * u))) * D0(t, 0, s, 0, 0, 0, 0, 0, MZs, MZs)) / (576. * (CWs * CWs)) - (ALs * ((-9 + 48 * SWs - 104 * (SWs * SWs) + 80 * (SWs * SWs * SWs)) * (t * t) * u + 64 * MZs * (-1 + SWs) * (SWs * SWs) * (u * u) + 16 * (-1 + SWs) * (SWs * SWs) * (u * u * u) + 32 * (MZs * MZs) * (-1 + SWs) * (SWs * SWs) * (t + 2 * u)) * D0(u, 0, s, 0, 0, 0, 0, 0, MZs, MZs)) / (288. * (CWs * CWs) * (SWs * SWs) * (t * t)) + (ALs * AZ * (MZs * ((-3 + 8 * SWs) * (t * t) - 4 * SWs * (u * u)) + (t - u) * ((-3 + 8 * SWs) * (t * t) + 4 * SWs * (u * u))) * li2(-(s / (MZs - s)))) / (18. * CWs * SWs * (t * t) * (u * u)) + (ALs * AZ * (MZs * MZs * (-3 + 8 * SWs) + 2 * MZs * (-3 + 8 * SWs) * t + (-3 + 8 * SWs) * (t * t) + (-3 + 16 * SWs) * (u * u)) * li2((MZs + t) / t)) / (72. * CWs * (MZs - s) * SWs * (u * u)) - (ALs * AZ * (2 * (MZs * MZs) * SWs + (-3 + 10 * SWs) * (t * t) + 4 * MZs * SWs * u + 2 * SWs * (u * u)) * li2((MZs + u) / u)) / (36. * CWs * (MZs - s) * SWs * (t * t)) + (ALs * AZ * (MZs * ((-3 + 8 * SWs) * (t * t) - 4 * SWs * (u * u)) + (t - u) * ((-3 + 8 * SWs) * (t * t) + 4 * SWs * (u * u))) * li2c(s / MZs)) / (36. * CWs * SWs * (t * t) * (u * u)) + (ALs * AZ * clog2(1 - s / MZs) * (t * t * (MZs * MZs * (3 - 8 * SWs) + 2 * MZs * (3 - 8 * SWs) * t + (3 - 8 * SWs) * (t * t) + (3 - 16 * SWs) * (u * u)) * log(-t) + 2 * (u * u) * (2 * (MZs * MZs) * SWs + (-3 + 10 * SWs) * (t * t) + 4 * MZs * SWs * u + 2 * SWs * (u * u)) * log(-u))) / (36. * CWs * (MZs - s) * SWs * (t * t) * (u * u)) - (ALs * AZ * (Pi * Pi * (MZs - s) * (MZs * ((3 - 8 * SWs) * (t * t) + 4 * SWs * (u * u)) - (t - u) * ((-3 + 8 * SWs) * (t * t) + 4 * SWs * (u * u))) + 3 * (MZs - s) * (MZs * ((3 - 8 * SWs) * (t * t) + 4 * SWs * (u * u)) - (t - u) * ((-3 + 8 * SWs) * (t * t) + 4 * SWs * (u * u))) * (log(MZs) * log(MZs)) - 3 * (-3 + 8 * SWs) * (t * t) * (MZs * MZs + 2 * MZs * t + t * t - u * u) * (log(-t) * log(-t)) + 12 * SWs * (u * u) * (MZs * MZs - t * t + 2 * MZs * u + u * u) * (log(-u) * log(-u)) + 6 * log(MZs) * (t * t * (MZs * MZs * (-3 + 8 * SWs) + 2 * MZs * (-3 + 8 * SWs) * t + (-3 + 8 * SWs) * (t * t) + (-3 + 16 * SWs) * (u * u)) * log(-t) - 2 * (u * u) * (2 * (MZs * MZs) * SWs + (-3 + 10 * SWs) * (t * t) + 4 * MZs * SWs * u + 2 * SWs * (u * u)) * log(-u)) - 18 * (-1 + 4 * SWs) * (t * t) * (u * u) * log(-t) * (-1 + log(t * u)) + 18 * (-1 + 4 * SWs) * (t * t) * (u * u) * log(-u) * (-1 + log(t * u)))) / (432. * CWs * (MZs - s) * SWs * (t * t) * (u * u));
                break;
            }
            break;
        case AXV:
            switch (of1)
            {
            case VEC:
                res = (ALs * AZ * ((-3 + 8 * SWs) * t + 4 * SWs * u) * B0fin(s, 0, MZs)) / (36. * CWs * SWs * t * u) + (ALs * B0fin(s, MWs, MWs)) / (4. * (1 + cost) * s * (SWs * SWs)) + (ALs * ((-9 + 48 * SWs - 88 * (SWs * SWs) + 64 * (SWs * SWs * SWs)) * t + 32 * (-1 + SWs) * (SWs * SWs) * u) * B0fin(s, MZs, MZs)) / (288. * (CWs * CWs) * (SWs * SWs) * t * u) - (ALs * B0fin(((-1 + cost) * s) / 2., 0, MTs)) / (4. * (1 + cost) * s * (SWs * SWs)) - (ALs * (-3 + 8 * SWs) * (3 + 8 * (-1 + AZ * CWs) * SWs + 8 * (SWs * SWs)) * B0fin(t, 0, 0)) / (288. * (CWs * CWs) * (SWs * SWs) * u) - (ALs * (-1 + AZ * CWs + SWs) * B0fin(u, 0, 0)) / (9. * (CWs * CWs) * t) + (ALs * (2 * MTs - 4 * MWs + s + cost * cost * s) * C0(0, 0, s, MWs, MTs, MWs)) / (8. * ((1 + cost) * (1 + cost)) * s * (SWs * SWs)) + (ALs * (-1 + cost) * (MTs - 2 * MWs - cost * s) * C0(0, 0, ((-1 + cost) * s) / 2., 0, MWs, MTs)) / (8. * ((1 + cost) * (1 + cost)) * s * (SWs * SWs)) + (ALs * (2 * MTs - 4 * MWs + s + cost * cost * s) * C0(0, s, 0, 0, MWs, MWs)) / (8. * ((1 + cost) * (1 + cost)) * s * (SWs * SWs)) + (ALs * (-((t * t - u * u) * ((-9 + 48 * SWs - 88 * (SWs * SWs) + 64 * (SWs * SWs * SWs)) * (t * t) - 32 * (-1 + SWs) * (SWs * SWs) * (u * u))) + 2 * MZs * s * ((-9 + 48 * SWs - 88 * (SWs * SWs) + 64 * (SWs * SWs * SWs)) * (t * t) + 32 * (-1 + SWs) * (SWs * SWs) * (u * u))) * C0(0, s, 0, 0, MZs, MZs)) / (288. * (CWs * CWs) * (SWs * SWs) * (t * t) * (u * u)) + (ALs * (-1 + cost) * (MTs - 2 * MWs - cost * s) * C0(0, ((-1 + cost) * s) / 2., 0, MWs, MTs, 0)) / (8. * ((1 + cost) * (1 + cost)) * s * (SWs * SWs)) + (ALs * (-3 + 8 * SWs) * t * ((3 - 8 * SWs + 8 * (SWs * SWs)) * (2 * MZs + t - u) + (4 * AZ * CWs * SWs * (MZs * MZs + 2 * MZs * t + t * t - u * u)) / (MZs - s)) * C0(t, 0, 0, 0, 0, MZs)) / (288. * (CWs * CWs) * (SWs * SWs) * (u * u)) + (ALs * u * (2 * (-1 + SWs) * (2 * MZs - t + u) + (AZ * CWs * (MZs * MZs - t * t + 2 * MZs * u + u * u)) / (MZs - s)) * C0(u, 0, 0, 0, 0, MZs)) / (18. * (CWs * CWs) * (t * t)) + (ALs * AZ * ((t - u) * ((-3 + 8 * SWs) * (t * t) - 4 * SWs * (u * u)) + MZs * ((-3 + 8 * SWs) * (t * t) + 4 * SWs * (u * u))) * clog2(MZs - s) * clog2(1 - s / MZs)) / (36. * CWs * SWs * (t * t) * (u * u)) + (ALs * (4 * (MTs * MTs) + 4 * (-3 + cost) * MTs * MWs - 4 * (-3 + cost) * (MWs * MWs) + 2 * (2 + (-1 + cost) * cost) * MTs * s - 4 * ((-1 + cost) * (-1 + cost)) * MWs * s - (-1 + cost) * (1 + cost * cost) * (s * s)) * D0(0, 0, 0, 0, s, ((-1 + cost) * s) / 2., MWs, MTs, MWs, 0)) / (16. * ((1 + cost) * (1 + cost)) * s * (SWs * SWs)) + (ALs * (4 * MZs * (-9 + 48 * SWs - 88 * (SWs * SWs) + 64 * (SWs * SWs * SWs)) * (t * t) + (-9 + 48 * SWs - 88 * (SWs * SWs) + 64 * (SWs * SWs * SWs)) * (t * t * t) - 3 * (3 - 16 * SWs + 8 * (SWs * SWs)) * t * (u * u) + 2 * (MZs * MZs) * (-9 + 48 * SWs - 88 * (SWs * SWs) + 64 * (SWs * SWs * SWs)) * (2 * t + u)) * D0(t, 0, s, 0, 0, 0, 0, 0, MZs, MZs)) / (576. * (CWs * CWs) * (SWs * SWs) * (u * u)) + (ALs * ((9 - 48 * SWs + 72 * (SWs * SWs) - 48 * (SWs * SWs * SWs)) * (t * t) * u + 64 * MZs * (-1 + SWs) * (SWs * SWs) * (u * u) + 16 * (-1 + SWs) * (SWs * SWs) * (u * u * u) + 32 * (MZs * MZs) * (-1 + SWs) * (SWs * SWs) * (t + 2 * u)) * D0(u, 0, s, 0, 0, 0, 0, 0, MZs, MZs)) / (288. * (CWs * CWs) * (SWs * SWs) * (t * t)) + (ALs * AZ * ((t - u) * ((-3 + 8 * SWs) * (t * t) - 4 * SWs * (u * u)) + MZs * ((-3 + 8 * SWs) * (t * t) + 4 * SWs * (u * u))) * li2(-(s / (MZs - s)))) / (18. * CWs * SWs * (t * t) * (u * u)) - (ALs * AZ * (MZs * MZs * (3 - 8 * SWs) + 2 * MZs * (3 - 8 * SWs) * t + (3 - 8 * SWs) * (t * t) + 3 * (u * u)) * li2((MZs + t) / t)) / (72. * CWs * (MZs - s) * SWs * (u * u)) + (ALs * AZ * (2 * (MZs * MZs) * SWs + (3 - 6 * SWs) * (t * t) + 4 * MZs * SWs * u + 2 * SWs * (u * u)) * li2((MZs + u) / u)) / (36. * CWs * (MZs - s) * SWs * (t * t)) + (ALs * AZ * ((t - u) * ((-3 + 8 * SWs) * (t * t) - 4 * SWs * (u * u)) + MZs * ((-3 + 8 * SWs) * (t * t) + 4 * SWs * (u * u))) * li2c(s / MZs)) / (36. * CWs * SWs * (t * t) * (u * u)) - (ALs * AZ * clog2(1 - s / MZs) * (t * t * (MZs * MZs * (-3 + 8 * SWs) + 2 * MZs * (-3 + 8 * SWs) * t + (-3 + 8 * SWs) * (t * t) - 3 * (u * u)) * log(-t) + 2 * (u * u) * (2 * (MZs * MZs) * SWs + (3 - 6 * SWs) * (t * t) + 4 * MZs * SWs * u + 2 * SWs * (u * u)) * log(-u))) / (36. * CWs * (MZs - s) * SWs * (t * t) * (u * u)) + (ALs * AZ * (Pi * Pi * (MZs - s) * ((t - u) * ((-3 + 8 * SWs) * (t * t) - 4 * SWs * (u * u)) + MZs * ((-3 + 8 * SWs) * (t * t) + 4 * SWs * (u * u))) + 3 * (MZs - s) * ((t - u) * ((-3 + 8 * SWs) * (t * t) - 4 * SWs * (u * u)) + MZs * ((-3 + 8 * SWs) * (t * t) + 4 * SWs * (u * u))) * (log(MZs) * log(MZs)) + 3 * (-3 + 8 * SWs) * (t * t) * (MZs * MZs + 2 * MZs * t + t * t - u * u) * (log(-t) * log(-t)) + 12 * SWs * (u * u) * (MZs * MZs - t * t + 2 * MZs * u + u * u) * (log(-u) * log(-u)) - 6 * log(MZs) * (t * t * (MZs * MZs * (-3 + 8 * SWs) + 2 * MZs * (-3 + 8 * SWs) * t + (-3 + 8 * SWs) * (t * t) - 3 * (u * u)) * log(-t) + 2 * (u * u) * (2 * (MZs * MZs) * SWs + (3 - 6 * SWs) * (t * t) + 4 * MZs * SWs * u + 2 * SWs * (u * u)) * log(-u)) + 6 * (-3 + 4 * SWs) * (t * t) * (u * u) * log(-t) * (-1 + log(t * u)) - 6 * (-3 + 4 * SWs) * (t * t) * (u * u) * log(-u) * (-1 + log(t * u)))) / (432. * CWs * (MZs - s) * SWs * (t * t) * (u * u));
                break;
            case AXV:
                res = (AA * ALs * s * B0fin(s, 0, 0)) / (9. * t * u) + (ALs * AZ * (8 * s * (-1 + SWs) * SWs - 3 * t) * B0fin(s, 0, MZs)) / (36. * CWs * SWs * t * u) + (ALs * B0fin(s, MWs, MWs)) / (4. * (1 + cost) * s * (SWs * SWs)) - (ALs * ((9 - 48 * SWs + 88 * (SWs * SWs) - 64 * (SWs * SWs * SWs) + 32 * (SWs * SWs * SWs * SWs)) * t + 8 * (SWs * SWs) * (5 - 8 * SWs + 4 * (SWs * SWs)) * u) * B0fin(s, MZs, MZs)) / (288. * (CWs * CWs) * (SWs * SWs) * t * u) - (ALs * B0fin(((-1 + cost) * s) / 2., 0, MTs)) / (4. * (1 + cost) * s * (SWs * SWs)) + (ALs * (9 + 24 * (-2 + AZ * CWs) * SWs + 8 * (11 - 8 * AZ * CWs + 4 * AA * (CWs * CWs)) * (SWs * SWs) + 64 * (-1 + AZ * CWs) * (SWs * SWs * SWs) + 32 * (SWs * SWs * SWs * SWs)) * B0fin(t, 0, 0)) / (288. * (CWs * CWs) * (SWs * SWs) * u) + (ALs * (5 + 4 * AA * (CWs * CWs) + 8 * AZ * CWs * (-1 + SWs) - 8 * SWs + 4 * (SWs * SWs)) * B0fin(u, 0, 0)) / (36. * (CWs * CWs) * t) + (ALs * (2 * MTs - 4 * MWs + s + cost * cost * s) * C0(0, 0, s, MWs, MTs, MWs)) / (8. * ((1 + cost) * (1 + cost)) * s * (SWs * SWs)) + (ALs * (-1 + cost) * (MTs - 2 * MWs - cost * s) * C0(0, 0, ((-1 + cost) * s) / 2., 0, MWs, MTs)) / (8. * ((1 + cost) * (1 + cost)) * s * (SWs * SWs)) + (ALs * (2 * MTs - 4 * MWs + s + cost * cost * s) * C0(0, s, 0, 0, MWs, MWs)) / (8. * ((1 + cost) * (1 + cost)) * s * (SWs * SWs)) + (ALs * ((t * t - u * u) * ((9 - 48 * SWs + 88 * (SWs * SWs) - 64 * (SWs * SWs * SWs) + 32 * (SWs * SWs * SWs * SWs)) * (t * t) - 8 * (SWs * SWs) * (5 - 8 * SWs + 4 * (SWs * SWs)) * (u * u)) - 2 * MZs * s * ((9 - 48 * SWs + 88 * (SWs * SWs) - 64 * (SWs * SWs * SWs) + 32 * (SWs * SWs * SWs * SWs)) * (t * t) + 8 * (SWs * SWs) * (5 - 8 * SWs + 4 * (SWs * SWs)) * (u * u))) * C0(0, s, 0, 0, MZs, MZs)) / (288. * (CWs * CWs) * (SWs * SWs) * (t * t) * (u * u)) + (ALs * (-1 + cost) * (MTs - 2 * MWs - cost * s) * C0(0, ((-1 + cost) * s) / 2., 0, MWs, MTs, 0)) / (8. * ((1 + cost) * (1 + cost)) * s * (SWs * SWs)) + (ALs * t * (-((9 - 48 * SWs + 88 * (SWs * SWs) - 64 * (SWs * SWs * SWs) + 32 * (SWs * SWs * SWs * SWs)) * (2 * MZs + t - u)) - (4 * AZ * CWs * SWs * (3 - 8 * SWs + 8 * (SWs * SWs)) * (MZs * MZs + 2 * MZs * t + t * t - u * u)) / (MZs - s)) * C0(t, 0, 0, 0, 0, MZs)) / (288. * (CWs * CWs) * (SWs * SWs) * (u * u)) + (ALs * u * ((5 - 8 * SWs + 4 * (SWs * SWs)) * (-2 * MZs + t - u) - (4 * AZ * CWs * (-1 + SWs) * (MZs * MZs - t * t + 2 * MZs * u + u * u)) / (MZs - s)) * C0(u, 0, 0, 0, 0, MZs)) / (36. * (CWs * CWs) * (t * t)) + (AA * ALs * s * ((t - u) * (t - u)) * (clog2(-s) * clog2(-s))) / (18. * (t * t) * (u * u)) - (ALs * AZ * (6 * MZs * (t * t * t) - 16 * MZs * s * (-1 + SWs) * SWs * (t * t - t * u + u * u) + (t * t - u * u) * ((3 - 8 * SWs + 8 * (SWs * SWs)) * (t * t) - 8 * (-1 + SWs) * SWs * (u * u)) + MZs * MZs * ((3 - 8 * SWs + 8 * (SWs * SWs)) * (t * t) + 8 * (-1 + SWs) * SWs * (u * u))) * clog2(MZs - s) * clog2(1 - s / MZs)) / (36. * CWs * (MZs - s) * SWs * (t * t) * (u * u)) + (ALs * (4 * (MTs * MTs) + 4 * (-3 + cost) * MTs * MWs - 4 * (-3 + cost) * (MWs * MWs) + 2 * (2 + (-1 + cost) * cost) * MTs * s - 4 * ((-1 + cost) * (-1 + cost)) * MWs * s - (-1 + cost) * (1 + cost * cost) * (s * s)) * D0(0, 0, 0, 0, s, ((-1 + cost) * s) / 2., MWs, MTs, MWs, 0)) / (16. * ((1 + cost) * (1 + cost)) * s * (SWs * SWs)) + (ALs * (8 * ((1 - 2 * SWs) * (1 - 2 * SWs)) * t + 8 * ((3 - 2 * SWs) * (3 - 2 * SWs)) * t - (16 * (SWs * SWs) * (t * ((2 * MZs + t) * (2 * MZs + t)) + 2 * (MZs * MZs) * u + t * (u * u))) / (u * u) - ((3 - 8 * SWs + 4 * (SWs * SWs)) * (3 - 8 * SWs + 4 * (SWs * SWs)) * (4 * MZs * (t * t) + 2 * (MZs * MZs) * (2 * t + u) + t * (t * t + u * u))) / (SWs * SWs * (u * u))) * D0(t, 0, s, 0, 0, 0, 0, 0, MZs, MZs)) / (576. * (CWs * CWs)) - (ALs * ((-9 + 48 * SWs - 68 * (SWs * SWs) + 32 * (SWs * SWs * SWs) - 16 * (SWs * SWs * SWs * SWs)) * (t * t) * u + 16 * MZs * (SWs * SWs) * (5 - 8 * SWs + 4 * (SWs * SWs)) * (u * u) + 4 * (SWs * SWs) * (5 - 8 * SWs + 4 * (SWs * SWs)) * (u * u * u) + 8 * (MZs * MZs) * (SWs * SWs) * (5 - 8 * SWs + 4 * (SWs * SWs)) * (t + 2 * u)) * D0(u, 0, s, 0, 0, 0, 0, 0, MZs, MZs)) / (288. * (CWs * CWs) * (SWs * SWs) * (t * t)) - (ALs * AZ * (6 * MZs * (t * t * t) - 16 * MZs * s * (-1 + SWs) * SWs * (t * t - t * u + u * u) + (t * t - u * u) * ((3 - 8 * SWs + 8 * (SWs * SWs)) * (t * t) - 8 * (-1 + SWs) * SWs * (u * u)) + MZs * MZs * ((3 - 8 * SWs + 8 * (SWs * SWs)) * (t * t) + 8 * (-1 + SWs) * SWs * (u * u))) * li2(-(s / (MZs - s)))) / (18. * CWs * (MZs - s) * SWs * (t * t) * (u * u)) - (ALs * AZ * (MZs * MZs * (3 - 8 * SWs + 8 * (SWs * SWs)) + 2 * MZs * (3 - 8 * SWs + 8 * (SWs * SWs)) * t + (3 - 8 * SWs + 8 * (SWs * SWs)) * (t * t) + (3 + 8 * SWs - 8 * (SWs * SWs)) * (u * u)) * li2((MZs + t) / t)) / (72. * CWs * (MZs - s) * SWs * (u * u)) - (ALs * AZ * (4 * (MZs * MZs) * (-1 + SWs) * SWs + (-3 + 4 * SWs - 4 * (SWs * SWs)) * (t * t) + 8 * MZs * (-1 + SWs) * SWs * u + 4 * (-1 + SWs) * SWs * (u * u)) * li2((MZs + u) / u)) / (36. * CWs * (MZs - s) * SWs * (t * t)) - (ALs * AZ * (6 * MZs * (t * t * t) - 16 * MZs * s * (-1 + SWs) * SWs * (t * t - t * u + u * u) + (t * t - u * u) * ((3 - 8 * SWs + 8 * (SWs * SWs)) * (t * t) - 8 * (-1 + SWs) * SWs * (u * u)) + MZs * MZs * ((3 - 8 * SWs + 8 * (SWs * SWs)) * (t * t) + 8 * (-1 + SWs) * SWs * (u * u))) * li2c(s / MZs)) / (36. * CWs * (MZs - s) * SWs * (t * t) * (u * u)) + (AA * ALs * (t - u) * clog2(-s) * (t * t * log(-t) - u * u * log(-u))) / (9. * (t * t) * (u * u)) + (ALs * AZ * clog2(1 - s / MZs) * (t * t * (MZs * MZs * (3 - 8 * SWs + 8 * (SWs * SWs)) + 2 * MZs * (3 - 8 * SWs + 8 * (SWs * SWs)) * t + (3 - 8 * SWs + 8 * (SWs * SWs)) * (t * t) + (3 + 8 * SWs - 8 * (SWs * SWs)) * (u * u)) * log(-t) + 2 * (u * u) * (4 * (MZs * MZs) * (-1 + SWs) * SWs + (-3 + 4 * SWs - 4 * (SWs * SWs)) * (t * t) + 8 * MZs * (-1 + SWs) * SWs * u + 4 * (-1 + SWs) * SWs * (u * u)) * log(-u))) / (36. * CWs * (MZs - s) * SWs * (t * t) * (u * u)) - (ALs * (-24 * AA * CWs * (Pi * Pi) * (MZs - s) * s * SWs * (t * t) + 48 * AA * CWs * (Pi * Pi) * (MZs - s) * s * SWs * t * u - 24 * AA * CWs * (Pi * Pi) * (MZs - s) * s * SWs * (u * u) + AZ * (Pi * Pi) * (6 * MZs * (t * t * t) - 16 * MZs * s * (-1 + SWs) * SWs * (t * t - t * u + u * u) + (t * t - u * u) * ((3 - 8 * SWs + 8 * (SWs * SWs)) * (t * t) - 8 * (-1 + SWs) * SWs * (u * u)) + MZs * MZs * ((3 - 8 * SWs + 8 * (SWs * SWs)) * (t * t) + 8 * (-1 + SWs) * SWs * (u * u))) + 3 * AZ * (6 * MZs * (t * t * t) - 16 * MZs * s * (-1 + SWs) * SWs * (t * t - t * u + u * u) + (t * t - u * u) * ((3 - 8 * SWs + 8 * (SWs * SWs)) * (t * t) - 8 * (-1 + SWs) * SWs * (u * u)) + MZs * MZs * ((3 - 8 * SWs + 8 * (SWs * SWs)) * (t * t) + 8 * (-1 + SWs) * SWs * (u * u))) * (log(MZs) * log(MZs)) + 24 * AA * CWs * (MZs - s) * SWs * (t * t) * (t - u) * (log(-t) * log(-t)) + 3 * AZ * (3 - 8 * SWs + 8 * (SWs * SWs)) * (t * t) * (MZs * MZs + 2 * MZs * t + t * t - u * u) * (log(-t) * log(-t)) - 24 * AA * CWs * (MZs - s) * SWs * (t - u) * (u * u) * (log(-u) * log(-u)) + 24 * AZ * (-1 + SWs) * SWs * (u * u) * (MZs * MZs - t * t + 2 * MZs * u + u * u) * (log(-u) * log(-u)) - 6 * AZ * log(MZs) * (t * t * (MZs * MZs * (3 - 8 * SWs + 8 * (SWs * SWs)) + 2 * MZs * (3 - 8 * SWs + 8 * (SWs * SWs)) * t + (3 - 8 * SWs + 8 * (SWs * SWs)) * (t * t) + (3 + 8 * SWs - 8 * (SWs * SWs)) * (u * u)) * log(-t) + 2 * (u * u) * (4 * (MZs * MZs) * (-1 + SWs) * SWs + (-3 + 4 * SWs - 4 * (SWs * SWs)) * (t * t) + 8 * MZs * (-1 + SWs) * SWs * u + 4 * (-1 + SWs) * SWs * (u * u)) * log(-u)) + 18 * AZ * (t * t) * (u * u) * log(-t) * (-1 + log(t * u)) - 18 * AZ * (t * t) * (u * u) * log(-u) * (-1 + log(t * u)))) / (432. * CWs * (MZs - s) * SWs * (t * t) * (u * u));
                break;
            }
            break;
        }

        
        break;
    }
    return (res);
}

Cplx B1nowidth(int it, int ot, int if1, int of1, double s, double cost, const inval &input, int AA, int AZ)
{
    double MZs = sqr(input.get(MZ)),
           MWs = sqr(input.get(MW)),
           MTs = sqr(input.get(MT)),
           AL = input.get(al),
           MIs, MFs;
    double s0 = MZs;
    Cplx res;
    //  if(it==ot)
    //    cerr << "The case of identical initial and final flavors has not been implemented yet" << endl;
    if (it == BQU)
        MIs = MTs;
    else
        MIs = 0;
    if (ot == BQU)
        MFs = MTs;
    else
        MFs = 0;
    switch (if1)
    {
    case VEC:
        switch (of1)
        {
        case VEC:
            res = (-2 * AZ * log(-2 / (-1 + cost)) * Qf[it] * (MZs * I3f[it] + 2 * (MWs - MZs) * Qf[it]) * Qf[ot] * (MZs * I3f[ot] + 2 * (MWs - MZs) * Qf[ot])) / ((1 + cost) * MWs * (MWs - MZs) * MZs) + (2 * AZ * li2((-1 + cost) / (1 + cost)) * Qf[it] * Qf[ot] * (MZs * I3f[ot] * Qf[it] + (MZs * I3f[it] + 2 * (MWs - MZs) * Qf[it]) * Qf[ot])) / ((-1 + cost) * MWs * MZs) + (2 * AZ * li2((1 + cost) / (-1 + cost)) * Qf[it] * Qf[ot] * (MZs * I3f[it] * (MZs * I3f[ot] + (MWs - MZs) * Qf[ot]) + (MWs - MZs) * Qf[it] * (MZs * I3f[ot] + 2 * (MWs - MZs) * Qf[ot]))) / ((1 + cost) * MWs * (MWs - MZs) * MZs) - (2 * AZ * B0fin(MZs, MZs, 0) * Qf[it] * Qf[ot] * (2 * cost * (MWs - MZs) * Qf[it] * (MZs * I3f[ot] + 2 * (MWs - MZs) * Qf[ot]) + MZs * I3f[it] * ((-1 + cost) * MZs * I3f[ot] + 2 * cost * (MWs - MZs) * Qf[ot]))) / ((-1 + cost) * (1 + cost) * MWs * (MWs - MZs) * MZs) + (MZs * B0fin(MZs, MWs, MWs) * (1 + 4 * I3f[it] * I3f[ot])) / (8. * (1 + cost) * sqr(MWs - MZs)) - (MZs * B0fin(((-1 + cost) * MZs) / 2., MFs, MIs) * (1 + 4 * I3f[it] * I3f[ot])) / (8. * (1 + cost) * sqr(MWs - MZs)) - ((1 - cost) * MZs * (MFs + MIs - 2 * MWs - cost * MZs) * C0(((-1 + cost) * MZs) / 2., 0, 0, MFs, MIs, MWs) * (1 + 4 * I3f[it] * I3f[ot])) / (8. * sqr(1 + cost) * sqr(MWs - MZs)) + (MZs * C0(0, MZs, 0, MFs, MWs, MWs) * (MFs + MIs - 2 * MWs - cost * MZs + 4 * I3f[it] * I3f[ot] * (MFs + MIs - 2 * MWs + MZs + cost * MZs + MZs * sqr(cost)))) / (8. * sqr(1 + cost) * sqr(MWs - MZs)) + (MZs * C0(0, MZs, 0, MIs, MWs, MWs) * (MFs + MIs - 2 * MWs - cost * MZs + 4 * I3f[it] * I3f[ot] * (MFs + MIs - 2 * MWs + MZs + cost * MZs + MZs * sqr(cost)))) / (8. * sqr(1 + cost) * sqr(MWs - MZs)) + ((2 * MFs + 2 * MIs + MZs + cost * MZs) * D0(-((1 + cost) * MZs) / 2., 0, MZs, 0, 0, 0, MFs, MIs, MWs, MWs) * (-1 + 4 * I3f[it] * I3f[ot]) * sqr(MZs)) / (32. * sqr(MWs - MZs)) - (AZ * Qf[it] * Qf[ot] * (2 * cost * (MWs - MZs) * Qf[it] * (MZs * I3f[ot] + 2 * (MWs - MZs) * Qf[ot]) + MZs * I3f[it] * ((-1 + cost) * MZs * I3f[ot] + 2 * cost * (MWs - MZs) * Qf[ot])) * sqr(Pi)) / (3. * (-1 + cost) * (1 + cost) * MWs * (MWs - MZs) * MZs) - (Qf[it] * Qf[ot] * (2 * AA * cost * MZs * Qf[it] * Qf[ot] - (AZ * (1 + cost) * MZs * (MZs * I3f[it] * (MZs * I3f[ot] + (MWs - MZs) * Qf[ot]) + (MWs - MZs) * Qf[it] * (MZs * I3f[ot] + 2 * (MWs - MZs) * Qf[ot]))) / (MWs * (MWs - MZs))) * sqr(log((1 - cost) / (1 + cost)))) / (sqr(1 + cost) * sqr(MZs)) - (4 * AA * cost * B0fin(MZs, 0, 0) * sqr(Qf[it]) * sqr(Qf[ot])) / (MZs - MZs * sqr(cost)) + log((1 - cost) / (1 + cost)) * ((-4 * AZ * clog2(1 - s / s0) * Qf[it] * Qf[ot] * (MZs * I3f[it] * (MZs * I3f[ot] + (MWs - MZs) * Qf[ot]) + (MWs - MZs) * Qf[it] * (MZs * I3f[ot] + 2 * (MWs - MZs) * Qf[ot]))) / ((1 + cost) * MWs * (MWs - MZs) * MZs) - (Qf[it] * Qf[ot] * (2 * AA * Qf[it] * Qf[ot] + (AZ * (MZs * I3f[it] + 2 * (MWs - MZs) * Qf[it]) * (MZs * I3f[ot] + 2 * (MWs - MZs) * Qf[ot])) / (MWs * (MWs - MZs)) - (Cplx(0, 4) * AA * Pi * Qf[it] * Qf[ot] * (1 + cost + sqr(cost))) / sqr(1 + cost))) / MZs - (4 * AA * log(2 / sqrt(1 - pow(cost, 2))) * sqr(Qf[it]) * sqr(Qf[ot])) / MZs) - (B0fin(-((1 + cost) * MZs) / 2., 0, 0) * (-2 * MZs * ((-1 + AZ) * MWs + MZs) * I3f[ot] * Qf[ot] * sqr(Qf[it]) + sqr(MZs) * sqr(I3f[ot]) * sqr(Qf[it]) + (-2 * MZs * ((-1 + AZ) * MWs + MZs) * I3f[it] * Qf[it] + sqr(MZs) * sqr(I3f[it]) + 2 * (2 * (-1 + AZ) * MWs * MZs + (1 + AA - 2 * AZ) * sqr(MWs) + sqr(MZs)) * sqr(Qf[it])) * sqr(Qf[ot]))) / ((-1 + cost) * MZs * sqr(MWs)) + (B0fin(MZs, MZs, MZs) * (2 * cost * sqr(MWs - MZs) * sqr(Qf[it]) * (2 * (MWs - MZs) * MZs * I3f[ot] * Qf[ot] + sqr(MZs) * sqr(I3f[ot]) + 2 * sqr(MWs - MZs) * sqr(Qf[ot])) + 2 * (MWs - MZs) * MZs * I3f[it] * Qf[it] * (2 * (-1 + cost) * (MWs - MZs) * MZs * I3f[ot] * Qf[ot] + (-1 + cost) * sqr(MZs) * sqr(I3f[ot]) + 2 * cost * sqr(MWs - MZs) * sqr(Qf[ot])) + sqr(MZs) * sqr(I3f[it]) * (2 * (-1 + cost) * (MWs - MZs) * MZs * I3f[ot] * Qf[ot] + (-1 + cost) * sqr(MZs) * sqr(I3f[ot]) + 2 * cost * sqr(MWs - MZs) * sqr(Qf[ot])))) / (MZs * (-1 + sqr(cost)) * sqr(MWs) * sqr(MWs - MZs)) + (C0(-((1 + cost) * MZs) / 2., 0, 0, 0, 0, MZs) * (-(AZ * (-1 + cost) * (1 + cost) * MWs * Qf[it] * Qf[ot] * (MZs * I3f[ot] * Qf[it] + (MZs * I3f[it] + 2 * (MWs - MZs) * Qf[it]) * Qf[ot])) + (-2 - cost + sqr(cost)) * (2 * (MWs - MZs) * MZs * I3f[ot] * Qf[ot] * sqr(Qf[it]) + sqr(MZs) * sqr(I3f[ot]) * sqr(Qf[it]) + (2 * (MWs - MZs) * MZs * I3f[it] * Qf[it] + sqr(MZs) * sqr(I3f[it]) + 2 * sqr(MWs - MZs) * sqr(Qf[it])) * sqr(Qf[ot])))) / (sqr(-1 + cost) * sqr(MWs)) + (C0(((-1 + cost) * MZs) / 2., 0, 0, 0, 0, MZs) * (AZ * (-1 + cost) * (1 + cost) * MWs * (MWs - MZs) * Qf[it] * Qf[ot] * (MZs * I3f[it] * (MZs * I3f[ot] + (MWs - MZs) * Qf[ot]) + (MWs - MZs) * Qf[it] * (MZs * I3f[ot] + 2 * (MWs - MZs) * Qf[ot])) - powint(MZs, 4) * (-2 + cost + sqr(cost)) * (powint(MZs, -4) * sqr(MWs - MZs) * sqr(Qf[it]) * (2 * (MWs - MZs) * MZs * I3f[ot] * Qf[ot] + sqr(MZs) * sqr(I3f[ot]) + 2 * sqr(MWs - MZs) * sqr(Qf[ot])) + 2 * (MWs - MZs) * I3f[it] * Qf[it] * powint(MZs, -3) * sqr(MZs * I3f[ot] + (MWs - MZs) * Qf[ot]) + sqr(I3f[it]) * sqr(I3f[ot] + ((MWs - MZs) * Qf[ot]) / MZs)))) / (sqr(1 + cost) * sqr(MWs) * sqr(MWs - MZs)) + (B0fin(((-1 + cost) * MZs) / 2., 0, 0) * (2 * AZ * MWs * (MWs - MZs) * Qf[it] * Qf[ot] * (MZs * I3f[it] * (MZs * I3f[ot] + (MWs - MZs) * Qf[ot]) + (MWs - MZs) * Qf[it] * (MZs * I3f[ot] + 2 * (MWs - MZs) * Qf[ot])) - powint(MZs, 4) * (powint(MZs, -4) * sqr(MWs - MZs) * sqr(Qf[it]) * (2 * (MWs - MZs) * MZs * I3f[ot] * Qf[ot] + sqr(MZs) * sqr(I3f[ot]) + 2 * (-2 * MWs * MZs + (1 + AA) * sqr(MWs) + sqr(MZs)) * sqr(Qf[ot])) + 2 * (MWs - MZs) * I3f[it] * Qf[it] * powint(MZs, -3) * sqr(MZs * I3f[ot] + (MWs - MZs) * Qf[ot]) + sqr(I3f[it]) * sqr(I3f[ot] + ((MWs - MZs) * Qf[ot]) / MZs)))) / ((1 + cost) * MZs * sqr(MWs) * sqr(MWs - MZs)) + (Qf[it] * Qf[ot] * (AZ * MZs * I3f[it] * ((-1 + cost) * MZs * I3f[ot] + 2 * cost * (MWs - MZs) * Qf[ot]) * (-1 + sqr(cost)) + 2 * cost * (MWs - MZs) * Qf[it] * (AZ * MZs * I3f[ot] * (-1 + sqr(cost)) - 2 * Qf[ot] * (-(AZ * (MWs - MZs) * (-1 + sqr(cost))) + AA * MWs * (1 + sqr(cost))))) * sqr(log(2 / (1 + cost)))) / (MWs * (MWs - MZs) * MZs * sqr(-1 + pow(cost, 2))) + (MZs * D0(((-1 + cost) * MZs) / 2., 0, MZs, 0, 0, 0, MFs, MIs, MWs, MWs) * (1 + 4 * I3f[it] * I3f[ot]) * (-4 * MWs * MZs + 8 * cost * MWs * MZs - 4 * MWs * MZs * sqr(cost) + 2 * MIs * (2 * (-3 + cost) * MWs + MZs * (2 - cost + sqr(cost))) + 2 * MFs * (-2 * (-1 + cost) * MIs + 2 * (-3 + cost) * MWs + MZs * (2 - cost + sqr(cost))) + 4 * sqr(MFs) + 4 * sqr(MIs) + 12 * sqr(MWs) - 4 * cost * sqr(MWs) + sqr(MZs) - cost * sqr(MZs) + sqr(cost) * sqr(MZs) - sqr(MZs) * trip(cost))) / (32. * sqr(1 + cost) * sqr(MWs - MZs)) - (2 * C0(0, MZs, 0, 0, MZs, MZs) * powint(MZs, 4) * (2 * cost * powint(MZs, -4) * (-3 + sqr(cost)) * sqr(MWs - MZs) * sqr(Qf[it]) * (2 * (MWs - MZs) * MZs * I3f[ot] * Qf[ot] + sqr(MZs) * sqr(I3f[ot]) + 2 * sqr(MWs - MZs) * sqr(Qf[ot])) - (2 * (-MWs + MZs) * I3f[it] * Qf[it] * ((2 * cost * (-3 + sqr(cost)) * sqr(MWs - MZs) * sqr(Qf[ot])) / sqr(MZs) + (2 * (MWs - MZs) * I3f[ot] * Qf[ot] * (2 - 3 * cost + trip(cost))) / MZs + sqr(I3f[ot]) * (2 - 3 * cost + trip(cost)))) / MZs + sqr(I3f[it]) * ((2 * cost * (-3 + sqr(cost)) * sqr(MWs - MZs) * sqr(Qf[ot])) / sqr(MZs) + (2 * (MWs - MZs) * I3f[ot] * Qf[ot] * (2 - 3 * cost + trip(cost))) / MZs + sqr(I3f[ot]) * (2 - 3 * cost + trip(cost))))) / (sqr(-1 + cost) * sqr(1 + cost) * sqr(MWs) * sqr(MWs - MZs)) + log(2 / (1 + cost)) * ((4 * AZ * clog2(1 - s / s0) * Qf[it] * Qf[ot] * (2 * cost * (MWs - MZs) * Qf[it] * (MZs * I3f[ot] + 2 * (MWs - MZs) * Qf[ot]) + MZs * I3f[it] * ((-1 + cost) * MZs * I3f[ot] + 2 * cost * (MWs - MZs) * Qf[ot]))) / ((-1 + cost) * (1 + cost) * MWs * (MWs - MZs) * MZs) - (2 * log((1 - cost) / (1 + cost)) * Qf[it] * Qf[ot] * (-2 * AA * cost * MZs * Qf[it] * Qf[ot] + (AZ * (1 + cost) * MZs * (MZs * I3f[it] * (MZs * I3f[ot] + (MWs - MZs) * Qf[ot]) + (MWs - MZs) * Qf[it] * (MZs * I3f[ot] + 2 * (MWs - MZs) * Qf[ot]))) / (MWs * (MWs - MZs)))) / (sqr(1 + cost) * sqr(MZs)) + (2 * Qf[it] * Qf[ot] * (-((AZ * (MZs * I3f[it] + 2 * (MWs - MZs) * Qf[it]) * (MZs * I3f[ot] + 2 * (MWs - MZs) * Qf[ot])) / ((-1 + cost) * MWs * (MWs - MZs))) + (Cplx(0, 4) * AA * Pi * Qf[it] * Qf[ot] * (cost + trip(cost))) / sqr(-1 + pow(cost, 2)))) / MZs) - (D0(-((1 + cost) * MZs) / 2., 0, MZs, 0, 0, 0, 0, 0, MZs, MZs) * powint(MZs, 5) * (2 * powint(MZs, -4) * sqr(MWs - MZs) * sqr(Qf[it]) * (2 * (MWs - MZs) * MZs * I3f[ot] * Qf[ot] + sqr(MZs) * sqr(I3f[ot]) + 2 * sqr(MWs - MZs) * sqr(Qf[ot])) * (5 - 2 * cost - 2 * sqr(cost) + trip(cost)) - (2 * (-MWs + MZs) * I3f[it] * Qf[it] * ((2 * (1 + cost) * (MWs - MZs) * I3f[ot] * Qf[ot] * sqr(-1 + cost)) / MZs + (1 + cost) * sqr(-1 + cost) * sqr(I3f[ot]) + (2 * sqr(MWs - MZs) * sqr(Qf[ot]) * (5 - 2 * cost - 2 * sqr(cost) + trip(cost))) / sqr(MZs))) / MZs + sqr(I3f[it]) * ((2 * (1 + cost) * (MWs - MZs) * I3f[ot] * Qf[ot] * sqr(-1 + cost)) / MZs + (1 + cost) * sqr(-1 + cost) * sqr(I3f[ot]) + (2 * sqr(MWs - MZs) * sqr(Qf[ot]) * (5 - 2 * cost - 2 * sqr(cost) + trip(cost))) / sqr(MZs)))) / (4. * sqr(-1 + cost) * sqr(MWs) * sqr(MWs - MZs)) - (D0(((-1 + cost) * MZs) / 2., 0, MZs, 0, 0, 0, 0, 0, MZs, MZs) * powint(MZs, 5) * (2 * powint(MZs, -4) * sqr(MWs - MZs) * sqr(Qf[it]) * (2 * (MWs - MZs) * MZs * I3f[ot] * Qf[ot] + sqr(MZs) * sqr(I3f[ot]) + 2 * sqr(MWs - MZs) * sqr(Qf[ot])) * (-5 - 2 * cost + 2 * sqr(cost) + trip(cost)) - (2 * (-MWs + MZs) * I3f[it] * Qf[it] * ((2 * sqr(MWs - MZs) * sqr(Qf[ot]) * (-5 - 2 * cost + 2 * sqr(cost) + trip(cost))) / sqr(MZs) + (2 * (MWs - MZs) * I3f[ot] * Qf[ot] * (-9 - 3 * cost + 3 * sqr(cost) + trip(cost))) / MZs + sqr(I3f[ot]) * (-9 - 3 * cost + 3 * sqr(cost) + trip(cost)))) / MZs + sqr(I3f[it]) * ((2 * sqr(MWs - MZs) * sqr(Qf[ot]) * (-5 - 2 * cost + 2 * sqr(cost) + trip(cost))) / sqr(MZs) + (2 * (MWs - MZs) * I3f[ot] * Qf[ot] * (-9 - 3 * cost + 3 * sqr(cost) + trip(cost))) / MZs + sqr(I3f[ot]) * (-9 - 3 * cost + 3 * sqr(cost) + trip(cost))))) / (4. * sqr(1 + cost) * sqr(MWs) * sqr(MWs - MZs));
            break;
        case AXV:
            res = (-2 * AZ * log(-2 / (-1 + cost)) * I3f[ot] * Qf[it] * (MZs * I3f[it] + 2 * (MWs - MZs) * Qf[it]) * Qf[ot]) / ((1 + cost) * MWs * (MWs - MZs)) + (2 * AZ * li2((-1 + cost) / (1 + cost)) * Qf[it] * Qf[ot] * (I3f[ot] * Qf[it] - I3f[it] * Qf[ot])) / ((-1 + cost) * MWs) + (2 * AZ * li2((1 + cost) / (-1 + cost)) * Qf[it] * Qf[ot] * ((MWs - MZs) * I3f[ot] * Qf[it] + I3f[it] * (MZs * I3f[ot] + (MWs - MZs) * Qf[ot]))) / ((1 + cost) * MWs * (MWs - MZs)) - (2 * AZ * B0fin(MZs, MZs, 0) * Qf[it] * Qf[ot] * (2 * cost * (MWs - MZs) * I3f[ot] * Qf[it] + I3f[it] * ((-1 + cost) * MZs * I3f[ot] + 2 * (-MWs + MZs) * Qf[ot]))) / ((-1 + cost) * (1 + cost) * MWs * (MWs - MZs)) + log((1 - cost) / (1 + cost)) * (-((AZ * I3f[ot] * Qf[it] * (MZs * I3f[it] + 2 * (MWs - MZs) * Qf[it]) * Qf[ot]) / (MWs * (MWs - MZs))) - (4 * AZ * clog2(1 - s / s0) * Qf[it] * Qf[ot] * ((MWs - MZs) * I3f[ot] * Qf[it] + I3f[it] * (MZs * I3f[ot] + (MWs - MZs) * Qf[ot]))) / ((1 + cost) * MWs * (MWs - MZs))) + log(2 / (1 + cost)) * ((-2 * AZ * I3f[ot] * Qf[it] * (MZs * I3f[it] + 2 * (MWs - MZs) * Qf[it]) * Qf[ot]) / ((-1 + cost) * MWs * (MWs - MZs)) - (2 * AZ * log((1 - cost) / (1 + cost)) * Qf[it] * Qf[ot] * ((MWs - MZs) * I3f[ot] * Qf[it] + I3f[it] * (MZs * I3f[ot] + (MWs - MZs) * Qf[ot]))) / ((1 + cost) * MWs * (MWs - MZs)) + (4 * AZ * clog2(1 - s / s0) * Qf[it] * Qf[ot] * (2 * cost * (MWs - MZs) * I3f[ot] * Qf[it] + I3f[it] * ((-1 + cost) * MZs * I3f[ot] + 2 * (-MWs + MZs) * Qf[ot]))) / ((-1 + cost) * (1 + cost) * MWs * (MWs - MZs))) - (B0fin(-((1 + cost) * MZs) / 2., 0, 0) * (I3f[ot] * Qf[it] - I3f[it] * Qf[ot]) * (MZs * I3f[ot] * Qf[it] + (MZs * I3f[it] - 2 * ((-1 + AZ) * MWs + MZs) * Qf[it]) * Qf[ot])) / ((-1 + cost) * sqr(MWs)) + ((1 + cost) * MZs * C0(-((1 + cost) * MZs) / 2., 0, 0, 0, 0, MZs) * (I3f[ot] * Qf[it] - I3f[it] * Qf[ot]) * ((-2 + cost) * MZs * I3f[ot] * Qf[it] + ((-2 + cost) * MZs * I3f[it] + ((-4 + AZ + 2 * cost - AZ * cost) * MWs - 2 * (-2 + cost) * MZs) * Qf[it]) * Qf[ot])) / (sqr(-1 + cost) * sqr(MWs)) + (MZs * B0fin(MZs, MWs, MWs) * (1 + 4 * I3f[it] * I3f[ot])) / (8. * (1 + cost) * sqr(MWs - MZs)) - (MZs * B0fin(((-1 + cost) * MZs) / 2., MFs, MIs) * (1 + 4 * I3f[it] * I3f[ot])) / (8. * (1 + cost) * sqr(MWs - MZs)) - ((1 - cost) * MZs * (MFs + MIs - 2 * MWs - cost * MZs) * C0(((-1 + cost) * MZs) / 2., 0, 0, MFs, MIs, MWs) * (1 + 4 * I3f[it] * I3f[ot])) / (8. * sqr(1 + cost) * sqr(MWs - MZs)) + (MZs * C0(0, MZs, 0, MFs, MWs, MWs) * (MFs + MIs - 2 * MWs - cost * MZs + 4 * I3f[it] * I3f[ot] * (MFs + MIs - 2 * MWs + MZs + cost * MZs + MZs * sqr(cost)))) / (8. * sqr(1 + cost) * sqr(MWs - MZs)) + (MZs * C0(0, MZs, 0, MIs, MWs, MWs) * (MFs + MIs - 2 * MWs - cost * MZs + 4 * I3f[it] * I3f[ot] * (MFs + MIs - 2 * MWs + MZs + cost * MZs + MZs * sqr(cost)))) / (8. * sqr(1 + cost) * sqr(MWs - MZs)) - (B0fin(((-1 + cost) * MZs) / 2., 0, 0) * ((MWs - MZs) * I3f[ot] * Qf[it] + I3f[it] * (MZs * I3f[ot] + (MWs - MZs) * Qf[ot])) * (MZs * I3f[it] * (MZs * I3f[ot] + (MWs - MZs) * Qf[ot]) - (MWs - MZs) * Qf[it] * (-(MZs * I3f[ot]) + 2 * ((-1 + AZ) * MWs + MZs) * Qf[ot]))) / ((1 + cost) * sqr(MWs) * sqr(MWs - MZs)) + ((2 * MFs + 2 * MIs + MZs + cost * MZs) * D0(-((1 + cost) * MZs) / 2., 0, MZs, 0, 0, 0, MFs, MIs, MWs, MWs) * (-1 + 4 * I3f[it] * I3f[ot]) * sqr(MZs)) / (32. * sqr(MWs - MZs)) - (AZ * Qf[it] * Qf[ot] * (2 * cost * (MWs - MZs) * I3f[ot] * Qf[it] + I3f[it] * ((-1 + cost) * MZs * I3f[ot] + 2 * (-MWs + MZs) * Qf[ot])) * sqr(Pi)) / (3. * (-1 + cost) * (1 + cost) * MWs * (MWs - MZs)) + (AZ * Qf[it] * Qf[ot] * (2 * cost * (MWs - MZs) * I3f[ot] * Qf[it] + I3f[it] * ((-1 + cost) * MZs * I3f[ot] + 2 * (-MWs + MZs) * Qf[ot])) * sqr(log(2 / (1 + cost)))) / ((-1 + cost) * (1 + cost) * MWs * (MWs - MZs)) + (AZ * Qf[it] * Qf[ot] * ((MWs - MZs) * I3f[ot] * Qf[it] + I3f[it] * (MZs * I3f[ot] + (MWs - MZs) * Qf[ot])) * sqr(log((1 - cost) / (1 + cost)))) / ((1 + cost) * MWs * (MWs - MZs)) + (MZs * D0(((-1 + cost) * MZs) / 2., 0, MZs, 0, 0, 0, MFs, MIs, MWs, MWs) * (1 + 4 * I3f[it] * I3f[ot]) * (-4 * MWs * MZs + 8 * cost * MWs * MZs - 4 * MWs * MZs * sqr(cost) + 2 * MIs * (2 * (-3 + cost) * MWs + MZs * (2 - cost + sqr(cost))) + 2 * MFs * (-2 * (-1 + cost) * MIs + 2 * (-3 + cost) * MWs + MZs * (2 - cost + sqr(cost))) + 4 * sqr(MFs) + 4 * sqr(MIs) + 12 * sqr(MWs) - 4 * cost * sqr(MWs) + sqr(MZs) - cost * sqr(MZs) + sqr(cost) * sqr(MZs) - sqr(MZs) * trip(cost))) / (32. * sqr(1 + cost) * sqr(MWs - MZs)) - (D0(-((1 + cost) * MZs) / 2., 0, MZs, 0, 0, 0, 0, 0, MZs, MZs) * powint(MZs, 5) * ((-2 * (-MWs + MZs) * I3f[it] * Qf[it] * ((2 * (1 + cost) * (MWs - MZs) * I3f[ot] * Qf[ot] * sqr(-1 + cost)) / MZs + (1 + cost) * sqr(-1 + cost) * sqr(I3f[ot]) + (2 * (-4 + cost + sqr(cost)) * sqr(MWs - MZs) * sqr(Qf[ot])) / sqr(MZs))) / MZs + sqr(I3f[it]) * ((2 * (1 + cost) * (MWs - MZs) * I3f[ot] * Qf[ot] * sqr(-1 + cost)) / MZs + (1 + cost) * sqr(-1 + cost) * sqr(I3f[ot]) + (2 * (-4 + cost + sqr(cost)) * sqr(MWs - MZs) * sqr(Qf[ot])) / sqr(MZs)) + 2 * I3f[ot] * (MZs * I3f[ot] + 2 * (MWs - MZs) * Qf[ot]) * powint(MZs, -3) * sqr(MWs - MZs) * sqr(Qf[it]) * (5 - 2 * cost - 2 * sqr(cost) + trip(cost)))) / (4. * sqr(-1 + cost) * sqr(MWs) * sqr(MWs - MZs)) - (2 * C0(0, MZs, 0, 0, MZs, MZs) * powint(MZs, 4) * (2 * cost * I3f[ot] * (MZs * I3f[ot] + 2 * (MWs - MZs) * Qf[ot]) * powint(MZs, -3) * (-3 + sqr(cost)) * sqr(MWs - MZs) * sqr(Qf[it]) + sqr(I3f[it]) * ((4 * sqr(MWs - MZs) * sqr(Qf[ot])) / sqr(MZs) + (2 * (MWs - MZs) * I3f[ot] * Qf[ot] * (2 - 3 * cost + trip(cost))) / MZs + sqr(I3f[ot]) * (2 - 3 * cost + trip(cost))) + 2 * (MWs - MZs) * I3f[it] * Qf[it] * powint(MZs, -3) * (2 * (2 + cost) * (MWs - MZs) * MZs * I3f[ot] * Qf[ot] * sqr(-1 + cost) + 4 * sqr(MWs - MZs) * sqr(Qf[ot]) + sqr(MZs) * sqr(I3f[ot]) * (2 - 3 * cost + trip(cost))))) / (sqr(-1 + cost) * sqr(1 + cost) * sqr(MWs) * sqr(MWs - MZs)) - (D0(((-1 + cost) * MZs) / 2., 0, MZs, 0, 0, 0, 0, 0, MZs, MZs) * powint(MZs, 5) * (2 * I3f[ot] * (MZs * I3f[ot] + 2 * (MWs - MZs) * Qf[ot]) * powint(MZs, -3) * sqr(MWs - MZs) * sqr(Qf[it]) * (-5 - 2 * cost + 2 * sqr(cost) + trip(cost)) - (2 * (-MWs + MZs) * I3f[it] * Qf[it] * ((2 * (-4 - cost + sqr(cost)) * sqr(MWs - MZs) * sqr(Qf[ot])) / sqr(MZs) + (2 * (MWs - MZs) * I3f[ot] * Qf[ot] * (-9 - 3 * cost + 3 * sqr(cost) + trip(cost))) / MZs + sqr(I3f[ot]) * (-9 - 3 * cost + 3 * sqr(cost) + trip(cost)))) / MZs + sqr(I3f[it]) * ((2 * (-4 - cost + sqr(cost)) * sqr(MWs - MZs) * sqr(Qf[ot])) / sqr(MZs) + (2 * (MWs - MZs) * I3f[ot] * Qf[ot] * (-9 - 3 * cost + 3 * sqr(cost) + trip(cost))) / MZs + sqr(I3f[ot]) * (-9 - 3 * cost + 3 * sqr(cost) + trip(cost))))) / (4. * sqr(1 + cost) * sqr(MWs) * sqr(MWs - MZs)) - (B0fin(MZs, MZs, MZs) * (-2 * cost * I3f[ot] * (MZs * I3f[ot] + 2 * (MWs - MZs) * Qf[ot]) * powint(MZs, -3) * sqr(MWs - MZs) * sqr(Qf[it]) + 2 * (MWs - MZs) * I3f[it] * Qf[it] * powint(MZs, -3) * (-2 * (-1 + cost) * (MWs - MZs) * MZs * I3f[ot] * Qf[ot] - (-1 + cost) * sqr(MZs) * sqr(I3f[ot]) + 2 * sqr(MWs - MZs) * sqr(Qf[ot])) + sqr(I3f[it]) * ((2 * (-1 + cost) * (-MWs + MZs) * I3f[ot] * Qf[ot]) / MZs - (-1 + cost) * sqr(I3f[ot]) + (2 * sqr(MWs - MZs) * sqr(Qf[ot])) / sqr(MZs))) * trip(MZs)) / ((-1 + sqr(cost)) * sqr(MWs) * sqr(MWs - MZs)) + (MZs * C0(((-1 + cost) * MZs) / 2., 0, 0, 0, 0, MZs) * (-(AZ * (-1 + cost) * (1 + cost) * MWs * (MWs - MZs) * Qf[it] * Qf[ot] * ((-MWs + MZs) * I3f[ot] * Qf[it] - I3f[it] * (MZs * I3f[ot] + (MWs - MZs) * Qf[ot]))) - (-2 + cost + sqr(cost)) * (I3f[ot] * (MZs * I3f[ot] + 2 * (MWs - MZs) * Qf[ot]) * powint(MZs, -3) * sqr(MWs - MZs) * sqr(Qf[it]) + 2 * (MWs - MZs) * I3f[it] * Qf[it] * powint(MZs, -3) * sqr(MZs * I3f[ot] + (MWs - MZs) * Qf[ot]) + sqr(I3f[it]) * sqr(I3f[ot] + ((MWs - MZs) * Qf[ot]) / MZs)) * trip(MZs))) / (sqr(1 + cost) * sqr(MWs) * sqr(MWs - MZs));
            break;
        }
        break;
    case AXV:
        switch (of1)
        {
        case VEC:
            res = (-2 * AZ * log(-2 / (-1 + cost)) * I3f[it] * Qf[it] * Qf[ot] * (MZs * I3f[ot] + 2 * (MWs - MZs) * Qf[ot])) / ((1 + cost) * MWs * (MWs - MZs)) - (2 * AZ * li2((-1 + cost) / (1 + cost)) * Qf[it] * Qf[ot] * (I3f[ot] * Qf[it] - I3f[it] * Qf[ot])) / ((-1 + cost) * MWs) + (2 * AZ * li2((1 + cost) / (-1 + cost)) * Qf[it] * Qf[ot] * ((MWs - MZs) * I3f[ot] * Qf[it] + I3f[it] * (MZs * I3f[ot] + (MWs - MZs) * Qf[ot]))) / ((1 + cost) * MWs * (MWs - MZs)) - (2 * AZ * B0fin(MZs, MZs, 0) * Qf[it] * Qf[ot] * (2 * (-MWs + MZs) * I3f[ot] * Qf[it] + I3f[it] * ((-1 + cost) * MZs * I3f[ot] + 2 * cost * (MWs - MZs) * Qf[ot]))) / ((-1 + cost) * (1 + cost) * MWs * (MWs - MZs)) + log((1 - cost) / (1 + cost)) * (-((AZ * I3f[it] * Qf[it] * Qf[ot] * (MZs * I3f[ot] + 2 * (MWs - MZs) * Qf[ot])) / (MWs * (MWs - MZs))) - (4 * AZ * clog2(1 - s / s0) * Qf[it] * Qf[ot] * ((MWs - MZs) * I3f[ot] * Qf[it] + I3f[it] * (MZs * I3f[ot] + (MWs - MZs) * Qf[ot]))) / ((1 + cost) * MWs * (MWs - MZs))) + log(2 / (1 + cost)) * ((-2 * AZ * I3f[it] * Qf[it] * Qf[ot] * (MZs * I3f[ot] + 2 * (MWs - MZs) * Qf[ot])) / ((-1 + cost) * MWs * (MWs - MZs)) - (2 * AZ * log((1 - cost) / (1 + cost)) * Qf[it] * Qf[ot] * ((MWs - MZs) * I3f[ot] * Qf[it] + I3f[it] * (MZs * I3f[ot] + (MWs - MZs) * Qf[ot]))) / ((1 + cost) * MWs * (MWs - MZs)) + (4 * AZ * clog2(1 - s / s0) * Qf[it] * Qf[ot] * (2 * (-MWs + MZs) * I3f[ot] * Qf[it] + I3f[it] * ((-1 + cost) * MZs * I3f[ot] + 2 * cost * (MWs - MZs) * Qf[ot]))) / ((-1 + cost) * (1 + cost) * MWs * (MWs - MZs))) + (B0fin(-((1 + cost) * MZs) / 2., 0, 0) * (I3f[ot] * Qf[it] - I3f[it] * Qf[ot]) * (MZs * I3f[ot] * Qf[it] + (MZs * I3f[it] - 2 * ((-1 + AZ) * MWs + MZs) * Qf[it]) * Qf[ot])) / ((-1 + cost) * sqr(MWs)) - ((1 + cost) * MZs * C0(-((1 + cost) * MZs) / 2., 0, 0, 0, 0, MZs) * (I3f[ot] * Qf[it] - I3f[it] * Qf[ot]) * ((-2 + cost) * MZs * I3f[ot] * Qf[it] + ((-2 + cost) * MZs * I3f[it] + ((-4 + AZ + 2 * cost - AZ * cost) * MWs - 2 * (-2 + cost) * MZs) * Qf[it]) * Qf[ot])) / (sqr(-1 + cost) * sqr(MWs)) + (MZs * B0fin(MZs, MWs, MWs) * (1 + 4 * I3f[it] * I3f[ot])) / (8. * (1 + cost) * sqr(MWs - MZs)) - (MZs * B0fin(((-1 + cost) * MZs) / 2., MFs, MIs) * (1 + 4 * I3f[it] * I3f[ot])) / (8. * (1 + cost) * sqr(MWs - MZs)) - ((1 - cost) * MZs * (MFs + MIs - 2 * MWs - cost * MZs) * C0(((-1 + cost) * MZs) / 2., 0, 0, MFs, MIs, MWs) * (1 + 4 * I3f[it] * I3f[ot])) / (8. * sqr(1 + cost) * sqr(MWs - MZs)) + (MZs * C0(0, MZs, 0, MFs, MWs, MWs) * (MFs + MIs - 2 * MWs - cost * MZs + 4 * I3f[it] * I3f[ot] * (MFs + MIs - 2 * MWs + MZs + cost * MZs + MZs * sqr(cost)))) / (8. * sqr(1 + cost) * sqr(MWs - MZs)) + (MZs * C0(0, MZs, 0, MIs, MWs, MWs) * (MFs + MIs - 2 * MWs - cost * MZs + 4 * I3f[it] * I3f[ot] * (MFs + MIs - 2 * MWs + MZs + cost * MZs + MZs * sqr(cost)))) / (8. * sqr(1 + cost) * sqr(MWs - MZs)) - (B0fin(((-1 + cost) * MZs) / 2., 0, 0) * ((MWs - MZs) * I3f[ot] * Qf[it] + I3f[it] * (MZs * I3f[ot] + (MWs - MZs) * Qf[ot])) * (MZs * I3f[it] * (MZs * I3f[ot] + (MWs - MZs) * Qf[ot]) - (MWs - MZs) * Qf[it] * (-(MZs * I3f[ot]) + 2 * ((-1 + AZ) * MWs + MZs) * Qf[ot]))) / ((1 + cost) * sqr(MWs) * sqr(MWs - MZs)) + ((2 * MFs + 2 * MIs + MZs + cost * MZs) * D0(-((1 + cost) * MZs) / 2., 0, MZs, 0, 0, 0, MFs, MIs, MWs, MWs) * (-1 + 4 * I3f[it] * I3f[ot]) * sqr(MZs)) / (32. * sqr(MWs - MZs)) - (AZ * Qf[it] * Qf[ot] * (2 * (-MWs + MZs) * I3f[ot] * Qf[it] + I3f[it] * ((-1 + cost) * MZs * I3f[ot] + 2 * cost * (MWs - MZs) * Qf[ot])) * sqr(Pi)) / (3. * (-1 + cost) * (1 + cost) * MWs * (MWs - MZs)) + (AZ * Qf[it] * Qf[ot] * (2 * (-MWs + MZs) * I3f[ot] * Qf[it] + I3f[it] * ((-1 + cost) * MZs * I3f[ot] + 2 * cost * (MWs - MZs) * Qf[ot])) * sqr(log(2 / (1 + cost)))) / ((-1 + cost) * (1 + cost) * MWs * (MWs - MZs)) + (AZ * Qf[it] * Qf[ot] * ((MWs - MZs) * I3f[ot] * Qf[it] + I3f[it] * (MZs * I3f[ot] + (MWs - MZs) * Qf[ot])) * sqr(log((1 - cost) / (1 + cost)))) / ((1 + cost) * MWs * (MWs - MZs)) - (B0fin(MZs, MZs, MZs) * (2 * I3f[ot] * (MZs * I3f[ot] + 2 * (MWs - MZs) * Qf[ot]) * sqr(MWs - MZs) * sqr(Qf[it]) + 2 * (-MWs + MZs) * I3f[it] * Qf[it] * (2 * (-1 + cost) * (MWs - MZs) * MZs * I3f[ot] * Qf[ot] + (-1 + cost) * sqr(MZs) * sqr(I3f[ot]) + 2 * cost * sqr(MWs - MZs) * sqr(Qf[ot])) - MZs * sqr(I3f[it]) * (2 * (-1 + cost) * (MWs - MZs) * MZs * I3f[ot] * Qf[ot] + (-1 + cost) * sqr(MZs) * sqr(I3f[ot]) + 2 * cost * sqr(MWs - MZs) * sqr(Qf[ot])))) / ((-1 + sqr(cost)) * sqr(MWs) * sqr(MWs - MZs)) + (MZs * D0(((-1 + cost) * MZs) / 2., 0, MZs, 0, 0, 0, MFs, MIs, MWs, MWs) * (1 + 4 * I3f[it] * I3f[ot]) * (-4 * MWs * MZs + 8 * cost * MWs * MZs - 4 * MWs * MZs * sqr(cost) + 2 * MIs * (2 * (-3 + cost) * MWs + MZs * (2 - cost + sqr(cost))) + 2 * MFs * (-2 * (-1 + cost) * MIs + 2 * (-3 + cost) * MWs + MZs * (2 - cost + sqr(cost))) + 4 * sqr(MFs) + 4 * sqr(MIs) + 12 * sqr(MWs) - 4 * cost * sqr(MWs) + sqr(MZs) - cost * sqr(MZs) + sqr(cost) * sqr(MZs) - sqr(MZs) * trip(cost))) / (32. * sqr(1 + cost) * sqr(MWs - MZs)) - (2 * C0(0, MZs, 0, 0, MZs, MZs) * powint(MZs, 4) * (4 * I3f[ot] * (MZs * I3f[ot] + 2 * (MWs - MZs) * Qf[ot]) * powint(MZs, -3) * sqr(MWs - MZs) * sqr(Qf[it]) - (2 * (-MWs + MZs) * I3f[it] * Qf[it] * ((2 * cost * (-3 + sqr(cost)) * sqr(MWs - MZs) * sqr(Qf[ot])) / sqr(MZs) + (2 * (MWs - MZs) * I3f[ot] * Qf[ot] * (2 - 3 * cost + trip(cost))) / MZs + sqr(I3f[ot]) * (2 - 3 * cost + trip(cost)))) / MZs + sqr(I3f[it]) * ((2 * cost * (-3 + sqr(cost)) * sqr(MWs - MZs) * sqr(Qf[ot])) / sqr(MZs) + (2 * (MWs - MZs) * I3f[ot] * Qf[ot] * (2 - 3 * cost + trip(cost))) / MZs + sqr(I3f[ot]) * (2 - 3 * cost + trip(cost))))) / (sqr(-1 + cost) * sqr(1 + cost) * sqr(MWs) * sqr(MWs - MZs)) - (D0(-((1 + cost) * MZs) / 2., 0, MZs, 0, 0, 0, 0, 0, MZs, MZs) * powint(MZs, 5) * (2 * I3f[ot] * (MZs * I3f[ot] + 2 * (MWs - MZs) * Qf[ot]) * powint(MZs, -3) * (-4 + cost + sqr(cost)) * sqr(MWs - MZs) * sqr(Qf[it]) - (2 * (-MWs + MZs) * I3f[it] * Qf[it] * ((2 * (1 + cost) * (MWs - MZs) * I3f[ot] * Qf[ot] * sqr(-1 + cost)) / MZs + (1 + cost) * sqr(-1 + cost) * sqr(I3f[ot]) + (2 * sqr(MWs - MZs) * sqr(Qf[ot]) * (5 - 2 * cost - 2 * sqr(cost) + trip(cost))) / sqr(MZs))) / MZs + sqr(I3f[it]) * ((2 * (1 + cost) * (MWs - MZs) * I3f[ot] * Qf[ot] * sqr(-1 + cost)) / MZs + (1 + cost) * sqr(-1 + cost) * sqr(I3f[ot]) + (2 * sqr(MWs - MZs) * sqr(Qf[ot]) * (5 - 2 * cost - 2 * sqr(cost) + trip(cost))) / sqr(MZs)))) / (4. * sqr(-1 + cost) * sqr(MWs) * sqr(MWs - MZs)) - (D0(((-1 + cost) * MZs) / 2., 0, MZs, 0, 0, 0, 0, 0, MZs, MZs) * powint(MZs, 5) * (2 * I3f[ot] * (MZs * I3f[ot] + 2 * (MWs - MZs) * Qf[ot]) * powint(MZs, -3) * (-4 - cost + sqr(cost)) * sqr(MWs - MZs) * sqr(Qf[it]) - (2 * (-MWs + MZs) * I3f[it] * Qf[it] * ((2 * sqr(MWs - MZs) * sqr(Qf[ot]) * (-5 - 2 * cost + 2 * sqr(cost) + trip(cost))) / sqr(MZs) + (2 * (MWs - MZs) * I3f[ot] * Qf[ot] * (-9 - 3 * cost + 3 * sqr(cost) + trip(cost))) / MZs + sqr(I3f[ot]) * (-9 - 3 * cost + 3 * sqr(cost) + trip(cost)))) / MZs + sqr(I3f[it]) * ((2 * sqr(MWs - MZs) * sqr(Qf[ot]) * (-5 - 2 * cost + 2 * sqr(cost) + trip(cost))) / sqr(MZs) + (2 * (MWs - MZs) * I3f[ot] * Qf[ot] * (-9 - 3 * cost + 3 * sqr(cost) + trip(cost))) / MZs + sqr(I3f[ot]) * (-9 - 3 * cost + 3 * sqr(cost) + trip(cost))))) / (4. * sqr(1 + cost) * sqr(MWs) * sqr(MWs - MZs)) + (MZs * C0(((-1 + cost) * MZs) / 2., 0, 0, 0, 0, MZs) * (-(AZ * (-1 + cost) * (1 + cost) * MWs * (MWs - MZs) * Qf[it] * Qf[ot] * ((-MWs + MZs) * I3f[ot] * Qf[it] - I3f[it] * (MZs * I3f[ot] + (MWs - MZs) * Qf[ot]))) - (-2 + cost + sqr(cost)) * (I3f[ot] * (MZs * I3f[ot] + 2 * (MWs - MZs) * Qf[ot]) * powint(MZs, -3) * sqr(MWs - MZs) * sqr(Qf[it]) + 2 * (MWs - MZs) * I3f[it] * Qf[it] * powint(MZs, -3) * sqr(MZs * I3f[ot] + (MWs - MZs) * Qf[ot]) + sqr(I3f[it]) * sqr(I3f[ot] + ((MWs - MZs) * Qf[ot]) / MZs)) * trip(MZs))) / (sqr(1 + cost) * sqr(MWs) * sqr(MWs - MZs));
            break;
        case AXV:
            res = (-2 * AZ * MZs * log(-2 / (-1 + cost)) * I3f[it] * I3f[ot] * Qf[it] * Qf[ot]) / ((1 + cost) * MWs * (MWs - MZs)) - (2 * AZ * li2((-1 + cost) / (1 + cost)) * Qf[it] * Qf[ot] * (MZs * I3f[ot] * Qf[it] + (MZs * I3f[it] + 2 * (MWs - MZs) * Qf[it]) * Qf[ot])) / ((-1 + cost) * MWs * MZs) + (2 * AZ * li2((1 + cost) / (-1 + cost)) * Qf[it] * Qf[ot] * (MZs * I3f[it] * (MZs * I3f[ot] + (MWs - MZs) * Qf[ot]) + (MWs - MZs) * Qf[it] * (MZs * I3f[ot] + 2 * (MWs - MZs) * Qf[ot]))) / ((1 + cost) * MWs * (MWs - MZs) * MZs) - (2 * AZ * B0fin(MZs, MZs, 0) * Qf[it] * Qf[ot] * (-2 * (MWs - MZs) * Qf[it] * (MZs * I3f[ot] + 2 * (MWs - MZs) * Qf[ot]) + MZs * I3f[it] * ((-1 + cost) * MZs * I3f[ot] + 2 * (-MWs + MZs) * Qf[ot]))) / ((-1 + cost) * (1 + cost) * MWs * (MWs - MZs) * MZs) + (MZs * B0fin(MZs, MWs, MWs) * (1 + 4 * I3f[it] * I3f[ot])) / (8. * (1 + cost) * sqr(MWs - MZs)) - (MZs * B0fin(((-1 + cost) * MZs) / 2., MFs, MIs) * (1 + 4 * I3f[it] * I3f[ot])) / (8. * (1 + cost) * sqr(MWs - MZs)) - ((1 - cost) * MZs * (MFs + MIs - 2 * MWs - cost * MZs) * C0(((-1 + cost) * MZs) / 2., 0, 0, MFs, MIs, MWs) * (1 + 4 * I3f[it] * I3f[ot])) / (8. * sqr(1 + cost) * sqr(MWs - MZs)) + (MZs * C0(0, MZs, 0, MFs, MWs, MWs) * (MFs + MIs - 2 * MWs - cost * MZs + 4 * I3f[it] * I3f[ot] * (MFs + MIs - 2 * MWs + MZs + cost * MZs + MZs * sqr(cost)))) / (8. * sqr(1 + cost) * sqr(MWs - MZs)) + (MZs * C0(0, MZs, 0, MIs, MWs, MWs) * (MFs + MIs - 2 * MWs - cost * MZs + 4 * I3f[it] * I3f[ot] * (MFs + MIs - 2 * MWs + MZs + cost * MZs + MZs * sqr(cost)))) / (8. * sqr(1 + cost) * sqr(MWs - MZs)) + ((2 * MFs + 2 * MIs + MZs + cost * MZs) * D0(-((1 + cost) * MZs) / 2., 0, MZs, 0, 0, 0, MFs, MIs, MWs, MWs) * (-1 + 4 * I3f[it] * I3f[ot]) * sqr(MZs)) / (32. * sqr(MWs - MZs)) + log((1 - cost) / (1 + cost)) * ((-4 * AZ * clog2(1 - s / s0) * Qf[it] * Qf[ot] * (MZs * I3f[it] * (MZs * I3f[ot] + (MWs - MZs) * Qf[ot]) + (MWs - MZs) * Qf[it] * (MZs * I3f[ot] + 2 * (MWs - MZs) * Qf[ot]))) / ((1 + cost) * MWs * (MWs - MZs) * MZs) - (Qf[it] * Qf[ot] * ((Cplx(0, 4) * AA * cost * Pi * Qf[it] * Qf[ot]) / sqr(1 + cost) + (AZ * I3f[it] * I3f[ot] * sqr(MZs)) / (-(MWs * MZs) + sqr(MWs)))) / MZs) - (AZ * Qf[it] * Qf[ot] * (-2 * (MWs - MZs) * Qf[it] * (MZs * I3f[ot] + 2 * (MWs - MZs) * Qf[ot]) + MZs * I3f[it] * ((-1 + cost) * MZs * I3f[ot] + 2 * (-MWs + MZs) * Qf[ot])) * sqr(Pi)) / (3. * (-1 + cost) * (1 + cost) * MWs * (MWs - MZs) * MZs) - (Qf[it] * Qf[ot] * (2 * AA * cost * MZs * Qf[it] * Qf[ot] - (AZ * (1 + cost) * MZs * (MZs * I3f[it] * (MZs * I3f[ot] + (MWs - MZs) * Qf[ot]) + (MWs - MZs) * Qf[it] * (MZs * I3f[ot] + 2 * (MWs - MZs) * Qf[ot]))) / (MWs * (MWs - MZs))) * sqr(log((1 - cost) / (1 + cost)))) / (sqr(1 + cost) * sqr(MZs)) + (4 * AA * B0fin(MZs, 0, 0) * sqr(Qf[it]) * sqr(Qf[ot])) / (MZs - MZs * sqr(cost)) + (B0fin(-((1 + cost) * MZs) / 2., 0, 0) * (-2 * MZs * ((-1 + AZ) * MWs + MZs) * I3f[ot] * Qf[ot] * sqr(Qf[it]) + sqr(MZs) * sqr(I3f[ot]) * sqr(Qf[it]) + (-2 * MZs * ((-1 + AZ) * MWs + MZs) * I3f[it] * Qf[it] + sqr(MZs) * sqr(I3f[it]) + 2 * (2 * (-1 + AZ) * MWs * MZs + (1 + AA - 2 * AZ) * sqr(MWs) + sqr(MZs)) * sqr(Qf[it])) * sqr(Qf[ot]))) / ((-1 + cost) * MZs * sqr(MWs)) + (B0fin(MZs, MZs, MZs) * (sqr(MZs) * sqr(I3f[it]) * (2 * (-1 + cost) * (MWs - MZs) * MZs * I3f[ot] * Qf[ot] + (-1 + cost) * sqr(MZs) * sqr(I3f[ot]) - 2 * sqr(MWs - MZs) * sqr(Qf[ot])) - 2 * sqr(MWs - MZs) * sqr(Qf[it]) * (2 * (MWs - MZs) * MZs * I3f[ot] * Qf[ot] + sqr(MZs) * sqr(I3f[ot]) + 2 * sqr(MWs - MZs) * sqr(Qf[ot])) - 2 * (MWs - MZs) * MZs * I3f[it] * Qf[it] * (-2 * (-1 + cost) * (MWs - MZs) * MZs * I3f[ot] * Qf[ot] - (-1 + cost) * sqr(MZs) * sqr(I3f[ot]) + 2 * sqr(MWs - MZs) * sqr(Qf[ot])))) / (MZs * (-1 + sqr(cost)) * sqr(MWs) * sqr(MWs - MZs)) - (D0(-((1 + cost) * MZs) / 2., 0, MZs, 0, 0, 0, 0, 0, MZs, MZs) * powint(MZs, 5) * (2 * powint(MZs, -4) * (-4 + cost + sqr(cost)) * sqr(MWs - MZs) * sqr(Qf[it]) * (2 * (MWs - MZs) * MZs * I3f[ot] * Qf[ot] + sqr(MZs) * sqr(I3f[ot]) + 2 * sqr(MWs - MZs) * sqr(Qf[ot])) - (2 * (-MWs + MZs) * I3f[it] * Qf[it] * ((2 * (1 + cost) * (MWs - MZs) * I3f[ot] * Qf[ot] * sqr(-1 + cost)) / MZs + (1 + cost) * sqr(-1 + cost) * sqr(I3f[ot]) + (2 * (-4 + cost + sqr(cost)) * sqr(MWs - MZs) * sqr(Qf[ot])) / sqr(MZs))) / MZs + sqr(I3f[it]) * ((2 * (1 + cost) * (MWs - MZs) * I3f[ot] * Qf[ot] * sqr(-1 + cost)) / MZs + (1 + cost) * sqr(-1 + cost) * sqr(I3f[ot]) + (2 * (-4 + cost + sqr(cost)) * sqr(MWs - MZs) * sqr(Qf[ot])) / sqr(MZs)))) / (4. * sqr(-1 + cost) * sqr(MWs) * sqr(MWs - MZs)) + (C0(-((1 + cost) * MZs) / 2., 0, 0, 0, 0, MZs) * (AZ * (-1 + cost) * (1 + cost) * MWs * Qf[it] * Qf[ot] * (MZs * I3f[ot] * Qf[it] + (MZs * I3f[it] + 2 * (MWs - MZs) * Qf[it]) * Qf[ot]) - (-2 - cost + sqr(cost)) * (2 * (MWs - MZs) * MZs * I3f[ot] * Qf[ot] * sqr(Qf[it]) + sqr(MZs) * sqr(I3f[ot]) * sqr(Qf[it]) + (2 * (MWs - MZs) * MZs * I3f[it] * Qf[it] + sqr(MZs) * sqr(I3f[it]) + 2 * sqr(MWs - MZs) * sqr(Qf[it])) * sqr(Qf[ot])))) / (sqr(-1 + cost) * sqr(MWs)) + (C0(((-1 + cost) * MZs) / 2., 0, 0, 0, 0, MZs) * (AZ * (-1 + cost) * (1 + cost) * MWs * (MWs - MZs) * Qf[it] * Qf[ot] * (MZs * I3f[it] * (MZs * I3f[ot] + (MWs - MZs) * Qf[ot]) + (MWs - MZs) * Qf[it] * (MZs * I3f[ot] + 2 * (MWs - MZs) * Qf[ot])) - powint(MZs, 4) * (-2 + cost + sqr(cost)) * (powint(MZs, -4) * sqr(MWs - MZs) * sqr(Qf[it]) * (2 * (MWs - MZs) * MZs * I3f[ot] * Qf[ot] + sqr(MZs) * sqr(I3f[ot]) + 2 * sqr(MWs - MZs) * sqr(Qf[ot])) + 2 * (MWs - MZs) * I3f[it] * Qf[it] * powint(MZs, -3) * sqr(MZs * I3f[ot] + (MWs - MZs) * Qf[ot]) + sqr(I3f[it]) * sqr(I3f[ot] + ((MWs - MZs) * Qf[ot]) / MZs)))) / (sqr(1 + cost) * sqr(MWs) * sqr(MWs - MZs)) + (B0fin(((-1 + cost) * MZs) / 2., 0, 0) * (2 * AZ * MWs * (MWs - MZs) * Qf[it] * Qf[ot] * (MZs * I3f[it] * (MZs * I3f[ot] + (MWs - MZs) * Qf[ot]) + (MWs - MZs) * Qf[it] * (MZs * I3f[ot] + 2 * (MWs - MZs) * Qf[ot])) - powint(MZs, 4) * (powint(MZs, -4) * sqr(MWs - MZs) * sqr(Qf[it]) * (2 * (MWs - MZs) * MZs * I3f[ot] * Qf[ot] + sqr(MZs) * sqr(I3f[ot]) + 2 * (-2 * MWs * MZs + (1 + AA) * sqr(MWs) + sqr(MZs)) * sqr(Qf[ot])) + 2 * (MWs - MZs) * I3f[it] * Qf[it] * powint(MZs, -3) * sqr(MZs * I3f[ot] + (MWs - MZs) * Qf[ot]) + sqr(I3f[it]) * sqr(I3f[ot] + ((MWs - MZs) * Qf[ot]) / MZs)))) / ((1 + cost) * MZs * sqr(MWs) * sqr(MWs - MZs)) + log(2 / (1 + cost)) * ((-4 * AZ * clog2(1 - s / s0) * Qf[it] * Qf[ot] * (2 * (MWs - MZs) * Qf[it] * (MZs * I3f[ot] + 2 * (MWs - MZs) * Qf[ot]) + MZs * I3f[it] * ((MZs - cost * MZs) * I3f[ot] + 2 * (MWs - MZs) * Qf[ot]))) / ((-1 + cost) * (1 + cost) * MWs * (MWs - MZs) * MZs) - (2 * log((1 - cost) / (1 + cost)) * Qf[it] * Qf[ot] * (-2 * AA * cost * MZs * Qf[it] * Qf[ot] + (AZ * (1 + cost) * MZs * (MZs * I3f[it] * (MZs * I3f[ot] + (MWs - MZs) * Qf[ot]) + (MWs - MZs) * Qf[it] * (MZs * I3f[ot] + 2 * (MWs - MZs) * Qf[ot]))) / (MWs * (MWs - MZs)))) / (sqr(1 + cost) * sqr(MZs)) - (2 * Qf[it] * Qf[ot] * (Cplx(0, 8) * AA * MWs * (MWs - MZs) * Pi * Qf[it] * Qf[ot] * sqr(cost) + AZ * (-1 + cost) * I3f[it] * I3f[ot] * sqr(1 + cost) * sqr(MZs))) / (MWs * (MWs - MZs) * MZs * sqr(-1 + pow(cost, 2)))) - (Qf[it] * Qf[ot] * (-(AZ * MZs * I3f[it] * ((-1 + cost) * MZs * I3f[ot] + 2 * (-MWs + MZs) * Qf[ot]) * (-1 + sqr(cost))) + 2 * (MWs - MZs) * Qf[it] * (AZ * MZs * I3f[ot] * (-1 + sqr(cost)) + 2 * Qf[ot] * (AZ * (MWs - MZs) * (-1 + sqr(cost)) - 2 * AA * MWs * sqr(cost)))) * sqr(log(2 / (1 + cost)))) / (MWs * (MWs - MZs) * MZs * sqr(-1 + pow(cost, 2))) + (MZs * D0(((-1 + cost) * MZs) / 2., 0, MZs, 0, 0, 0, MFs, MIs, MWs, MWs) * (1 + 4 * I3f[it] * I3f[ot]) * (-4 * MWs * MZs + 8 * cost * MWs * MZs - 4 * MWs * MZs * sqr(cost) + 2 * MIs * (2 * (-3 + cost) * MWs + MZs * (2 - cost + sqr(cost))) + 2 * MFs * (-2 * (-1 + cost) * MIs + 2 * (-3 + cost) * MWs + MZs * (2 - cost + sqr(cost))) + 4 * sqr(MFs) + 4 * sqr(MIs) + 12 * sqr(MWs) - 4 * cost * sqr(MWs) + sqr(MZs) - cost * sqr(MZs) + sqr(cost) * sqr(MZs) - sqr(MZs) * trip(cost))) / (32. * sqr(1 + cost) * sqr(MWs - MZs)) - (2 * C0(0, MZs, 0, 0, MZs, MZs) * powint(MZs, 4) * (4 * powint(MZs, -4) * sqr(MWs - MZs) * sqr(Qf[it]) * (2 * (MWs - MZs) * MZs * I3f[ot] * Qf[ot] + sqr(MZs) * sqr(I3f[ot]) + 2 * sqr(MWs - MZs) * sqr(Qf[ot])) + sqr(I3f[it]) * ((4 * sqr(MWs - MZs) * sqr(Qf[ot])) / sqr(MZs) + (2 * (MWs - MZs) * I3f[ot] * Qf[ot] * (2 - 3 * cost + trip(cost))) / MZs + sqr(I3f[ot]) * (2 - 3 * cost + trip(cost))) + 2 * (MWs - MZs) * I3f[it] * Qf[it] * powint(MZs, -3) * (2 * (2 + cost) * (MWs - MZs) * MZs * I3f[ot] * Qf[ot] * sqr(-1 + cost) + 4 * sqr(MWs - MZs) * sqr(Qf[ot]) + sqr(MZs) * sqr(I3f[ot]) * (2 - 3 * cost + trip(cost))))) / (sqr(-1 + cost) * sqr(1 + cost) * sqr(MWs) * sqr(MWs - MZs)) - (D0(((-1 + cost) * MZs) / 2., 0, MZs, 0, 0, 0, 0, 0, MZs, MZs) * powint(MZs, 5) * (2 * powint(MZs, -4) * (-4 - cost + sqr(cost)) * sqr(MWs - MZs) * sqr(Qf[it]) * (2 * (MWs - MZs) * MZs * I3f[ot] * Qf[ot] + sqr(MZs) * sqr(I3f[ot]) + 2 * sqr(MWs - MZs) * sqr(Qf[ot])) - (2 * (-MWs + MZs) * I3f[it] * Qf[it] * ((2 * (-4 - cost + sqr(cost)) * sqr(MWs - MZs) * sqr(Qf[ot])) / sqr(MZs) + (2 * (MWs - MZs) * I3f[ot] * Qf[ot] * (-9 - 3 * cost + 3 * sqr(cost) + trip(cost))) / MZs + sqr(I3f[ot]) * (-9 - 3 * cost + 3 * sqr(cost) + trip(cost)))) / MZs + sqr(I3f[it]) * ((2 * (-4 - cost + sqr(cost)) * sqr(MWs - MZs) * sqr(Qf[ot])) / sqr(MZs) + (2 * (MWs - MZs) * I3f[ot] * Qf[ot] * (-9 - 3 * cost + 3 * sqr(cost) + trip(cost))) / MZs + sqr(I3f[ot]) * (-9 - 3 * cost + 3 * sqr(cost) + trip(cost))))) / (4. * sqr(1 + cost) * sqr(MWs) * sqr(MWs - MZs));
        }
        break;
    }
    return (res * sqr(AL));
}
// gamma-Z box contribution to R. without IFI subtraction term, i.e. adding deltaG term back)
Cplx bRaz1s(int it, int ot, double s, double cost, const inval &input)
{
    double AL = input.get(al);
    double mzs = sqr(input.get(MZ));
    int AA = 1, AZ = 1;
    Cplx res = -(AZ * li2((-1 + cost) / (1 + cost))) + AZ * li2((1 + cost) / (-1 + cost)) + log((1 - cost) / (1 + cost)) * (-AZ / 2. - (AZ * log(-4 / (-1 + sqr(cost)))) / 2.) - AZ * 2 * log((1 - cost) / (1 + cost)) * clog2(1 - s / mzs);
    return (res * (AL * Qf[it] * Qf[ot]) / Pi);
}